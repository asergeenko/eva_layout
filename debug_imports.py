#!/usr/bin/env python3
"""Debug script to test imports for Streamlit Cloud."""

import sys
import traceback

def test_imports():
    """Test all imports required by the application."""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ –¥–ª—è Streamlit Cloud")
    print("=" * 50)
    
    # Test basic imports
    try:
        import streamlit as st
        print("‚úÖ streamlit –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå streamlit: {e}")
        return False
    
    try:
        import pandas as pd
        print("‚úÖ pandas –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå pandas: {e}")
        return False
    
    try:
        import numpy as np
        print("‚úÖ numpy –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå numpy: {e}")
        return False
    
    try:
        from shapely.geometry import Polygon
        print("‚úÖ shapely –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå shapely: {e}")
        return False
    
    try:
        import ezdxf
        print("‚úÖ ezdxf –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå ezdxf: {e}")
        return False
    
    try:
        import matplotlib.pyplot as plt
        print("‚úÖ matplotlib –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå matplotlib: {e}")
        return False
    
    # Test layout_optimizer module
    try:
        import layout_optimizer
        print(f"‚úÖ layout_optimizer –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω (–≤–µ—Ä—Å–∏—è: {getattr(layout_optimizer, '__version__', 'unknown')})")
        
        # Test specific functions
        required_functions = [
            'parse_dxf', 
            'bin_packing', 
            'bin_packing_with_inventory', 
            'save_dxf_layout', 
            'plot_layout', 
            'plot_input_polygons', 
            'scale_polygons_to_fit'
        ]
        
        for func_name in required_functions:
            if hasattr(layout_optimizer, func_name):
                print(f"  ‚úÖ {func_name}")
            else:
                print(f"  ‚ùå {func_name} –ù–ï –ù–ê–ô–î–ï–ù–ê!")
                return False
                
    except Exception as e:
        print(f"‚ùå layout_optimizer: {e}")
        traceback.print_exc()
        return False
    
    print("=" * 50)
    print("üéâ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    return True

if __name__ == "__main__":
    success = test_imports()
    sys.exit(0 if success else 1)