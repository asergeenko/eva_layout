#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ –ø–æ–ª–∏–≥–æ–Ω–æ–≤ –≤ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
"""

import sys
sys.path.insert(0, '.')

import os
from layout_optimizer import parse_dxf_complete

def debug_polygon_sizes():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –ø–æ–ª–∏–≥–æ–Ω–æ–≤"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –†–ê–ó–ú–ï–†–û–í –ü–û–õ–ò–ì–û–ù–û–í")
    print("=" * 50)
    
    tank_files = [
        "dxf_samples/TANK 300/1.dxf",
        "dxf_samples/TANK 300/4.dxf"
    ]
    
    for tank_file in tank_files:
        if not os.path.exists(tank_file):
            print(f"‚ùå –§–∞–π–ª {tank_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            continue
            
        print(f"\nüìã –§–ê–ô–õ: {os.path.basename(tank_file)}")
        
        result = parse_dxf_complete(tank_file, verbose=False)
        
        print(f"  –ü–æ–ª–∏–≥–æ–Ω–æ–≤: {len(result['polygons'])}")
        
        for i, poly in enumerate(result['polygons']):
            bounds = poly.bounds
            width = bounds[2] - bounds[0]
            height = bounds[3] - bounds[1]
            area = poly.area
            
            print(f"  –ü–æ–ª–∏–≥–æ–Ω {i}: {width:.1f}√ó{height:.1f}–º–º, –ø–ª–æ—â–∞–¥—å: {area:.0f}")
            print(f"    Bounds: ({bounds[0]:.1f}, {bounds[1]:.1f}, {bounds[2]:.1f}, {bounds[3]:.1f})")
            
            # –í—ã—á–∏—Å–ª—è–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –∑–∞–∑–æ—Ä
            min_gap = max(5.0, min(width, height) * 0.2)
            print(f"    –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –∑–∞–∑–æ—Ä: {min_gap:.1f}–º–º")

if __name__ == "__main__":
    debug_polygon_sizes()