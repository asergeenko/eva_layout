Timer unit: 1e-09 s

Total time: 0.00319347 s
File: /home/sasha/proj/2025/eva_layout/layout_optimizer.py
Function: bin_packing_with_inventory at line 1617

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
  1617                                           @profile
  1618                                           def bin_packing_with_inventory(
  1619                                               carpets: list[Carpet],
  1620                                               available_sheets: list[dict],
  1621                                               verbose: bool = True,
  1622                                               max_sheets_per_order: int = None,
  1623                                               progress_callback=None,
  1624                                           ) -> tuple[list[dict], list[tuple]]:
  1625                                               """Optimize placement of polygons on available sheets with inventory tracking."""
  1626         1     304100.0 304100.0      9.5      logger.info("=== НАЧАЛО bin_packing_with_inventory ===")
  1627         2     158127.0  79063.5      5.0      logger.info(
  1628         1       2864.0   2864.0      0.1          f"Входные параметры: {len(carpets)} полигонов, {len(available_sheets)} типов листов, max_sheets_per_order={max_sheets_per_order}"
  1629                                               )
  1630                                           
  1631         1       1955.0   1955.0      0.1      placed_layouts = []
  1632         1       1397.0   1397.0      0.0      all_unplaced = []
  1633         2       3282.0   1641.0      0.1      sheet_inventory = [
  1634         2       6217.0   3108.5      0.2          sheet.copy() for sheet in available_sheets
  1635                                               ]  # Copy to avoid modifying original
  1636                                           
  1637         1       1886.0   1886.0      0.1      if verbose:
  1638                                                   total_available = sum(
  1639                                                       sheet["count"] - sheet["used"] for sheet in sheet_inventory
  1640                                                   )
  1641                                                   st.info(
  1642                                                       f"Начинаем размещение {len(carpets)} полигонов на {total_available} доступных листах"
  1643                                                   )
  1644                                                   if max_sheets_per_order:
  1645                                                       st.info(f"Ограничение: максимум {max_sheets_per_order} листов на заказ")
  1646                                           
  1647                                               # Group polygons by order_id and separate by priority
  1648         1     136055.0 136055.0      4.3      logger.info("Группировка полигонов по order_id и приоритету...")
  1649         1       1467.0   1467.0      0.0      order_groups = {}
  1650         1       2304.0   2304.0      0.1      priority2_carpets = []  # Polygons with priority 2 for later processing
  1651                                           
  1652        41      57347.0   1398.7      1.8      for carpet in carpets:
  1653                                                   # Separate priority 2 polygons for later processing
  1654        40      58030.0   1450.8      1.8          if carpet.priority == 2:
  1655        40      54695.0   1367.4      1.7              priority2_carpets.append(carpet)
  1656                                                   else:
  1657                                                       # Process priority 1 and Excel files normally
  1658                                                       if carpet.order_id not in order_groups:
  1659                                                           order_groups[carpet.order_id] = []
  1660                                                           logger.debug(f"Создана новая группа для заказа: {carpet.order_id}")
  1661                                                       order_groups[carpet.order_id].append(carpet)
  1662                                           
  1663         2     165320.0  82660.0      5.2      logger.info(
  1664         1       1956.0   1956.0      0.1          f"Группировка завершена: {len(order_groups)} уникальных заказов, {len(priority2_carpets)} полигонов приоритета 2"
  1665                                               )
  1666         1       1955.0   1955.0      0.1      for order_id, group in order_groups.items():
  1667                                                   logger.info(f"  • Заказ {order_id}: {len(group)} файлов")
  1668         1       1467.0   1467.0      0.0      if priority2_carpets:
  1669         2     182920.0  91460.0      5.7          logger.info(
  1670         1       1886.0   1886.0      0.1              f"  • Приоритет 2 (заполнение пустот): {len(priority2_carpets)} файлов"
  1671                                                   )
  1672                                           
  1673         1        978.0    978.0      0.0      sheet_counter = 0
  1674                                           
  1675                                               # Track sheets used per order for constraint checking
  1676         1       1886.0   1886.0      0.1      order_sheet_usage = {order_id: 0 for order_id in order_groups.keys()}
  1677                                           
  1678         2     178311.0  89155.5      5.6      logger.info(
  1679         1       1397.0   1397.0      0.0          f"Используем упрощенный эффективный алгоритм: {len(order_groups)} заказов"
  1680                                               )
  1681                                           
  1682                                               # Check if we only have priority 2 polygons
  1683         1       1956.0   1956.0      0.1      if not order_groups and priority2_carpets:
  1684         2     169022.0  84511.0      5.3          logger.info(
  1685         1       1886.0   1886.0      0.1              f"Только файлы приоритета 2: {len(priority2_carpets)} файлов не размещаются (новые листы не создаются)"
  1686                                                   )
  1687         1       4260.0   4260.0      0.1          if verbose:
  1688                                                       st.warning(
  1689                                                           f"⚠️ Только файлы приоритета 2: {len(priority2_carpets)} файлов не размещаются (новые листы не создаются)"
  1690                                                       )
  1691         1       2375.0   2375.0      0.1          all_unplaced.extend(priority2_carpets)
  1692                                           
  1693                                                   # Progress update for early return
  1694         1       1466.0   1466.0      0.0          if progress_callback:
  1695         2    1679950.0 839975.0     52.6              progress_callback(
  1696         1       1466.0   1466.0      0.0                  100, "Завершено: только файлы приоритета 2 (не размещены)"
  1697                                                       )
  1698                                           
  1699         1       3283.0   3283.0      0.1          return placed_layouts, all_unplaced
  1700                                           
  1701                                               # NEW LOGIC: Priority queue for orders based on MAX_SHEETS_PER_ORDER constraint
  1702                                               # Track which order was placed first and its starting sheet
  1703                                               order_first_sheet = {}  # order_id -> first_sheet_number
  1704                                           
  1705                                               # Process orders using priority queue logic
  1706                                               remaining_orders = dict(order_groups)  # Copy to modify
  1707                                               max_iterations = max(
  1708                                                   50, len(remaining_orders) * 25
  1709                                               )  # Safety limit with higher multiplier
  1710                                               iteration_count = 0
  1711                                           
  1712                                               while remaining_orders and any(
  1713                                                   sheet["count"] - sheet["used"] > 0 for sheet in sheet_inventory
  1714                                               ):
  1715                                                   iteration_count += 1
  1716                                                   logger.info(f"--- ИТЕРАЦИЯ {iteration_count} ---")
  1717                                                   logger.info(f"Остается заказов: {len(remaining_orders)}")
  1718                                                   for order_id, carpets in remaining_orders.items():
  1719                                                       logger.info(f"  {order_id}: {len(carpets)} полигонов")
  1720                                           
  1721                                                   if False and placed_layouts:  # Only if we have existing sheets
  1722                                                       logger.info("🔄 ПРОВЕРЯЕМ ДОЗАПОЛНЕНИЕ СУЩЕСТВУЮЩИХ ЛИСТОВ")
  1723                                           
  1724                                                       # Find single-polygon orders that can be added to existing sheets
  1725                                                       single_polygon_orders = {
  1726                                                           order_id: order_polygons
  1727                                                           for order_id, order_polygons in remaining_orders.items()
  1728                                                           if len(order_polygons) == 1
  1729                                                       }
  1730                                           
  1731                                                       if single_polygon_orders:
  1732                                                           logger.info(
  1733                                                               f"Найдено {len(single_polygon_orders)} однополигонных заказов для дозаполнения"
  1734                                                           )
  1735                                           
  1736                                                           filled_orders = 0
  1737                                                           for order_id, order_polygons in single_polygon_orders.items():
  1738                                                               carpet = order_polygons[0]
  1739                                                               color = carpet.color
  1740                                           
  1741                                                               # Try to place this single polygon on existing sheets with same color
  1742                                                               placed_successfully = False
  1743                                                               for layout_idx, existing_layout in enumerate(placed_layouts):
  1744                                                                   sheet_color = existing_layout.get("sheet_color", "серый")
  1745                                                                   if color != sheet_color:
  1746                                                                       continue
  1747                                           
  1748                                                                   current_usage = existing_layout.get("usage_percent", 0)
  1749                                                                   if current_usage >= 85:  # Skip nearly full sheets
  1750                                                                       continue
  1751                                           
  1752                                                                   sheet_size = existing_layout["sheet_size"]
  1753                                                                   existing_placed = existing_layout["placed_polygons"]
  1754                                           
  1755                                                                   logger.info(
  1756                                                                       f"Пытаемся дозаполнить лист #{existing_layout['sheet_number']} заказом {order_id}"
  1757                                                                   )
  1758                                           
  1759                                                                   try:
  1760                                                                       additional_placed, still_remaining = (
  1761                                                                           bin_packing_with_existing(
  1762                                                                               [carpet], existing_placed, sheet_size, verbose=False
  1763                                                                           )
  1764                                                                       )
  1765                                           
  1766                                                                       if additional_placed:
  1767                                                                           # Update existing layout
  1768                                                                           placed_layouts[layout_idx]["placed_polygons"] = (
  1769                                                                               existing_placed + additional_placed
  1770                                                                           )
  1771                                                                           new_usage = calculate_usage_percent(
  1772                                                                               placed_layouts[layout_idx]["placed_polygons"],
  1773                                                                               sheet_size,
  1774                                                                           )
  1775                                                                           placed_layouts[layout_idx]["usage_percent"] = new_usage
  1776                                           
  1777                                                                           # Update orders_on_sheet set
  1778                                                                           if "orders_on_sheet" not in placed_layouts[layout_idx]:
  1779                                                                               placed_layouts[layout_idx]["orders_on_sheet"] = (
  1780                                                                                   set()
  1781                                                                               )
  1782                                                                           placed_layouts[layout_idx]["orders_on_sheet"].add(
  1783                                                                               order_id
  1784                                                                           )
  1785                                           
  1786                                                                           # Track sheet usage for this order
  1787                                                                           if order_id not in order_sheet_usage:
  1788                                                                               order_sheet_usage[order_id] = 0
  1789                                                                           order_sheet_usage[order_id] = 1
  1790                                           
  1791                                                                           # Track order first sheet
  1792                                                                           if order_id not in order_first_sheet:
  1793                                                                               order_first_sheet[order_id] = existing_layout[
  1794                                                                                   "sheet_number"
  1795                                                                               ]
  1796                                           
  1797                                                                           filled_orders += 1
  1798                                                                           placed_successfully = True
  1799                                           
  1800                                                                           logger.info(
  1801                                                                               f"✅ ДОЗАПОЛНЕНИЕ УСПЕШНО: Заказ {order_id} размещен на лист #{existing_layout['sheet_number']} ({current_usage:.1f}% → {new_usage:.1f}%)"
  1802                                                                           )
  1803                                                                           break
  1804                                                                   except Exception as e:
  1805                                                                       logger.debug(
  1806                                                                           f"Не удалось дозаполнить лист #{existing_layout['sheet_number']}: {e}"
  1807                                                                       )
  1808                                                                       continue
  1809                                           
  1810                                                               if placed_successfully:
  1811                                                                   # Remove this order from remaining_orders
  1812                                                                   del remaining_orders[order_id]
  1813                                           
  1814                                                           if filled_orders > 0:
  1815                                                               logger.info(
  1816                                                                   f"Дозаполнение завершено: {filled_orders} заказов размещено на существующих листах"
  1817                                                               )
  1818                                                               placed_on_current_sheet = True
  1819                                                               continue  # Skip to next iteration, don't create new sheets
  1820                                           
  1821                                                   # If no orders were filled by existing sheets, proceed with normal sheet creation
  1822                                           
  1823                                                   if iteration_count > max_iterations:
  1824                                                       logger.error(
  1825                                                           f"Превышен лимит итераций ({max_iterations}), прерываем выполнение"
  1826                                                       )
  1827                                                       break
  1828                                           
  1829                                                   placed_on_current_sheet = False
  1830                                           
  1831                                                   # Try each available sheet type, GROUP BY COLOR for better organization
  1832                                                   # Сначала группируем листы по цвету: чёрный, потом серый, потом остальные
  1833                                                   available_sheet_types = [
  1834                                                       st for st in sheet_inventory if st["count"] - st["used"] > 0
  1835                                                   ]
  1836                                           
  1837                                                   # Группируем по цветам
  1838                                                   sheets_by_color = {}
  1839                                                   for sheet_type in available_sheet_types:
  1840                                                       color = sheet_type.get("color", "серый")
  1841                                                       if color not in sheets_by_color:
  1842                                                           sheets_by_color[color] = []
  1843                                                       sheets_by_color[color].append(sheet_type)
  1844                                           
  1845                                                   # Обрабатываем в порядке: черный, серый, остальные цвета
  1846                                                   color_priority = ["чёрный", "серый"]
  1847                                                   ordered_sheet_types = []
  1848                                           
  1849                                                   for color in color_priority:
  1850                                                       if color in sheets_by_color:
  1851                                                           ordered_sheet_types.extend(sheets_by_color[color])
  1852                                           
  1853                                                   # Добавляем остальные цвета
  1854                                                   for color, sheet_list in sheets_by_color.items():
  1855                                                       if color not in color_priority:
  1856                                                           ordered_sheet_types.extend(sheet_list)
  1857                                           
  1858                                                   for sheet_type in ordered_sheet_types:
  1859                                                       sheet_size = (sheet_type["width"], sheet_type["height"])
  1860                                                       sheet_color = sheet_type.get("color", "серый")
  1861                                           
  1862                                                       # Calculate which sheet number this would be
  1863                                                       next_sheet_number = sheet_counter + 1
  1864                                           
  1865                                                       # NEW APPROACH: Reserve sheets for started orders to guarantee completion
  1866                                                       # Step 1: Check which started orders need priority on this sheet
  1867                                                       priority_orders = []
  1868                                                       blocked_orders = []
  1869                                                       new_orders = []
  1870                                           
  1871                                                       for order_id, order_polygons in remaining_orders.items():
  1872                                                           # Skip orders that don't apply to MAX_SHEETS_PER_ORDER constraint
  1873                                                           is_constrained = (
  1874                                                               max_sheets_per_order is not None
  1875                                                               and order_id != "additional"
  1876                                                               and order_id != "unknown"  # Manual uploads are not limited
  1877                                                               and not str(order_id).startswith(
  1878                                                                   "group_"
  1879                                                               )  # Group uploads are not limited
  1880                                                           )
  1881                                           
  1882                                                           if not is_constrained:
  1883                                                               # Unconstrained orders can be placed anytime
  1884                                                               new_orders.append((order_id, order_polygons))
  1885                                                               continue
  1886                                           
  1887                                                           if order_id in order_first_sheet:
  1888                                                               # Order already started - check if within range
  1889                                                               first_sheet = order_first_sheet[order_id]
  1890                                                               max_allowed_sheet = first_sheet + max_sheets_per_order - 1
  1891                                           
  1892                                                               if next_sheet_number <= max_allowed_sheet:
  1893                                                                   # Within range - MAXIMUM priority (must complete this order)
  1894                                                                   priority_orders.append((order_id, order_polygons))
  1895                                                                   logger.debug(
  1896                                                                       f"Заказ {order_id}: МАКСИМАЛЬНЫЙ приоритет (листы {first_sheet}-{max_allowed_sheet}, текущий {next_sheet_number})"
  1897                                                                   )
  1898                                                               else:
  1899                                                                   # Outside range - blocked from starting new placement
  1900                                                                   blocked_orders.append(order_id)
  1901                                                                   logger.debug(
  1902                                                                       f"Заказ {order_id}: ЗАБЛОКИРОВАН (вне диапазона {first_sheet}-{max_allowed_sheet}, текущий {next_sheet_number})"
  1903                                                                   )
  1904                                                           else:
  1905                                                               # New order - can start only if no priority orders need this sheet
  1906                                                               new_orders.append((order_id, order_polygons))
  1907                                           
  1908                                                       # PRIORITY STRATEGY: If there are started orders within range, give them ALL the space
  1909                                                       if priority_orders:
  1910                                                           # Only consider priority orders - they get the entire sheet
  1911                                                           orders_to_consider = priority_orders
  1912                                                           logger.info(
  1913                                                               f"Лист {next_sheet_number}: РЕЖИМ ПРИОРИТЕТА - {len(priority_orders)} начатых заказов"
  1914                                                           )
  1915                                                       else:
  1916                                                           # No priority orders - allow new orders to start
  1917                                                           # IMPROVED STRATEGY: Sort new orders by carpet count (descending)
  1918                                                           # Orders with more carpets should be processed first as they are harder to fit within MAX_SHEETS_PER_ORDER constraint
  1919                                                           new_orders_sorted = sorted(
  1920                                                               new_orders, key=lambda x: len(x[1]), reverse=True
  1921                                                           )
  1922                                                           orders_to_consider = new_orders_sorted
  1923                                                           logger.info(
  1924                                                               f"Лист {next_sheet_number}: Обычный режим - {len(new_orders_sorted)} новых заказов (отсортированы по убыванию количества ковров)"
  1925                                                           )
  1926                                                           # Log order sorting for debugging
  1927                                                           for order_id, order_polygons in new_orders_sorted[:5]:  # Show top 5
  1928                                                               logger.debug(f"  Заказ {order_id}: {len(order_polygons)} ковров")
  1929                                                           if len(new_orders_sorted) > 5:
  1930                                                               logger.debug(f"  ... еще {len(new_orders_sorted) - 5} заказов")
  1931                                           
  1932                                                       # Collect polygons from orders that can fit on this sheet
  1933                                                       compatible_polygons = []
  1934                                                       orders_to_try = []
  1935                                           
  1936                                                       for order_id, order_polygons in orders_to_consider:
  1937                                                           # Filter polygons by color
  1938                                                           color_matched_polygons = []
  1939                                                           for carpet in order_polygons:
  1940                                                               if carpet.color == sheet_color:
  1941                                                                   color_matched_polygons.append(carpet)
  1942                                           
  1943                                                           if color_matched_polygons:
  1944                                                               compatible_polygons.extend(color_matched_polygons)
  1945                                                               orders_to_try.append(order_id)
  1946                                           
  1947                                                       if not compatible_polygons:
  1948                                                           logger.debug(
  1949                                                               f"Нет совместимых полигонов для листа {sheet_type['name']} цвета {sheet_color}"
  1950                                                           )
  1951                                                           continue  # No compatible polygons for this sheet color
  1952                                           
  1953                                                       # NEW STRATEGY: Try to fill existing sheets BEFORE creating a new one
  1954                                                       filled_existing_sheet = False
  1955                                                       logger.info("🚀 НОВЫЙ АЛГОРИТМ: Попытка дозаполнить существующие листы")
  1956                                           
  1957                                                       # Try to add compatible polygons to existing sheets of the same color first
  1958                                                       for layout_idx, existing_layout in enumerate(placed_layouts):
  1959                                                           if existing_layout.get("sheet_color") == sheet_color:
  1960                                                               current_usage = existing_layout.get("usage_percent", 0)
  1961                                           
  1962                                                               # Skip nearly full sheets (>90%) to avoid tiny gaps
  1963                                                               if current_usage >= 90:
  1964                                                                   continue
  1965                                           
  1966                                                               existing_placed = existing_layout["placed_polygons"]
  1967                                                               sheet_size = existing_layout["sheet_size"]
  1968                                           
  1969                                                               logger.debug(
  1970                                                                   f"Пытаемся дозаполнить лист #{existing_layout['sheet_number']} (заполнение: {current_usage:.1f}%)"
  1971                                                               )
  1972                                           
  1973                                                               try:
  1974                                                                   additional_placed, still_remaining = bin_packing_with_existing(
  1975                                                                       compatible_polygons,
  1976                                                                       existing_placed,
  1977                                                                       sheet_size,
  1978                                                                       verbose=False,
  1979                                                                   )
  1980                                           
  1981                                                                   if additional_placed:
  1982                                                                       logger.info(
  1983                                                                           f"✅ ДОЗАПОЛНЕНИЕ: Лист #{existing_layout['sheet_number']} получил +{len(additional_placed)} полигонов ({current_usage:.1f}% → {calculate_usage_percent(existing_placed + additional_placed, sheet_size):.1f}%)"
  1984                                                                       )
  1985                                           
  1986                                                                       # Update existing layout
  1987                                                                       placed_layouts[layout_idx]["placed_polygons"] = (
  1988                                                                           existing_placed + additional_placed
  1989                                                                       )
  1990                                                                       placed_layouts[layout_idx]["usage_percent"] = (
  1991                                                                           calculate_usage_percent(
  1992                                                                               placed_layouts[layout_idx]["placed_polygons"],
  1993                                                                               sheet_size,
  1994                                                                           )
  1995                                                                       )
  1996                                           
  1997                                                                       # Track orders and remove placed polygons from remaining orders
  1998                                                                       additional_orders_on_sheet = set()
  1999                                                                       for placed_tuple in additional_placed:
  2000                                                                           # Handle different tuple structures for order_id
  2001                                                                           if len(placed_tuple) == 7:
  2002                                                                               # Extended format from bin_packing_with_existing: (polygon, x, y, angle, file_name, color, order_id)
  2003                                                                               placed_order_id = placed_tuple[6]
  2004                                                                           elif len(placed_tuple) > 3:
  2005                                                                               # Standard format: (polygon, file_name, color, order_id)
  2006                                                                               placed_order_id = placed_tuple[3]
  2007                                                                           else:
  2008                                                                               placed_order_id = "unknown"
  2009                                                                           additional_orders_on_sheet.add(placed_order_id)
  2010                                           
  2011                                                                           # Update order sheet tracking
  2012                                                                           if placed_order_id not in order_sheet_usage:
  2013                                                                               order_sheet_usage[placed_order_id] = 0
  2014                                                                           if placed_order_id not in order_first_sheet:
  2015                                                                               order_first_sheet[placed_order_id] = (
  2016                                                                                   existing_layout["sheet_number"]
  2017                                                                               )
  2018                                           
  2019                                                                       # Remove placed polygons from compatible_polygons for next iterations
  2020                                                                       # ИСПРАВЛЕНИЕ: точечное совпадение по 3 полям вместо set-сравнения
  2021                                                                       # Из-за разной длины кортежей (4 vs 7) set-сравнение всегда возвращало False
  2022                                                                       placed_keys = set()
  2023                                                                       for placed_poly in additional_placed:
  2024                                                                           if len(placed_poly) >= 5:
  2025                                                                               # Полигон из bin_packing_with_existing: (polygon, x, y, angle, filename, color, order_id)
  2026                                                                               key = (
  2027                                                                                   placed_poly[4],
  2028                                                                                   placed_poly[5],
  2029                                                                                   placed_poly[6],
  2030                                                                               )  # filename, color, order_id
  2031                                                                           else:
  2032                                                                               # Обычный полигон: (polygon, filename, color, order_id)
  2033                                                                               key = (
  2034                                                                                   placed_poly[1],
  2035                                                                                   placed_poly[2],
  2036                                                                                   placed_poly[3],
  2037                                                                               )
  2038                                                                           placed_keys.add(key)
  2039                                           
  2040                                                                       # Удаляем полигоны с совпадающими ключами
  2041                                                                       compatible_polygons = [
  2042                                                                           p
  2043                                                                           for p in compatible_polygons
  2044                                                                           if (p.filename, p.color, p.order_id) not in placed_keys
  2045                                                                       ]
  2046                                           
  2047                                                                       # Update remaining orders - remove empty orders or reduce polygon counts
  2048                                                                       for order_id in list(remaining_orders.keys()):
  2049                                                                           if order_id in additional_orders_on_sheet:
  2050                                                                               # Count how many polygons from this order were placed
  2051                                                                               # ИСПРАВЛЕНИЕ: правильно извлекаем order_id из разных форматов кортежей
  2052                                                                               placed_from_order = []
  2053                                                                               for p in additional_placed:
  2054                                                                                   poly_order_id = None
  2055                                                                                   if len(p) >= 5:
  2056                                                                                       # Полигон из bin_packing_with_existing: (polygon, x, y, angle, filename, color, order_id)
  2057                                                                                       poly_order_id = p[6] if len(p) > 6 else None
  2058                                                                                   else:
  2059                                                                                       # Обычный полигон: (polygon, filename, color, order_id)
  2060                                                                                       poly_order_id = p[3] if len(p) > 3 else None
  2061                                           
  2062                                                                                   if poly_order_id == order_id:
  2063                                                                                       placed_from_order.append(p)
  2064                                           
  2065                                                                               # Remove exactly those polygons that were placed
  2066                                                                               # ИСПРАВЛЕНИЕ: учитываем правильный формат кортежей
  2067                                                                               for placed_poly in placed_from_order:
  2068                                                                                   # Извлекаем ключ из размещенного полигона
  2069                                                                                   if len(placed_poly) >= 5:
  2070                                                                                       # Полигон из bin_packing_with_existing: (polygon, x, y, angle, filename, color, order_id)
  2071                                                                                       placed_key = (
  2072                                                                                           placed_poly[4],
  2073                                                                                           placed_poly[5],
  2074                                                                                           placed_poly[6],
  2075                                                                                       )
  2076                                                                                   else:
  2077                                                                                       # Обычный полигон: (polygon, filename, color, order_id)
  2078                                                                                       placed_key = (
  2079                                                                                           placed_poly[1],
  2080                                                                                           placed_poly[2],
  2081                                                                                           placed_poly[3],
  2082                                                                                       )
  2083                                           
  2084                                                                                   for orig_carpet in remaining_orders[order_id][:]:
  2085                                                                                       # Сравниваем по ключу (filename, color, order_id)
  2086                                                                                       orig_key = (
  2087                                                                                           orig_carpet.filename,
  2088                                                                                           orig_carpet.color,
  2089                                                                                           orig_carpet.order_id,
  2090                                                                                       )
  2091                                                                                       if orig_key == placed_key:
  2092                                                                                           remaining_orders[order_id].remove(
  2093                                                                                               orig_carpet
  2094                                                                                           )
  2095                                                                                           break
  2096                                           
  2097                                                                               # Remove empty orders
  2098                                                                               if not remaining_orders[order_id]:
  2099                                                                                   logger.info(
  2100                                                                                       f"  Заказ {order_id} полностью размещен (дозаполнение)"
  2101                                                                                   )
  2102                                                                                   del remaining_orders[order_id]
  2103                                           
  2104                                                                       # Update orders on this sheet
  2105                                                                       if "orders_on_sheet" not in placed_layouts[layout_idx]:
  2106                                                                           placed_layouts[layout_idx]["orders_on_sheet"] = set()
  2107                                                                       placed_layouts[layout_idx]["orders_on_sheet"].update(
  2108                                                                           additional_orders_on_sheet
  2109                                                                       )
  2110                                           
  2111                                                                       filled_existing_sheet = True
  2112                                                                       placed_on_current_sheet = True
  2113                                           
  2114                                                                       if verbose:
  2115                                                                           st.success(
  2116                                                                               f"✅ Дозаполнен лист #{existing_layout['sheet_number']}: +{len(additional_placed)} деталей"
  2117                                                                           )
  2118                                           
  2119                                                                       break  # Found space, don't need to create new sheet yet
  2120                                           
  2121                                                               except Exception as e:
  2122                                                                   logger.debug(
  2123                                                                       f"Не удалось дозаполнить лист #{existing_layout['sheet_number']}: {e}"
  2124                                                                   )
  2125                                                                   continue
  2126                                           
  2127                                                       # If we filled an existing sheet, continue to next iteration without creating new sheet
  2128                                                       if filled_existing_sheet:
  2129                                                           continue
  2130                                           
  2131                                                       sheet_counter += 1
  2132                                           
  2133                                                       if verbose:
  2134                                                           st.info(
  2135                                                               f"  Лист #{sheet_counter}: {sheet_type['name']} ({sheet_size[0]}x{sheet_size[1]} см, цвет: {sheet_color})"
  2136                                                           )
  2137                                                           st.info(
  2138                                                               f"  Совместимых полигонов: {len(compatible_polygons)} из заказов: {orders_to_try}"
  2139                                                           )
  2140                                           
  2141                                                       logger.info(
  2142                                                           f"Обрабатываем лист #{sheet_counter}: {len(compatible_polygons)} совместимых полигонов из заказов {orders_to_try}"
  2143                                                       )
  2144                                           
  2145                                                       # Try to place compatible polygons on this sheet
  2146                                                       placed, remaining_from_sheet = bin_packing(
  2147                                                           compatible_polygons, sheet_size, verbose=verbose
  2148                                                       )
  2149                                           
  2150                                                       if placed:  # If we managed to place something
  2151                                                           sheet_type["used"] += 1
  2152                                           
  2153                                                           # Track which orders are represented on this sheet
  2154                                                           orders_on_sheet = set()
  2155                                                           placed_polygon_names = set()
  2156                                           
  2157                                                           for placed_carpet in placed:
  2158                                                               # bin_packing returns: (polygon, x_offset, y_offset, angle, file_name, color, order_id)
  2159                                                               if len(placed_carpet) >= 5:
  2160                                                                   filename = placed_carpet[4]  # file_name is at index 4
  2161                                                               else:
  2162                                                                   filename = "unknown"  # fallback
  2163                                           
  2164                                                               placed_polygon_names.add(filename)
  2165                                           
  2166                                                               # Find which order this polygon belongs to
  2167                                                               found_order = False
  2168                                                               for order_id, order_polygons in remaining_orders.items():
  2169                                                                   for carpet in order_polygons:
  2170                                                                       if carpet.filename == filename:
  2171                                                                           orders_on_sheet.add(order_id)
  2172                                                                           logger.debug(
  2173                                                                               f"    Полигон {filename} принадлежит заказу {order_id}"
  2174                                                                           )
  2175                                                                           found_order = True
  2176                                                                           break
  2177                                                                   if found_order:
  2178                                                                       break
  2179                                           
  2180                                                               if not found_order:
  2181                                                                   logger.warning(f"    Не найден заказ для полигона {filename}")
  2182                                           
  2183                                                           logger.info(
  2184                                                               f"УСПЕХ: Лист #{sheet_counter} содержит заказы: {orders_on_sheet}"
  2185                                                           )
  2186                                           
  2187                                                           # Update order sheet usage and track first sheet
  2188                                                           for order_id in orders_on_sheet:
  2189                                                               if order_id in order_sheet_usage:
  2190                                                                   order_sheet_usage[order_id] += 1
  2191                                           
  2192                                                                   # Track first sheet for MAX_SHEETS_PER_ORDER constraint
  2193                                                                   if order_id not in order_first_sheet:
  2194                                                                       order_first_sheet[order_id] = sheet_counter
  2195                                                                       logger.info(
  2196                                                                           f"  Заказ {order_id}: начат на листе {sheet_counter}"
  2197                                                                       )
  2198                                           
  2199                                                                   logger.info(
  2200                                                                       f"  Заказ {order_id}: теперь использует {order_sheet_usage[order_id]} листов"
  2201                                                                   )
  2202                                           
  2203                                                           placed_layouts.append(
  2204                                                               {
  2205                                                                   "sheet_number": sheet_counter,
  2206                                                                   "sheet_type": sheet_type["name"],
  2207                                                                   "sheet_color": sheet_color,  # Add sheet color directly
  2208                                                                   "sheet_size": sheet_size,
  2209                                                                   "placed_polygons": placed,
  2210                                                                   "usage_percent": calculate_usage_percent(placed, sheet_size),
  2211                                                                   "orders_on_sheet": list(orders_on_sheet),
  2212                                                               }
  2213                                                           )
  2214                                           
  2215                                                           # Update progress callback if provided
  2216                                                           if progress_callback:
  2217                                                               # Better estimate based on actual polygons and sheet capacity
  2218                                                               total_priority1_polygons = len(
  2219                                                                   [
  2220                                                                       p
  2221                                                                       for order_polys in order_groups.values()
  2222                                                                       for p in order_polys
  2223                                                                   ]
  2224                                                               )
  2225                                                               # Estimate sheets needed based on average usage and total polygons
  2226                                                               estimated_total_sheets = max(
  2227                                                                   1, total_priority1_polygons // 4
  2228                                                               )  # Assume 4 polygons per sheet on average
  2229                                                               progress_percent = min(
  2230                                                                   95,
  2231                                                                   50
  2232                                                                   + (len(placed_layouts) / max(1, estimated_total_sheets)) * 40,
  2233                                                               )  # 50-95% range
  2234                                                               progress_callback(
  2235                                                                   progress_percent,
  2236                                                                   f"Создан лист #{sheet_counter} ({sheet_type['name']})",
  2237                                                               )
  2238                                           
  2239                                                           # Remove placed polygons from remaining orders
  2240                                                           # We need to match polygons by both filename AND order_id
  2241                                                           placed_polygon_keys = set()  # Maps (filename, order_id) -> True
  2242                                                           for carpet in placed:
  2243                                                               if len(carpet) >= 5:
  2244                                                                   filename = carpet[4]  # file_name is at index 4
  2245                                                                   if len(carpet) >= 7:
  2246                                                                       order_id = carpet[6]  # order_id is at index 6
  2247                                                                       placed_polygon_keys.add((filename, order_id))
  2248                                                                       logger.debug(
  2249                                                                           f"  Размещен полигон: файл='{filename}', заказ='{order_id}'"
  2250                                                                       )
  2251                                           
  2252                                                           total_removed = 0
  2253                                                           for order_id in list(remaining_orders.keys()):
  2254                                                               original_count = len(remaining_orders[order_id])
  2255                                                               
  2256                                                               # Only remove polygons that were actually placed from this specific order
  2257                                                               new_order_list = []
  2258                                                               for carpet in remaining_orders[order_id]:
  2259                                                                   # Check if this carpet was placed
  2260                                                                   carpet_key = (carpet.filename, carpet.order_id)
  2261                                                                   if carpet_key not in placed_polygon_keys:
  2262                                                                       new_order_list.append(carpet)
  2263                                                               
  2264                                                               remaining_orders[order_id] = new_order_list
  2265                                                               removed_count = original_count - len(remaining_orders[order_id])
  2266                                                               total_removed += removed_count
  2267                                           
  2268                                                               if removed_count > 0:
  2269                                                                   logger.info(
  2270                                                                       f"  Из заказа {order_id} удалено {removed_count} размещенных полигонов"
  2271                                                                   )
  2272                                           
  2273                                                               # Remove empty orders
  2274                                                               if not remaining_orders[order_id]:
  2275                                                                   logger.info(f"  Заказ {order_id} полностью размещен")
  2276                                                                   del remaining_orders[order_id]
  2277                                           
  2278                                                           logger.info(f"Общее количество удаленных полигонов: {total_removed}")
  2279                                                           logger.info(f"Оставшиеся заказы: {list(remaining_orders.keys())}")
  2280                                                           for order_id, carpets in remaining_orders.items():
  2281                                                               logger.info(f"  {order_id}: {len(carpets)} полигонов")
  2282                                           
  2283                                                           placed_on_current_sheet = True
  2284                                           
  2285                                                           if verbose:
  2286                                                               st.success(
  2287                                                                   f"  ✅ Размещено {len(placed)} объектов на листе {sheet_type['name']}"
  2288                                                               )
  2289                                                               st.info(f"  📊 Заказы на листе: {', '.join(orders_on_sheet)}")
  2290                                           
  2291                                                           break  # Move to next iteration with remaining orders
  2292                                           
  2293                                                   if not placed_on_current_sheet:
  2294                                                       # No sheet type could accommodate any remaining polygons in this iteration
  2295                                                       # Check if we still have available sheets of any type
  2296                                                       sheets_still_available = any(
  2297                                                           sheet["count"] - sheet["used"] > 0 for sheet in sheet_inventory
  2298                                                       )
  2299                                           
  2300                                                       if not sheets_still_available:
  2301                                                           logger.warning(
  2302                                                               f"Все листы закончились. Не удалось разместить оставшиеся заказы: {list(remaining_orders.keys())}"
  2303                                                           )
  2304                                                           break
  2305                                                       else:
  2306                                                           # Continue to next iteration - might be color/size mismatch this round
  2307                                                           available_sheets_count = sum(
  2308                                                               max(0, sheet["count"] - sheet["used"]) for sheet in sheet_inventory
  2309                                                           )
  2310                                           
  2311                                                           # Enhanced debugging: show what's blocking placement
  2312                                                           logger.info(f"Не удалось разместить в итерации {iteration_count}:")
  2313                                                           logger.info(f"  Доступно листов: {available_sheets_count}")
  2314                                                           logger.info(f"  Осталось заказов: {len(remaining_orders)}")
  2315                                           
  2316                                                           # Show remaining orders and their polygon counts
  2317                                                           for order_id, order_polygons in remaining_orders.items():
  2318                                                               colors_in_order = {}
  2319                                                               for carpet in order_polygons:
  2320                                                                   color = carpet.color
  2321                                                                   colors_in_order[color] = colors_in_order.get(color, 0) + 1
  2322                                                               logger.info(
  2323                                                                   f"    {order_id}: {len(order_polygons)} полигонов, цвета: {colors_in_order}"
  2324                                                               )
  2325                                           
  2326                                                           # Show available sheets
  2327                                                           for sheet_type in sheet_inventory:
  2328                                                               remaining = sheet_type["count"] - sheet_type["used"]
  2329                                                               if remaining > 0:
  2330                                                                   logger.info(
  2331                                                                       f"    Доступен лист: {sheet_type['name']} цвет {sheet_type.get('color', 'серый')}, осталось: {remaining}"
  2332                                                                   )
  2333                                           
  2334                                                           if verbose:
  2335                                                               st.info(
  2336                                                                   f"⚠️ Пропуск итерации {iteration_count}: нет совместимых комбинаций полигон/лист"
  2337                                                               )
  2338                                                               st.info(
  2339                                                                   f"📋 Осталось {len(remaining_orders)} заказов, {available_sheets_count} листов"
  2340                                                               )
  2341                                           
  2342                                                           continue
  2343                                           
  2344                                               # Check order constraints after placement - both sheet count and adjacency
  2345                                               violated_orders = []
  2346                                               adjacency_violations = []
  2347                                           
  2348                                               for order_id, sheets_used in order_sheet_usage.items():
  2349                                                   # Check sheet count constraint
  2350                                                   if (
  2351                                                       max_sheets_per_order
  2352                                                       and order_id != "additional"
  2353                                                       and order_id != "unknown"  # Manual uploads are not limited
  2354                                                       and not str(order_id).startswith("group_")  # Group uploads are not limited
  2355                                                       and sheets_used > max_sheets_per_order
  2356                                                   ):
  2357                                                       violated_orders.append((order_id, sheets_used))
  2358                                                       logger.error(
  2359                                                           f"НАРУШЕНИЕ ОГРАНИЧЕНИЙ: Заказ {order_id} использует {sheets_used} листов (лимит: {max_sheets_per_order})"
  2360                                                       )
  2361                                           
  2362                                                   # Check adjacency constraint
  2363                                                   if (
  2364                                                       max_sheets_per_order
  2365                                                       and order_id != "additional"
  2366                                                       and order_id != "unknown"
  2367                                                       and not str(order_id).startswith("group_")
  2368                                                       and order_id in order_first_sheet
  2369                                                   ):
  2370                                                       first_sheet = order_first_sheet[order_id]
  2371                                                       # Find all sheets where this order appears
  2372                                                       order_sheets = []
  2373                                                       for layout in placed_layouts:
  2374                                                           if order_id in layout["orders_on_sheet"]:
  2375                                                               order_sheets.append(layout["sheet_number"])
  2376                                           
  2377                                                       if order_sheets:
  2378                                                           min_sheet = min(order_sheets)
  2379                                                           max_sheet = max(order_sheets)
  2380                                                           expected_max_sheet = first_sheet + max_sheets_per_order - 1
  2381                                           
  2382                                                           if max_sheet > expected_max_sheet:
  2383                                                               adjacency_violations.append(
  2384                                                                   (order_id, min_sheet, max_sheet, expected_max_sheet)
  2385                                                               )
  2386                                                               logger.error(
  2387                                                                   f"НАРУШЕНИЕ СМЕЖНОСТИ: Заказ {order_id} размещен на листах {min_sheet}-{max_sheet}, "
  2388                                                                   f"но должен быть в диапазоне {first_sheet}-{expected_max_sheet}"
  2389                                                               )
  2390                                           
  2391                                               if violated_orders or adjacency_violations:
  2392                                                   warning_parts = []
  2393                                                   if violated_orders:
  2394                                                       warning_parts.append("⚠️ Предупреждение: Нарушение ограничений заказов:")
  2395                                                       for order_id, sheets_used in violated_orders:
  2396                                                           warning_parts.append(
  2397                                                               f"Заказ {order_id}: {sheets_used} листов (лимит: {max_sheets_per_order})"
  2398                                                           )
  2399                                           
  2400                                                   if adjacency_violations:
  2401                                                       warning_parts.append("⚠️ Предупреждение: Нарушение смежности листов:")
  2402                                                       for order_id, min_sheet, max_sheet, expected_max in adjacency_violations:
  2403                                                           warning_parts.append(
  2404                                                               f"Заказ {order_id}: листы {min_sheet}-{max_sheet} (ожидалось до {expected_max})"
  2405                                                           )
  2406                                           
  2407                                                   warning_msg = "\n".join(warning_parts)
  2408                                                   logger.warning(warning_msg)
  2409                                                   if verbose:
  2410                                                       st.warning(warning_msg)
  2411                                                   # Don't raise error - allow algorithm to continue with warnings
  2412                                           
  2413                                               # NEW: SINGLE-POLYGON ORDER FILL STRATEGY - Try to place remaining single-polygon orders into existing sheets
  2414                                               if remaining_orders and placed_layouts:
  2415                                                   single_polygon_orders = {
  2416                                                       order_id: order_polygons
  2417                                                       for order_id, order_polygons in remaining_orders.items()
  2418                                                       if len(order_polygons) == 1
  2419                                                   }
  2420                                           
  2421                                                   if single_polygon_orders:
  2422                                                       logger.info(
  2423                                                           f"=== ДОЗАПОЛНЕНИЕ ОДНОКОМПОНЕНТНЫМИ ЗАКАЗАМИ: {len(single_polygon_orders)} заказов ==="
  2424                                                       )
  2425                                                       if verbose:
  2426                                                           st.info(
  2427                                                               f"🔄 Дозаполнение листов однокомпонентными заказами: {len(single_polygon_orders)} заказов"
  2428                                                           )
  2429                                           
  2430                                                       filled_orders = 0
  2431                                                       for order_id, order_polygons in single_polygon_orders.items():
  2432                                                           if len(order_polygons) != 1:
  2433                                                               continue
  2434                                           
  2435                                                           carpet = order_polygons[0]
  2436                                                           color = carpet.color
  2437                                           
  2438                                                           # Try to place this single polygon on existing sheets with same color
  2439                                                           placed_successfully = False
  2440                                                           for layout_idx, layout in enumerate(placed_layouts):
  2441                                                               sheet_color = layout.get("sheet_color", "серый")
  2442                                                               if color != sheet_color:
  2443                                                                   continue
  2444                                           
  2445                                                               current_usage = layout.get("usage_percent", 0)
  2446                                                               if current_usage >= 95:  # Skip nearly full sheets
  2447                                                                   continue
  2448                                           
  2449                                                               sheet_size = layout["sheet_size"]
  2450                                                               existing_placed = layout["placed_polygons"]
  2451                                           
  2452                                                               logger.debug(
  2453                                                                   f"Пытаемся добавить {order_id} на лист #{layout['sheet_number']} (заполнение: {current_usage:.1f}%)"
  2454                                                               )
  2455                                           
  2456                                                               try:
  2457                                                                   additional_placed, still_remaining = bin_packing_with_existing(
  2458                                                                       [carpet], existing_placed, sheet_size, verbose=False
  2459                                                                   )
  2460                                           
  2461                                                                   if additional_placed:
  2462                                                                       # Update the layout with the additional polygon
  2463                                                                       placed_layouts[layout_idx]["placed_polygons"] = (
  2464                                                                           existing_placed + additional_placed
  2465                                                                       )
  2466                                                                       new_usage = calculate_usage_percent(
  2467                                                                           placed_layouts[layout_idx]["placed_polygons"],
  2468                                                                           sheet_size,
  2469                                                                       )
  2470                                                                       placed_layouts[layout_idx]["usage_percent"] = new_usage
  2471                                           
  2472                                                                       # Update orders_on_sheet set
  2473                                                                       if "orders_on_sheet" not in placed_layouts[layout_idx]:
  2474                                                                           placed_layouts[layout_idx]["orders_on_sheet"] = set()
  2475                                                                       placed_layouts[layout_idx]["orders_on_sheet"].add(order_id)
  2476                                           
  2477                                                                       # Track sheet usage for this order
  2478                                                                       if order_id not in order_sheet_usage:
  2479                                                                           order_sheet_usage[order_id] = 0
  2480                                                                       order_sheet_usage[order_id] = (
  2481                                                                           1  # Single polygon order uses 1 sheet
  2482                                                                       )
  2483                                           
  2484                                                                       filled_orders += 1
  2485                                                                       placed_successfully = True
  2486                                           
  2487                                                                       logger.info(
  2488                                                                           f"✅ ДОЗАПОЛНЕНИЕ: Заказ {order_id} размещен на лист #{layout['sheet_number']} ({current_usage:.1f}% → {new_usage:.1f}%)"
  2489                                                                       )
  2490                                                                       if verbose:
  2491                                                                           st.success(
  2492                                                                               f"✅ Заказ {order_id} добавлен на лист #{layout['sheet_number']} ({current_usage:.1f}% → {new_usage:.1f}%)"
  2493                                                                           )
  2494                                                                       break
  2495                                                               except Exception as e:
  2496                                                                   logger.debug(
  2497                                                                       f"Не удалось добавить {order_id} на лист #{layout['sheet_number']}: {e}"
  2498                                                                   )
  2499                                                                   continue
  2500                                           
  2501                                                           if placed_successfully:
  2502                                                               # Remove this order from remaining_orders
  2503                                                               del remaining_orders[order_id]
  2504                                           
  2505                                                       logger.info(f"Дозаполнение завершено: {filled_orders} заказов размещено")
  2506                                                       if verbose:
  2507                                                           st.info(
  2508                                                               f"📊 Дозаполнение: {filled_orders} однокомпонентных заказов размещено"
  2509                                                           )
  2510                                           
  2511                                               remaining_polygons_list = []
  2512                                               for order_id, remaining_polygons in remaining_orders.items():
  2513                                                   remaining_polygons_list.extend(remaining_polygons)
  2514                                           
  2515                                               logger.info(
  2516                                                   f"Проверка дозаполнения: remaining_orders={len(remaining_orders)}, remaining_polygons_list={len(remaining_polygons_list)}, placed_layouts={len(placed_layouts)}"
  2517                                               )
  2518                                           
  2519                                               # НОВОЕ: Создание дополнительных листов для неразмещенных Excel полигонов
  2520                                               # Анализируем неразмещенные полигоны из remaining_polygons_list (Excel полигоны, не приоритет 2)
  2521                                               remaining_excel_polygons = [
  2522                                                   p for p in remaining_polygons_list if p.priority != 2
  2523                                               ]  # Не приоритет 2
  2524                                           
  2525                                               if remaining_excel_polygons and any(
  2526                                                   sheet["count"] - sheet["used"] > 0 for sheet in sheet_inventory
  2527                                               ):
  2528                                                   logger.info(
  2529                                                       f"Создаем дополнительные листы для {len(remaining_excel_polygons)} неразмещенных Excel полигонов"
  2530                                                   )
  2531                                           
  2532                                                   # Группируем по цветам
  2533                                                   polygons_by_color = {}
  2534                                                   for poly in remaining_excel_polygons:
  2535                                                       color = poly.color
  2536                                                       if color not in polygons_by_color:
  2537                                                           polygons_by_color[color] = []
  2538                                                       polygons_by_color[color].append(poly)
  2539                                           
  2540                                                   # Пытаемся создать листы для каждого цвета
  2541                                                   additional_created = 0
  2542                                                   for color, color_polygons in polygons_by_color.items():
  2543                                                       # Найти доступные листы этого цвета
  2544                                                       available_count = 0
  2545                                                       for sheet_type in sheet_inventory:
  2546                                                           if (
  2547                                                               sheet_type["color"] == color
  2548                                                               and sheet_type["used"] < sheet_type["count"]
  2549                                                           ):
  2550                                                               available_count = sheet_type["count"] - sheet_type["used"]
  2551                                           
  2552                                                       if available_count > 0:
  2553                                                           logger.info(
  2554                                                               f"Доступно {available_count} листов цвета {color} для {len(color_polygons)} полигонов"
  2555                                                           )
  2556                                           
  2557                                                           # Пытаемся разместить полигоны на новых листах
  2558                                                           try:
  2559                                                               new_layouts, still_unplaced = bin_packing_with_inventory(
  2560                                                                   color_polygons,
  2561                                                                   [sheet for sheet in sheet_inventory if sheet["color"] == color],
  2562                                                                   verbose=False,
  2563                                                                   max_sheets_per_order=max_sheets_per_order,
  2564                                                               )
  2565                                           
  2566                                                               if new_layouts:
  2567                                                                   # Обновляем номера листов
  2568                                                                   for layout in new_layouts:
  2569                                                                       sheet_counter += 1
  2570                                                                       layout["sheet_number"] = sheet_counter
  2571                                           
  2572                                                                   placed_layouts.extend(new_layouts)
  2573                                                                   additional_created += len(new_layouts)
  2574                                           
  2575                                                                   # Обновляем использование листов
  2576                                                                   for sheet_type in sheet_inventory:
  2577                                                                       if sheet_type["color"] == color:
  2578                                                                           sheet_type["used"] += len(
  2579                                                                               [
  2580                                                                                   layout
  2581                                                                                   for layout in new_layouts
  2582                                                                                   if layout.get("sheet_color") == color
  2583                                                                               ]
  2584                                                                           )
  2585                                                                           break
  2586                                           
  2587                                                                   # Убираем размещенные полигоны из remaining_polygons_list
  2588                                                                   placed_count = sum(
  2589                                                                       len(layout["placed_polygons"]) for layout in new_layouts
  2590                                                                   )
  2591                                                                   remaining_polygons_list = [
  2592                                                                       p
  2593                                                                       for p in remaining_polygons_list
  2594                                                                       if p not in color_polygons[:placed_count]
  2595                                                                   ]
  2596                                           
  2597                                                                   logger.info(
  2598                                                                       f"Создано {len(new_layouts)} дополнительных листов цвета {color}"
  2599                                                                   )
  2600                                           
  2601                                                           except Exception as e:
  2602                                                               logger.warning(
  2603                                                                   f"Ошибка создания дополнительных листов для {color}: {e}"
  2604                                                               )
  2605                                           
  2606                                                   if additional_created > 0:
  2607                                                       logger.info(
  2608                                                           f"✅ Создано {additional_created} дополнительных листов для Excel полигонов"
  2609                                                       )
  2610                                           
  2611                                               if remaining_polygons_list and placed_layouts:
  2612                                                   if verbose:
  2613                                                       st.info(
  2614                                                           f"🔄 Пытаемся дозаполнить {len(placed_layouts)} существующих листов {len(remaining_polygons_list)} оставшимися деталями"
  2615                                                       )
  2616                                               else:
  2617                                                   logger.info(
  2618                                                       f"Дозаполнение не запущено: remaining_polygons_list={len(remaining_polygons_list)}, placed_layouts={len(placed_layouts)}"
  2619                                                   )
  2620                                           
  2621                                                   logger.info(
  2622                                                       f"Попытка дозаполнения: {len(remaining_polygons_list)} полигонов на {len(placed_layouts)} листах"
  2623                                                   )
  2624                                           
  2625                                                   for layout_idx, layout in enumerate(placed_layouts):
  2626                                                       if not remaining_polygons_list:
  2627                                                           break
  2628                                           
  2629                                                       sheet_size = layout["sheet_size"]
  2630                                                       existing_placed = layout["placed_polygons"]
  2631                                                       current_usage = layout["usage_percent"]
  2632                                           
  2633                                                       if current_usage >= 95:  # Skip nearly full sheets
  2634                                                           continue
  2635                                           
  2636                                                       logger.info(
  2637                                                           f"Пытаемся дозаполнить лист #{layout['sheet_number']} (заполнение: {current_usage:.1f}%)"
  2638                                                       )
  2639                                           
  2640                                                       # Try to place remaining polygons on this existing sheet
  2641                                                       try:
  2642                                                           additional_placed, still_remaining = bin_packing_with_existing(
  2643                                                               remaining_polygons_list, existing_placed, sheet_size, verbose=False
  2644                                                           )
  2645                                           
  2646                                                           if additional_placed:
  2647                                                               # Update the layout with additional polygons
  2648                                                               placed_layouts[layout_idx]["placed_polygons"] = (
  2649                                                                   existing_placed + additional_placed
  2650                                                               )
  2651                                                               placed_layouts[layout_idx]["usage_percent"] = (
  2652                                                                   calculate_usage_percent(
  2653                                                                       placed_layouts[layout_idx]["placed_polygons"], sheet_size
  2654                                                                   )
  2655                                                               )
  2656                                           
  2657                                                               new_usage = placed_layouts[layout_idx]["usage_percent"]
  2658                                                               logger.info(
  2659                                                                   f"✅ Дозаполнен лист #{layout['sheet_number']}: +{len(additional_placed)} деталей ({current_usage:.1f}% → {new_usage:.1f}%)"
  2660                                                               )
  2661                                           
  2662                                                               if verbose:
  2663                                                                   st.success(
  2664                                                                       f"✅ Дозаполнен лист #{layout['sheet_number']}: +{len(additional_placed)} деталей ({current_usage:.1f}% → {new_usage:.1f}%)"
  2665                                                                   )
  2666                                           
  2667                                                               # Update remaining polygons list
  2668                                                               remaining_polygons_list = still_remaining
  2669                                           
  2670                                                           else:
  2671                                                               logger.info(f"Лист #{layout['sheet_number']} нельзя дозаполнить")
  2672                                                       except Exception as e:
  2673                                                           logger.warning(
  2674                                                               f"Ошибка при дозаполнении листа #{layout['sheet_number']}: {e}"
  2675                                                           )
  2676                                           
  2677                                               # Add any remaining unplaced polygons to the unplaced list
  2678                                               all_unplaced.extend(remaining_polygons_list)
  2679                                           
  2680                                               logger.info("=== ОКОНЧАНИЕ bin_packing_with_inventory ===")
  2681                                               logger.info(
  2682                                                   f"ИТОГОВЫЙ РЕЗУЛЬТАТ: {len(placed_layouts)} листов использовано, {len(all_unplaced)} объектов не размещено"
  2683                                               )
  2684                                           
  2685                                               logger.info("Финальное распределение по заказам:")
  2686                                               for order_id, sheets_used in order_sheet_usage.items():
  2687                                                   logger.info(f"  • Заказ {order_id}: {sheets_used} листов")
  2688                                           
  2689                                               if verbose:
  2690                                                   st.info(
  2691                                                       f"Размещение завершено: {len(placed_layouts)} листов использовано, {len(all_unplaced)} объектов не размещено"
  2692                                                   )
  2693                                           
  2694                                                   # Show summary by orders using the tracked usage
  2695                                                   if order_sheet_usage:
  2696                                                       st.success("✅ Распределение по заказам:")
  2697                                                       for order_id, sheet_count in order_sheet_usage.items():
  2698                                                           if order_id != "unknown":  # Only show real orders
  2699                                                               status = (
  2700                                                                   "✅"
  2701                                                                   if sheet_count <= (max_sheets_per_order or float("inf"))
  2702                                                                   else "❌"
  2703                                                               )
  2704                                                               st.info(f"  {status} Заказ {order_id}: {sheet_count} листов")
  2705                                           
  2706                                               # PRIORITY 2 PROCESSING: Try to fit priority 2 polygons into existing sheets only
  2707                                               # Размещаем приоритет 2 В САМУЮ ПОСЛЕДНЮЮ ОЧЕРЕДЬ после всех операций
  2708                                               if priority2_carpets and placed_layouts:
  2709                                                   logger.info(
  2710                                                       f"=== ОБРАБОТКА ПРИОРИТЕТА 2: {len(priority2_carpets)} полигонов ==="
  2711                                                   )
  2712                                                   if verbose:
  2713                                                       st.info(
  2714                                                           f"🔄 Размещение файлов приоритета 2: {len(priority2_carpets)} файлов в существующие листы"
  2715                                                       )
  2716                                           
  2717                                                   # Update progress for priority 2 processing
  2718                                                   if progress_callback:
  2719                                                       progress_callback(
  2720                                                           98, f"Обработка файлов приоритета 2: {len(priority2_carpets)} файлов"
  2721                                                       )
  2722                                           
  2723                                                   priority2_placed = 0
  2724                                                   priority2_remaining = list(priority2_carpets)
  2725                                           
  2726                                                   # Try to fill existing sheets with priority 2 polygons
  2727                                                   for layout_idx, layout in enumerate(placed_layouts):
  2728                                                       if not priority2_remaining:
  2729                                                           break
  2730                                           
  2731                                                       sheet_size = layout["sheet_size"]
  2732                                                       sheet_color = layout.get(
  2733                                                           "sheet_color", "серый"
  2734                                                       )  # Get color directly from layout
  2735                                           
  2736                                                       existing_placed = layout["placed_polygons"]
  2737                                                       current_usage = layout["usage_percent"]
  2738                                           
  2739                                                       if current_usage >= 95:  # Skip nearly full sheets
  2740                                                           continue
  2741                                           
  2742                                                       logger.info(
  2743                                                           f"Пытаемся добавить приоритет 2 на лист #{layout['sheet_number']} (заполнение: {current_usage:.1f}%, цвет листа: {sheet_color})"
  2744                                                       )
  2745                                           
  2746                                                       # Filter priority 2 polygons by color compatibility
  2747                                                       compatible_priority2 = []
  2748                                                       for carpet in priority2_remaining:
  2749                                                           poly_color = carpet.color
  2750                                           
  2751                                                           # Skip detailed logging for speed
  2752                                                           if poly_color == sheet_color:
  2753                                                               compatible_priority2.append(carpet)
  2754                                           
  2755                                                       logger.info(
  2756                                                           f"Найдено {len(compatible_priority2)} совместимых полигонов приоритета 2 из {len(priority2_remaining)}"
  2757                                                       )
  2758                                           
  2759                                                       if not compatible_priority2:
  2760                                                           logger.debug(
  2761                                                               f"Нет совместимых по цвету приоритет 2 полигонов для листа {sheet_color}"
  2762                                                           )
  2763                                                           continue
  2764                                           
  2765                                                       # Try to place compatible priority 2 polygons on this existing sheet
  2766                                                       additional_placed, still_remaining = bin_packing_with_existing(
  2767                                                           compatible_priority2, existing_placed, sheet_size, verbose=False
  2768                                                       )
  2769                                           
  2770                                                       if additional_placed:
  2771                                                           # Update the layout with additional polygons
  2772                                                           placed_layouts[layout_idx]["placed_polygons"] = (
  2773                                                               existing_placed + additional_placed
  2774                                                           )
  2775                                                           placed_layouts[layout_idx]["usage_percent"] = calculate_usage_percent(
  2776                                                               placed_layouts[layout_idx]["placed_polygons"], sheet_size
  2777                                                           )
  2778                                                           new_usage = placed_layouts[layout_idx]["usage_percent"]
  2779                                                           priority2_placed += len(additional_placed)
  2780                                           
  2781                                                           logger.info(
  2782                                                               f"✅ Добавлено {len(additional_placed)} файлов приоритета 2 на лист #{layout['sheet_number']} ({current_usage:.1f}% → {new_usage:.1f}%)"
  2783                                                           )
  2784                                                           if verbose:
  2785                                                               st.success(
  2786                                                                   f"✅ Добавлено {len(additional_placed)} файлов приоритета 2 на лист #{layout['sheet_number']}"
  2787                                                               )
  2788                                           
  2789                                                           # Remove placed polygons from priority2_remaining
  2790                                                           # ИСПРАВЛЕНИЕ: точное совпадение по 3 полям для правильного удаления
  2791                                                           placed_keys = set()
  2792                                                           for placed_poly in additional_placed:
  2793                                                               if len(placed_poly) >= 5:
  2794                                                                   # Полигон из bin_packing_with_existing: (polygon, x, y, angle, filename, color, order_id)
  2795                                                                   key = (
  2796                                                                       placed_poly[4],
  2797                                                                       placed_poly[5],
  2798                                                                       placed_poly[6],
  2799                                                                   )  # filename, color, order_id
  2800                                                               else:
  2801                                                                   # Обычный полигон: (polygon, filename, color, order_id)
  2802                                                                   key = (placed_poly[1], placed_poly[2], placed_poly[3])
  2803                                                               placed_keys.add(key)
  2804                                           
  2805                                                           # Удаляем полигоны с совпадающими ключами
  2806                                                           priority2_remaining = [
  2807                                                               p
  2808                                                               for p in priority2_remaining
  2809                                                               if (p.filename, p.color, p.order_id) not in placed_keys
  2810                                                           ]
  2811                                           
  2812                                                   logger.info(
  2813                                                       f"Приоритет 2: размещено {priority2_placed}, осталось {len(priority2_remaining)}"
  2814                                                   )
  2815                                                   if priority2_remaining:
  2816                                                       logger.info(
  2817                                                           f"⚠️ {len(priority2_remaining)} файлов приоритета 2 не размещены (новые листы не создаются)"
  2818                                                       )
  2819                                                       if verbose:
  2820                                                           st.warning(
  2821                                                               f"⚠️ {len(priority2_remaining)} файлов приоритета 2 не удалось разместить в существующие листы"
  2822                                                           )
  2823                                           
  2824                                                   # Add remaining priority 2 polygons to unplaced list
  2825                                                   all_unplaced.extend(priority2_remaining)
  2826                                           
  2827                                               elif priority2_carpets and not placed_layouts:
  2828                                                   logger.warning(
  2829                                                       f"Нет существующих листов для размещения {len(priority2_carpets)} файлов приоритета 2"
  2830                                                   )
  2831                                                   if verbose:
  2832                                                       st.warning(
  2833                                                           f"⚠️ Нет размещенных листов для {len(priority2_carpets)} файлов приоритета 2"
  2834                                                       )
  2835                                                   # Add all priority 2 polygons to unplaced list since no sheets were created
  2836                                                   all_unplaced.extend(priority2_carpets)
  2837                                               elif priority2_carpets and not order_groups:
  2838                                                   # Special case: only priority 2 polygons exist, no priority 1 files
  2839                                                   logger.info(
  2840                                                       f"Только priority 2 файлы без существующих листов: {len(priority2_carpets)} файлов не размещаются"
  2841                                                   )
  2842                                                   if verbose:
  2843                                                       st.warning(
  2844                                                           f"⚠️ Только файлы приоритета 2: {len(priority2_carpets)} файлов не размещаются (новые листы не создаются)"
  2845                                                       )
  2846                                                   all_unplaced.extend(priority2_carpets)
  2847                                           
  2848                                               # ИСПРАВЛЕНИЕ: Перенумеровываем листы для группировки по цветам
  2849                                               # Листы должны идти подряд по цветам: 1-N чёрные, N+1-M серые, M+1-K остальные
  2850                                               if placed_layouts:
  2851                                                   logger.info(
  2852                                                       f"Перенумеровываем {len(placed_layouts)} листов для группировки по цветам"
  2853                                                   )
  2854                                           
  2855                                                   # Группируем листы по цветам
  2856                                                   sheets_by_color = {"чёрный": [], "серый": [], "other": []}
  2857                                           
  2858                                                   for layout in placed_layouts:
  2859                                                       sheet_color = layout.get("sheet_color", "серый")
  2860                                                       if sheet_color == "чёрный":
  2861                                                           sheets_by_color["чёрный"].append(layout)
  2862                                                       elif sheet_color == "серый":
  2863                                                           sheets_by_color["серый"].append(layout)
  2864                                                       else:
  2865                                                           sheets_by_color["other"].append(layout)
  2866                                           
  2867                                                   # Перенумеровываем листы по группам
  2868                                                   new_sheet_number = 1
  2869                                                   renumbered_layouts = []
  2870                                           
  2871                                                   # Сначала черные листы
  2872                                                   for layout in sheets_by_color["чёрный"]:
  2873                                                       layout["sheet_number"] = new_sheet_number
  2874                                                       renumbered_layouts.append(layout)
  2875                                                       new_sheet_number += 1
  2876                                           
  2877                                                   # Потом серые листы
  2878                                                   for layout in sheets_by_color["серый"]:
  2879                                                       layout["sheet_number"] = new_sheet_number
  2880                                                       renumbered_layouts.append(layout)
  2881                                                       new_sheet_number += 1
  2882                                           
  2883                                                   # Потом остальные листы
  2884                                                   for layout in sheets_by_color["other"]:
  2885                                                       layout["sheet_number"] = new_sheet_number
  2886                                                       renumbered_layouts.append(layout)
  2887                                                       new_sheet_number += 1
  2888                                           
  2889                                                   placed_layouts = renumbered_layouts
  2890                                                   logger.info(
  2891                                                       f"Листы перенумерованы: чёрных {len(sheets_by_color['чёрный'])}, серых {len(sheets_by_color['серый'])}, других {len(sheets_by_color['other'])}"
  2892                                                   )
  2893                                           
  2894                                               # Final progress update
  2895                                               if progress_callback:
  2896                                                   progress_callback(100, f"Завершено: {len(placed_layouts)} листов создано")
  2897                                           
  2898                                               return placed_layouts, all_unplaced

  0.00 seconds - /home/sasha/proj/2025/eva_layout/layout_optimizer.py:1617 - bin_packing_with_inventory
