#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤ –∏ –ø—Ä–∞–≤–∏–ª —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
"""

import os

def test_dxf_structure():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É DXF —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–∞—Ö"""
    print("üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã DXF —Ñ–∞–π–ª–æ–≤")
    print("=" * 50)
    
    if not os.path.exists('dxf_samples'):
        print("‚ùå –ü–∞–ø–∫–∞ dxf_samples –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # –ù–∞–π—Ç–∏ –ø—Ä–∏–º–µ—Ä—ã –ø–∞–ø–æ–∫ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ —Ñ–∞–π–ª–æ–≤
    examples = {
        'automotive': [],
        'boats': [],
        'scooters': [],
        'mats': []
    }
    
    for item in os.listdir('dxf_samples'):
        item_path = os.path.join('dxf_samples', item)
        if os.path.isdir(item_path):
            item_upper = item.upper()
            
            # –ù–∞–π—Ç–∏ DXF —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
            dxf_files = []
            
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∞–ø–∫—É DXF
            dxf_folder = os.path.join(item_path, 'DXF')
            if os.path.exists(dxf_folder):
                search_folder = dxf_folder
            else:
                search_folder = item_path
            
            try:
                for file in os.listdir(search_folder):
                    if file.lower().endswith('.dxf'):
                        dxf_files.append(file)
            except OSError:
                continue
            
            dxf_files.sort()
            
            # –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–∞–ø–∫—É
            if any(brand in item_upper for brand in ['TOYOTA', 'BMW', 'AUDI', 'VOLKSWAGEN', 'SUBARU', 'SSANG YONG']):
                examples['automotive'].append({'folder': item, 'files': dxf_files})
            elif '–õ–û–î–ö–ê' in item_upper or 'ADMIRAL' in item_upper or 'ABAKAN' in item_upper:
                examples['boats'].append({'folder': item, 'files': dxf_files})
            elif '–î–ï–ö–ê' in item_upper or 'KUGOO' in item_upper:
                examples['scooters'].append({'folder': item, 'files': dxf_files})
            elif '–ö–û–í–†–ò–ö' in item_upper:
                examples['mats'].append({'folder': item, 'files': dxf_files})
    
    # –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    for category, items in examples.items():
        category_names = {
            'automotive': 'üöó –ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–µ –∫–æ–≤—Ä–∏–∫–∏',
            'boats': 'üõ•Ô∏è  –õ–æ–¥–æ—á–Ω—ã–µ –∫–æ–≤—Ä–∏–∫–∏',
            'scooters': 'üõ¥ –ö–æ–≤—Ä–∏–∫–∏ –¥–ª—è —Å–∞–º–æ–∫–∞—Ç–æ–≤',
            'mats': 'ü™ë –†–∞–∑–ª–∏—á–Ω—ã–µ –∫–æ–≤—Ä–∏–∫–∏'
        }
        
        print(f"\n{category_names[category]}:")
        for item in items[:3]:  # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 –ø—Ä–∏–º–µ—Ä–∞
            print(f"   üìÅ {item['folder']}")
            print(f"      –§–∞–π–ª—ã: {item['files']}")
    
    return True

def test_file_number_patterns():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏"""
    print("\nüî¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –Ω–æ–º–µ—Ä–æ–≤ —Ñ–∞–π–ª–æ–≤")
    print("=" * 50)
    
    # –ù–∞–π—Ç–∏ –ø–∞–ø–∫–∏ —Å —Ñ–∞–π–ª–∞–º–∏ —Ä–∞–∑–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤
    patterns = {
        'files_1_to_9': [],     # –±–æ—Ä—Ç - —Ñ–∞–π–ª—ã 1-9
        'only_file_1': [],      # –≤–æ–¥–∏—Ç–µ–ª—å - —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª 1
        'files_1_and_2': [],   # –ø–µ—Ä–µ–¥–Ω–∏–µ - —Ñ–∞–π–ª—ã 1 –∏ 2  
        'files_10_plus': [],   # –±–∞–≥–∞–∂–Ω–∏–∫ - —Ñ–∞–π–ª—ã 10-16
        'all_files': []        # –ª–æ–¥–∫–∞/—Å–∞–º–æ–∫–∞—Ç/–∫–æ–≤–µ—Ä - –≤—Å–µ —Ñ–∞–π–ª—ã
    }
    
    for item in os.listdir('dxf_samples'):
        item_path = os.path.join('dxf_samples', item)
        if not os.path.isdir(item_path):
            continue
        
        # –ù–∞–π—Ç–∏ DXF —Ñ–∞–π–ª—ã
        dxf_folder = os.path.join(item_path, 'DXF')
        search_folder = dxf_folder if os.path.exists(dxf_folder) else item_path
        
        try:
            files = [f for f in os.listdir(search_folder) if f.lower().endswith('.dxf')]
        except OSError:
            continue
        
        # –ò–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä–∞ —Ñ–∞–π–ª–æ–≤
        numbered_files = []
        for file in files:
            try:
                # –ò–∑–≤–ª–µ—á—å –Ω–æ–º–µ—Ä –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "1.dxf" -> 1)
                number = int(file.split('.')[0])
                numbered_files.append(number)
            except (ValueError, IndexError):
                continue
        
        numbered_files.sort()
        
        if not numbered_files:
            continue
        
        # –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω—É
        min_num = min(numbered_files)
        max_num = max(numbered_files)
        count = len(numbered_files)
        
        item_info = {'folder': item, 'files': numbered_files, 'total': len(files)}
        
        if min_num == 1 and max_num <= 9 and count >= 4:
            patterns['files_1_to_9'].append(item_info)
        elif numbered_files == [1]:
            patterns['only_file_1'].append(item_info)
        elif set(numbered_files) == {1, 2}:
            patterns['files_1_and_2'].append(item_info)
        elif min_num >= 10:
            patterns['files_10_plus'].append(item_info)
        else:
            patterns['all_files'].append(item_info)
    
    # –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    pattern_descriptions = {
        'files_1_to_9': '–§–∞–π–ª—ã 1-9 (–ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–∏–ø–∞ "–±–æ—Ä—Ç")',
        'only_file_1': '–¢–æ–ª—å–∫–æ —Ñ–∞–π–ª 1 (–ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–∏–ø–∞ "–≤–æ–¥–∏—Ç–µ–ª—å")', 
        'files_1_and_2': '–§–∞–π–ª—ã 1 –∏ 2 (–ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–∏–ø–∞ "–ø–µ—Ä–µ–¥–Ω–∏–µ")',
        'files_10_plus': '–§–∞–π–ª—ã 10+ (–ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–∏–ø–∞ "–±–∞–≥–∞–∂–Ω–∏–∫")',
        'all_files': '–†–∞–∑–Ω—ã–µ —Ñ–∞–π–ª—ã (–ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ª–æ–¥–æ–∫/—Å–∞–º–æ–∫–∞—Ç–æ–≤/–∫–æ–≤—Ä–∏–∫–æ–≤)'
    }
    
    for pattern, description in pattern_descriptions.items():
        items = patterns[pattern]
        print(f"\nüìã {description}:")
        for item in items[:2]:  # –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ 2 –ø—Ä–∏–º–µ—Ä–∞
            print(f"   üìÅ {item['folder']} - —Ñ–∞–π–ª—ã: {item['files']} (–≤—Å–µ–≥–æ: {item['total']})")
    
    return True

def main():
    print("üß™ –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤")
    print("=" * 70)
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    structure_ok = test_dxf_structure()
    
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Ñ–∞–π–ª–æ–≤
    patterns_ok = test_file_number_patterns()
    
    print("\n" + "=" * 70)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    
    if structure_ok and patterns_ok:
        print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω—É–∂–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Ñ–∞–π–ª–æ–≤")
        print("\nüéâ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è!")
        print("\nüí° –ü—Ä–∞–≤–∏–ª–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è:")
        print('   ‚Ä¢ "–±–æ—Ä—Ç" - —Ñ–∞–π–ª—ã 1.dxf –¥–æ 9.dxf')
        print('   ‚Ä¢ "–≤–æ–¥–∏—Ç–µ–ª—å" - —Ç–æ–ª—å–∫–æ 1.dxf') 
        print('   ‚Ä¢ "–ø–µ—Ä–µ–¥–Ω–∏–µ" - —Ñ–∞–π–ª—ã 1.dxf –∏ 2.dxf')
        print('   ‚Ä¢ "–±–∞–≥–∞–∂–Ω–∏–∫" - —Ñ–∞–π–ª—ã 10.dxf –¥–æ 16.dxf')
        print('   ‚Ä¢ "–ª–æ–¥–∫–∞", "—Å–∞–º–æ–∫–∞—Ç", "–∫–æ–≤–µ—Ä" - –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ')
        return True
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –¥–∞–Ω–Ω—ã—Ö")
        return False

if __name__ == "__main__":
    main()