#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º 2 (—Å–µ—Ä—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–≤—Ä–∏–∫–∏)
–ò–º–∏—Ç–∏—Ä—É–µ—Ç —Ç–æ—á–Ω–æ —Ç–∞–∫—É—é –∂–µ —Å–∏—Ç—É–∞—Ü–∏—é –∫–∞–∫ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Streamlit
"""

import sys
import os
import logging
from shapely.geometry import Polygon

sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from layout_optimizer import bin_packing_with_inventory

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def create_test_data():
    """
    –°–æ–∑–¥–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ç–æ—á–Ω–æ –∫–∞–∫ –≤ –ø—Ä–æ–±–ª–µ–º–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
    - 37 –∑–∞–∫–∞–∑–æ–≤ –∏–∑ Excel (—Ä–∞–∑–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã)
    - 20 —á–µ—Ä–Ω—ã—Ö + 20 —Å–µ—Ä—ã—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ 2
    """
    
    polygons = []
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º 37 –∑–∞–∫–∞–∑–æ–≤ –∏–∑ sample_input.xlsx —Å —Ä–∞–∑–Ω—ã–º–∏ —Ä–∞–∑–º–µ—Ä–∞–º–∏
    excel_orders = [
        # –ë–æ–ª—å—à–∏–µ –∑–∞–∫–∞–∑—ã (–º–Ω–æ–≥–æ–ø–æ–ª–∏–≥–æ–Ω–Ω—ã–µ)
        ("AUDI A4 1", "—á—ë—Ä–Ω—ã–π", [(0, 0), (120, 0), (120, 80), (0, 80)], 4),
        ("BMW X5 1", "—á—ë—Ä–Ω—ã–π", [(0, 0), (130, 0), (130, 90), (0, 90)], 3),
        ("MERCEDES-BENZ E-CLASS", "—Å–µ—Ä—ã–π", [(0, 0), (125, 0), (125, 85), (0, 85)], 5),
        ("VOLKSWAGEN TIGUAN 1", "—á—ë—Ä–Ω—ã–π", [(0, 0), (115, 0), (115, 75), (0, 75)], 4),  # –≠—Ç–æ—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω —Ä–∞–∑–º–µ—â–∞—Ç—å—Å—è
        ("TOYOTA CAMRY 8", "—Å–µ—Ä—ã–π", [(0, 0), (120, 0), (120, 80), (0, 80)], 3),
        
        # –°—Ä–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã
        ("HYUNDAI SONATA 7", "—á—ë—Ä–Ω—ã–π", [(0, 0), (100, 0), (100, 60), (0, 60)], 2),
        ("KIA OPTIMA 4", "—Å–µ—Ä—ã–π", [(0, 0), (105, 0), (105, 65), (0, 65)], 2),
        ("NISSAN X-TRAIL 3", "—á—ë—Ä–Ω—ã–π", [(0, 0), (110, 0), (110, 70), (0, 70)], 3),
        ("FORD FOCUS 4", "—Å–µ—Ä—ã–π", [(0, 0), (95, 0), (95, 55), (0, 55)], 2),
        ("SKODA OCTAVIA 3", "—á—ë—Ä–Ω—ã–π", [(0, 0), (100, 0), (100, 60), (0, 60)], 2),
        
        # –ú–∞–ª–µ–Ω—å–∫–∏–µ –∑–∞–∫–∞–∑—ã (–ø–æ 1 –ø–æ–ª–∏–≥–æ–Ω—É)
        ("SUZUKI XBEE", "—á—ë—Ä–Ω—ã–π", [(0, 0), (80, 0), (80, 50), (0, 50)], 1),  # –≠—Ç–æ—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω —Ä–∞–∑–º–µ—â–∞—Ç—å—Å—è
        ("LADA VESTA", "—Å–µ—Ä—ã–π", [(0, 0), (85, 0), (85, 55), (0, 55)], 1),
        ("RENAULT LOGAN", "—á—ë—Ä–Ω—ã–π", [(0, 0), (90, 0), (90, 60), (0, 60)], 1),
        ("DACIA DUSTER", "—Å–µ—Ä—ã–π", [(0, 0), (95, 0), (95, 65), (0, 65)], 1),
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –µ—â–µ –∑–∞–∫–∞–∑—ã –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è 37 –∑–∞–∫–∞–∑–æ–≤
    for i in range(len(excel_orders), 37):
        color = "—á—ë—Ä–Ω—ã–π" if i % 2 == 0 else "—Å–µ—Ä—ã–π"
        size = 80 + (i % 20)  # –í–∞—Ä–∏–∞—Ç–∏–≤–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
        order_name = f"AUTO_ORDER_{i+1}"
        poly_count = 1 if i > 30 else 2  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã - –ø–æ –æ–¥–Ω–æ–º—É –ø–æ–ª–∏–≥–æ–Ω—É
        excel_orders.append((order_name, color, [(0, 0), (size, 0), (size, size-20), (0, size-20)], poly_count))
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–∏–≥–æ–Ω—ã –¥–ª—è –∑–∞–∫–∞–∑–æ–≤ Excel
    for idx, (product_name, color, coords, poly_count) in enumerate(excel_orders):
        order_id = f"ZAKAZ_row_{idx + 2}"  # –ù–∞—á–∏–Ω–∞–µ–º —Å row_2 –∫–∞–∫ –≤ Excel
        
        for poly_idx in range(poly_count):
            poly = Polygon(coords)
            filename = f"{product_name}_{poly_idx + 1}.dxf"
            polygons.append((poly, filename, color, order_id))
    
    print(f"–°–æ–∑–¥–∞–Ω–æ {len(polygons)} –ø–æ–ª–∏–≥–æ–Ω–æ–≤ –∏–∑ {len(excel_orders)} –∑–∞–∫–∞–∑–æ–≤ Excel")
    
    # –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ 2
    priority2_polygons = []
    
    # 20 —á–µ—Ä–Ω—ã—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ 2
    for i in range(20):
        poly = Polygon([(0, 0), (60, 0), (60, 40), (0, 40)])  # –†–∞–∑–º–µ—Ä –∫–∞–∫ —É –î–ï–ö–ê KUGOO
        filename = f"–î–ï–ö–ê_KUGOO_M4_PRO_JILONG_—á–µ—Ä–Ω—ã–π_{i+1}.dxf"
        priority2_polygons.append((poly, filename, "—á—ë—Ä–Ω—ã–π", f"PRIORITY2_BLACK_{i+1}", 2))  # priority=2!
    
    # 20 —Å–µ—Ä—ã—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ 2
    for i in range(20):
        poly = Polygon([(0, 0), (60, 0), (60, 40), (0, 40)])  # –†–∞–∑–º–µ—Ä –∫–∞–∫ —É –î–ï–ö–ê KUGOO
        filename = f"–î–ï–ö–ê_KUGOO_M4_PRO_JILONG_—Å–µ—Ä—ã–π_{i+1}.dxf"
        priority2_polygons.append((poly, filename, "—Å–µ—Ä—ã–π", f"PRIORITY2_GRAY_{i+1}", 2))  # priority=2!
    
    print(f"–°–æ–∑–¥–∞–Ω–æ {len(priority2_polygons)} –ø–æ–ª–∏–≥–æ–Ω–æ–≤ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ 2 (20 —á–µ—Ä–Ω—ã—Ö + 20 —Å–µ—Ä—ã—Ö)")
    
    return polygons, priority2_polygons

def create_sheets():
    """–°–æ–∑–¥–∞–µ—Ç –ª–∏—Å—Ç—ã: 20 —á–µ—Ä–Ω—ã—Ö + 20 —Å–µ—Ä—ã—Ö 140*200"""
    sheets = []
    
    # 20 —á–µ—Ä–Ω—ã—Ö –ª–∏—Å—Ç–æ–≤
    for i in range(1, 21):
        sheets.append({
            "name": f"–ß–µ—Ä–Ω—ã–π –ª–∏—Å—Ç {i}",
            "width": 140,
            "height": 200,
            "color": "—á—ë—Ä–Ω—ã–π", 
            "count": 1,
            "used": 0
        })
    
    # 20 —Å–µ—Ä—ã—Ö –ª–∏—Å—Ç–æ–≤  
    for i in range(1, 21):
        sheets.append({
            "name": f"–°–µ—Ä—ã–π –ª–∏—Å—Ç {i}",
            "width": 140,
            "height": 200,
            "color": "—Å–µ—Ä—ã–π", 
            "count": 1,
            "used": 0
        })
    
    return sheets

def main():
    print("=== –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–û–†–ò–¢–ï–¢–ê 2 ===")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    excel_polygons, priority2_polygons = create_test_data()
    sheets = create_sheets()
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –ø–æ–ª–∏–≥–æ–Ω—ã
    all_polygons = excel_polygons + priority2_polygons
    total_polygons = len(all_polygons)
    
    print(f"üìä –í—Å–µ–≥–æ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: {total_polygons} –ø–æ–ª–∏–≥–æ–Ω–æ–≤")
    print(f"üìÑ –î–æ—Å—Ç—É–ø–Ω–æ –ª–∏—Å—Ç–æ–≤: {len(sheets)} (20 —á–µ—Ä–Ω—ã—Ö + 20 —Å–µ—Ä—ã—Ö)")
    

    # –ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    print(f"\n=== –ó–ê–ü–£–°–ö –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò ===")
    MAX_SHEETS_PER_ORDER = 5
    
    placed_layouts, unplaced = bin_packing_with_inventory(
        all_polygons,
        sheets,
        verbose=True,
        max_sheets_per_order=MAX_SHEETS_PER_ORDER,
    )
    
    # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print(f"\n=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ ===")
    actual_placed_count = total_polygons - len(unplaced)
    print(f"–†–∞–∑–º–µ—â–µ–Ω–æ –ø–æ–ª–∏–≥–æ–Ω–æ–≤: {actual_placed_count}/{total_polygons}")
    print(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ª–∏—Å—Ç–æ–≤: {len(placed_layouts)}")
    print(f"–ù–µ—Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –ø–æ–ª–∏–≥–æ–Ω–æ–≤: {len(unplaced)}")
    
    if unplaced:
        print(f"\n‚ùå –ù–ï–†–ê–ó–ú–ï–©–ï–ù–ù–´–ï –ü–û–õ–ò–ì–û–ù–´:")
        excel_unplaced = []
        priority2_black_unplaced = []
        priority2_gray_unplaced = []
        
        for poly in unplaced:
            filename = poly[1] if len(poly) > 1 else "unknown"
            order_id = poly[3] if len(poly) > 3 else "unknown"
            
            if str(order_id).startswith('PRIORITY2_BLACK'):
                priority2_black_unplaced.append(filename)
            elif str(order_id).startswith('PRIORITY2_GRAY'):
                priority2_gray_unplaced.append(filename)
            else:
                excel_unplaced.append(filename)
        
        if excel_unplaced:
            print(f"   üìã Excel —Ñ–∞–π–ª—ã ({len(excel_unplaced)}):")
            for f in excel_unplaced[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"      ‚Ä¢ {f}")
            if len(excel_unplaced) > 5:
                print(f"      ... –∏ –µ—â–µ {len(excel_unplaced) - 5}")
        
        if priority2_black_unplaced:
            print(f"   ‚ö´ –ß–µ—Ä–Ω—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2 ({len(priority2_black_unplaced)}):")
            for f in priority2_black_unplaced[:3]:
                print(f"      ‚Ä¢ {f}")
            if len(priority2_black_unplaced) > 3:
                print(f"      ... –∏ –µ—â–µ {len(priority2_black_unplaced) - 3}")
        
        if priority2_gray_unplaced:
            print(f"   üîò –°–µ—Ä—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2 ({len(priority2_gray_unplaced)}):")
            for f in priority2_gray_unplaced[:3]:
                print(f"      ‚Ä¢ {f}")
            if len(priority2_gray_unplaced) > 3:
                print(f"      ... –∏ –µ—â–µ {len(priority2_gray_unplaced) - 3}")
    
    # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ª–∏—Å—Ç–æ–≤
    print(f"\n=== –ê–ù–ê–õ–ò–ó –õ–ò–°–¢–û–í ===")
    priority2_black_placed = 0
    priority2_gray_placed = 0
    sheets_with_low_usage = []
    
    for i, layout in enumerate(placed_layouts, 1):
        poly_count = len(layout['placed_polygons'])
        usage = layout.get('usage_percent', 0)
        sheet_color = layout.get('sheet_color', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')
        
        # –ü–æ–¥—Å—á–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ 2 - –ø–æ–ª–∏–≥–æ–Ω—ã –º–æ–≥—É—Ç –±—ã—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö
        p2_black = 0
        p2_gray = 0
        for p in layout['placed_polygons']:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –ø–æ–ª–∏–≥–æ–Ω–æ–≤
            order_id = ""
            if len(p) >= 7:  # bin_packing_with_existing –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 7-—ç–ª–µ–º–µ–Ω—Ç–Ω—ã–µ –∫–æ—Ä—Ç–µ–∂–∏
                order_id = str(p[6]) if p[6] is not None else ""
            elif len(p) >= 4:  # –æ–±—ã—á–Ω—ã–µ 4-—ç–ª–µ–º–µ–Ω—Ç–Ω—ã–µ –∫–æ—Ä—Ç–µ–∂–∏
                order_id = str(p[3]) if p[3] is not None else ""
            elif len(p) >= 5:  # 5-—ç–ª–µ–º–µ–Ω—Ç–Ω—ã–µ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
                order_id = str(p[3]) if p[3] is not None else ""
            
            if order_id.startswith('PRIORITY2_BLACK'):
                p2_black += 1
            elif order_id.startswith('PRIORITY2_GRAY'):
                p2_gray += 1
        
        priority2_black_placed += p2_black
        priority2_gray_placed += p2_gray
        
        # –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ª–∏—Å—Ç—ã —Å –Ω–∏–∑–∫–∏–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º –Ω–∞—á–∏–Ω–∞—è —Å 18 (–∫–∞–∫ —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
        if i >= 18 and usage < 70:
            sheets_with_low_usage.append((i, usage, sheet_color))
        
        sheet_info = f"  –õ–∏—Å—Ç {i} ({sheet_color}): {poly_count} –ø–æ–ª–∏–≥–æ–Ω–æ–≤, {usage:.1f}%"
        if p2_black > 0 or p2_gray > 0:
            sheet_info += f" [+{p2_black}—á–µ—Ä.–ü2, +{p2_gray}—Å–µ—Ä.–ü2]"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –ª–∏—Å—Ç—ã –∏–ª–∏ —Ç–µ, —á—Ç–æ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º 2
        if i >= 18 or p2_black > 0 or p2_gray > 0:
            print(sheet_info)
    
    print(f"\n=== –ê–ù–ê–õ–ò–ó –ü–†–ò–û–†–ò–¢–ï–¢–ê 2 ===")
    print(f"–ß–µ—Ä–Ω—ã—Ö –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ 2 —Ä–∞–∑–º–µ—â–µ–Ω–æ: {priority2_black_placed}/20")
    print(f"–°–µ—Ä—ã—Ö –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ 2 —Ä–∞–∑–º–µ—â–µ–Ω–æ: {priority2_gray_placed}/20")
    
    if sheets_with_low_usage:
        print(f"\n‚ö†Ô∏è –õ–∏—Å—Ç—ã —Å –Ω–∏–∑–∫–∏–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º (–Ω–∞—á–∏–Ω–∞—è —Å 18):")
        for sheet_num, usage, color in sheets_with_low_usage:
            print(f"   –õ–∏—Å—Ç {sheet_num} ({color}): {usage:.1f}%")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    problems = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    excel_unplaced_count = len([p for p in unplaced if not str(p[3] if len(p) > 3 else "").startswith('PRIORITY2')])
    if excel_unplaced_count > 5:  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏–ª –æ 5 –Ω–µ—Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö
        problems.append(f"–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –Ω–µ—Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö Excel —Ñ–∞–π–ª–æ–≤: {excel_unplaced_count}")
    
    priority2_gray_unplaced_count = len([p for p in unplaced if str(p[3] if len(p) > 3 else "").startswith('PRIORITY2_GRAY')])
    if priority2_gray_unplaced_count > 4:  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏–ª –æ 4 –Ω–µ—Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä—ã—Ö
        problems.append(f"–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –Ω–µ—Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä—ã—Ö –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ 2: {priority2_gray_unplaced_count}")
    
    if len(sheets_with_low_usage) > 5:
        problems.append(f"–ú–Ω–æ–≥–æ –ª–∏—Å—Ç–æ–≤ —Å –Ω–∏–∑–∫–∏–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º –Ω–∞—á–∏–Ω–∞—è —Å 18: {len(sheets_with_low_usage)}")
    
    if priority2_gray_placed < 16:  # –û–∂–∏–¥–∞–µ–º —Ö–æ—Ç—è –±—ã 80% —Å–µ—Ä—ã—Ö
        problems.append(f"–ú–∞–ª–æ —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö —Å–µ—Ä—ã—Ö –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ 2: {priority2_gray_placed}/20")
    
    if problems:
        print(f"\n‚ùå –ü–†–û–ë–õ–ï–ú–´ –ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–´:")
        for problem in problems:
            print(f"   ‚Ä¢ {problem}")
        print(f"\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print(f"   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ 2 –¥–ª—è —Å–µ—Ä—ã—Ö –ª–∏—Å—Ç–æ–≤")
        print(f"   ‚Ä¢ –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –∞–ª–≥–æ—Ä–∏—Ç–º –¥–æ—Ö–æ–¥–∏—Ç –¥–æ –ª–∏—Å—Ç–æ–≤ –Ω–∞—á–∏–Ω–∞—è —Å 18")
        print(f"   ‚Ä¢ –°–Ω–∏–∑–∏—Ç—å –ø–æ—Ä–æ–≥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ 2 –µ—â–µ –±–æ–ª—å—à–µ")
        return False
    else:
        print(f"\n‚úÖ –ü–†–û–ë–õ–ï–ú–´ –ò–°–ü–†–ê–í–õ–ï–ù–´!")
        print(f"   ‚Ä¢ Excel —Ñ–∞–π–ª—ã: –Ω–µ—Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö {excel_unplaced_count} (–ø—Ä–∏–µ–º–ª–µ–º–æ)")
        print(f"   ‚Ä¢ –°–µ—Ä—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2: —Ä–∞–∑–º–µ—â–µ–Ω–æ {priority2_gray_placed}/20")
        print(f"   ‚Ä¢ –ß–µ—Ä–Ω—ã–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2: —Ä–∞–∑–º–µ—â–µ–Ω–æ {priority2_black_placed}/20")
        print(f"   ‚Ä¢ –õ–∏—Å—Ç—ã —Å –Ω–∏–∑–∫–∏–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º: {len(sheets_with_low_usage)} (–ø—Ä–∏–µ–º–ª–µ–º–æ)")
        return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)