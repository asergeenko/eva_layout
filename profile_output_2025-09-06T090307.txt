Timer unit: 1e-09 s

Total time: 10.1348 s
File: /home/sasha/proj/2025/eva_layout/layout_optimizer.py
Function: bin_packing at line 1187

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
  1187                                           @profile
  1188                                           def bin_packing(
  1189                                               polygons: list[tuple],
  1190                                               sheet_size: tuple[float, float],
  1191                                               verbose: bool = True,
  1192                                           ) -> tuple[list[tuple], list[tuple]]:
  1193                                               """Optimize placement of complex polygons on a sheet with improved algorithm."""
  1194                                               # Convert sheet size from cm to mm to match DXF polygon units
  1195     50806  106109863.0   2088.5      1.0      sheet_width_mm, sheet_height_mm = sheet_size[0] * 10, sheet_size[1] * 10
  1196                                           
  1197     50806   85266708.0   1678.3      0.8      placed = []
  1198     50806   82228235.0   1618.5      0.8      unplaced = []
  1199                                           
  1200     50806   88979862.0   1751.4      0.9      if verbose:
  1201                                                   st.info(
  1202                                                       f"Начинаем улучшенную упаковку {len(polygons)} полигонов на листе {sheet_size[0]}x{sheet_size[1]} см"
  1203                                                   )
  1204                                           
  1205                                               # IMPROVEMENT 1: Sort polygons by area and perimeter for better packing
  1206     50806  112896014.0   2222.1      1.1      def get_polygon_priority(carpet: Carpet):
  1207                                                   polygon = carpet.polygon
  1208                                                   # Combine area and perimeter for better sorting (larger, more complex shapes first)
  1209                                                   area = polygon.area
  1210                                                   bounds = polygon.bounds
  1211                                                   perimeter_approx = 2 * ((bounds[2] - bounds[0]) + (bounds[3] - bounds[1]))
  1212                                                   return area + perimeter_approx * 0.1
  1213                                           
  1214     50806 5370463884.0 105705.3     53.0      sorted_polygons = sorted(polygons, key=get_polygon_priority, reverse=True)
  1215     50806   83610507.0   1645.7      0.8      if verbose:
  1216                                                   st.info("✨ Сортировка полигонов по площади (сначала крупные)")
  1217                                           
  1218    101934  423974916.0   4159.3      4.2      for i, carpet in enumerate(sorted_polygons):
  1219     51128   85596244.0   1674.2      0.8          placed_successfully = False
  1220     51128   86364974.0   1689.2      0.9          if verbose:
  1221                                                       st.info(
  1222                                                           f"Обрабатываем полигон {i+1}/{len(sorted_polygons)} из файла {carpet.filename}, площадь: {carpet.polygon.area:.2f}"
  1223                                                       )
  1224                                           
  1225                                                   # Check if polygon is too large for the sheet
  1226     51128  993086169.0  19423.5      9.8          bounds = carpet.polygon.bounds
  1227     51128   91496178.0   1789.6      0.9          poly_width = bounds[2] - bounds[0]
  1228     51128   83167333.0   1626.6      0.8          poly_height = bounds[3] - bounds[1]
  1229                                           
  1230     51128  107320973.0   2099.1      1.1          if poly_width > sheet_width_mm or poly_height > sheet_height_mm:
  1231     50781   85977936.0   1693.1      0.8              if verbose:
  1232                                                           st.warning(
  1233                                                               f"Полигон из {carpet.filename} слишком большой: {poly_width/10:.1f}x{poly_height/10:.1f} см > {sheet_size[0]}x{sheet_size[1]} см"
  1234                                                           )
  1235     50781   84454737.0   1663.1      0.8              unplaced.append(carpet)
  1236     50781   77141424.0   1519.1      0.8              continue
  1237                                           
  1238                                                   # IMPROVEMENT 2: Try all allowed orientations (0°, 90°, 180°, 270°) with better placement
  1239       347     596771.0   1719.8      0.0          best_placement = None
  1240       347     953044.0   2746.5      0.0          best_waste = float("inf")
  1241                                           
  1242                                                   # Only allowed rotation angles for cutting machines
  1243       347     647842.0   1867.0      0.0          rotation_angles = [0, 90, 180, 270]
  1244                                           
  1245      1735    2979725.0   1717.4      0.0          for angle in rotation_angles:
  1246      1388    2744202.0   1977.1      0.0              rotated = (
  1247      1388  188568687.0 135856.4      1.9                  rotate_polygon(carpet.polygon, angle) if angle != 0 else carpet.polygon
  1248                                                       )
  1249      1388   19684828.0  14182.2      0.2              rotated_bounds = rotated.bounds
  1250      1388    2331835.0   1680.0      0.0              rotated_width = rotated_bounds[2] - rotated_bounds[0]
  1251      1388    2106548.0   1517.7      0.0              rotated_height = rotated_bounds[3] - rotated_bounds[1]
  1252                                           
  1253                                                       # Skip if doesn't fit
  1254      1388    2506521.0   1805.9      0.0              if rotated_width > sheet_width_mm or rotated_height > sheet_height_mm:
  1255        34      55733.0   1639.2      0.0                  continue
  1256                                           
  1257                                                       # IMPROVEMENT 3: Bottom-Left Fill algorithm for better placement
  1258      2708  342985622.0 126656.4      3.4              best_x, best_y = find_bottom_left_position(
  1259      1354    1970017.0   1455.0      0.0                  rotated, placed, sheet_width_mm, sheet_height_mm
  1260                                                       )
  1261                                           
  1262      1354    2365321.0   1746.9      0.0              if best_x is not None and best_y is not None:
  1263                                                           # Calculate waste for this placement
  1264       564   21943552.0  38907.0      0.2                  translated = translate_polygon(
  1265       282     513496.0   1820.9      0.0                      rotated, best_x - rotated_bounds[0], best_y - rotated_bounds[1]
  1266                                                           )
  1267       564   10794796.0  19139.7      0.1                  waste = calculate_placement_waste(
  1268       282     421728.0   1495.5      0.0                      translated, placed, sheet_width_mm, sheet_height_mm
  1269                                                           )
  1270                                           
  1271       282     476477.0   1689.6      0.0                  if waste < best_waste:
  1272       103     162804.0   1580.6      0.0                      best_waste = waste
  1273       103     224266.0   2177.3      0.0                      best_placement = {
  1274       103     153587.0   1491.1      0.0                          "polygon": translated,
  1275       103     170559.0   1655.9      0.0                          "x_offset": best_x - rotated_bounds[0],
  1276       103     177475.0   1723.1      0.0                          "y_offset": best_y - rotated_bounds[1],
  1277       103     146456.0   1421.9      0.0                          "angle": angle,
  1278                                                               }
  1279                                           
  1280                                                   # Apply best placement if found
  1281       347     562413.0   1620.8      0.0          if best_placement:
  1282       170     322677.0   1898.1      0.0              placed.append(
  1283        85     129765.0   1526.6      0.0                  (
  1284        85     141434.0   1663.9      0.0                      best_placement["polygon"],
  1285        85     136334.0   1603.9      0.0                      best_placement["x_offset"],
  1286        85     126282.0   1485.7      0.0                      best_placement["y_offset"],
  1287        85     154009.0   1811.9      0.0                      best_placement["angle"],
  1288        85     169934.0   1999.2      0.0                      carpet.filename,
  1289        85     141018.0   1659.0      0.0                      carpet.color,
  1290        85     135573.0   1595.0      0.0                      carpet.order_id,
  1291                                                           )
  1292                                                       )
  1293        85     145901.0   1716.5      0.0              placed_successfully = True
  1294        85     436457.0   5134.8      0.0              if verbose:
  1295                                                           st.success(
  1296                                                               f"✅ Размещен {carpet.filename} (угол: {best_placement['angle']}°, waste: {best_waste:.1f})"
  1297                                                           )
  1298                                                   else:
  1299                                                       # Fallback to original grid method if no bottom-left position found
  1300       262    3453810.0  13182.5      0.0              simple_bounds = carpet.polygon.bounds
  1301       262     428372.0   1635.0      0.0              simple_width = simple_bounds[2] - simple_bounds[0]
  1302       262     381440.0   1455.9      0.0              simple_height = simple_bounds[3] - simple_bounds[1]
  1303                                           
  1304                                                       # Optimized grid placement as fallback
  1305       262     410272.0   1565.9      0.0              max_grid_attempts = 10  # Reduced for better performance
  1306       262     427122.0   1630.2      0.0              if sheet_width_mm > simple_width:
  1307       524   10897410.0  20796.6      0.1                  x_positions = np.linspace(
  1308       262     423909.0   1618.0      0.0                      0, sheet_width_mm - simple_width, max_grid_attempts
  1309                                                           )
  1310                                                       else:
  1311                                                           x_positions = [0]
  1312                                           
  1313       262     465816.0   1777.9      0.0              if sheet_height_mm > simple_height:
  1314       524    7253556.0  13842.7      0.1                  y_positions = np.linspace(
  1315       262     403994.0   1542.0      0.0                      0, sheet_height_mm - simple_height, max_grid_attempts
  1316                                                           )
  1317                                                       else:
  1318                                                           y_positions = [0]
  1319                                           
  1320                                                       # PERFORMANCE: Pre-compute placed polygon bounds for faster collision checking
  1321       262    7675883.0  29297.3      0.1              placed_bounds_cache = [placed_poly.bounds for placed_poly, *_ in placed]
  1322                                           
  1323      2881    5148690.0   1787.1      0.1              for grid_x in x_positions:
  1324     28817   50094838.0   1738.4      0.5                  for grid_y in y_positions:
  1325     26198   40068470.0   1529.4      0.4                      x_offset = grid_x - simple_bounds[0]
  1326     26198   39566366.0   1510.3      0.4                      y_offset = grid_y - simple_bounds[1]
  1327                                           
  1328                                                               # Fast bounds check
  1329     26198   38753403.0   1479.3      0.4                      test_bounds = (
  1330     26198   39044813.0   1490.4      0.4                          simple_bounds[0] + x_offset,
  1331     26198   39015477.0   1489.3      0.4                          simple_bounds[1] + y_offset,
  1332     26198   38877721.0   1484.0      0.4                          simple_bounds[2] + x_offset,
  1333     26198   38962371.0   1487.2      0.4                          simple_bounds[3] + y_offset,
  1334                                                               )
  1335                                           
  1336                                                               if not (
  1337     26198   39299834.0   1500.1      0.4                          test_bounds[0] >= -0.1
  1338     26198   38149530.0   1456.2      0.4                          and test_bounds[1] >= -0.1
  1339     26198   40161658.0   1533.0      0.4                          and test_bounds[2] <= sheet_width_mm + 0.1
  1340     26198   39805645.0   1519.4      0.4                          and test_bounds[3] <= sheet_height_mm + 0.1
  1341                                                               ):
  1342                                                                   continue
  1343                                           
  1344                                                               # OPTIMIZATION: Fast bounding box collision check first
  1345     26198   37501720.0   1431.5      0.4                      bbox_collision = False
  1346     37151   54618082.0   1470.2      0.5                      for placed_bounds in placed_bounds_cache:
  1347                                                                   if not (
  1348     37150   59905168.0   1612.5      0.6                              test_bounds[2] + 2.0 <= placed_bounds[0]
  1349     36911   55401957.0   1501.0      0.5                              or test_bounds[0] >= placed_bounds[2] + 2.0
  1350     34668   54359229.0   1568.0      0.5                              or test_bounds[3] + 2.0 <= placed_bounds[1]
  1351     34646   51994489.0   1500.7      0.5                              or test_bounds[1] >= placed_bounds[3] + 2.0
  1352                                                                   ):
  1353     26197   37515211.0   1432.0      0.4                              bbox_collision = True
  1354     26197   37462721.0   1430.0      0.4                              break
  1355                                           
  1356     26198   37576473.0   1434.3      0.4                      if bbox_collision:
  1357     26197   37826851.0   1443.9      0.4                          continue
  1358                                           
  1359                                                               # Only create polygon if bounding box check passes
  1360         1      71458.0  71458.0      0.0                      translated = translate_polygon(carpet.polygon, x_offset, y_offset)
  1361                                           
  1362                                                               # Final precise collision check
  1363         1       1956.0   1956.0      0.0                      collision = False
  1364         3       6077.0   2025.7      0.0                      for placed_poly, *_ in placed:
  1365         2     564822.0 282411.0      0.0                          if check_collision(translated, placed_poly):
  1366                                                                       collision = True
  1367                                                                       break
  1368                                           
  1369         1       1467.0   1467.0      0.0                      if not collision:
  1370         2       3423.0   1711.5      0.0                          placed.append(
  1371         1       1467.0   1467.0      0.0                              (
  1372         1       1467.0   1467.0      0.0                                  translated,
  1373         1       1466.0   1466.0      0.0                                  x_offset,
  1374         1       2306.0   2306.0      0.0                                  y_offset,
  1375         1        978.0    978.0      0.0                                  0,
  1376         1       1886.0   1886.0      0.0                                  carpet.filename,
  1377         1       2375.0   2375.0      0.0                                  carpet.color,
  1378         1       2864.0   2864.0      0.0                                  carpet.order_id,
  1379                                                                       )
  1380                                                                   )
  1381         1       1467.0   1467.0      0.0                          placed_successfully = True
  1382         1       5728.0   5728.0      0.0                          if verbose:
  1383                                                                       st.success(
  1384                                                                           f"✅ Размещен {carpet.filename} (сетчатое размещение)"
  1385                                                                       )
  1386         1       6147.0   6147.0      0.0                          break
  1387                                           
  1388      2620    7789967.0   2973.3      0.1                  if placed_successfully:
  1389         1       4890.0   4890.0      0.0                      break
  1390                                           
  1391       347    1465244.0   4222.6      0.0          if not placed_successfully:
  1392       261    1175535.0   4504.0      0.0              if verbose:
  1393                                                           st.warning(f"❌ Не удалось разместить полигон из {carpet.filename}")
  1394       261     877344.0   3361.5      0.0              unplaced.append(carpet)
  1395                                           
  1396     50806  305929412.0   6021.5      3.0      if verbose:
  1397                                                   usage_percent = calculate_usage_percent(placed, sheet_size)
  1398                                                   st.info(
  1399                                                       f"🏁 Упаковка завершена: {len(placed)} размещено, {len(unplaced)} не размещено, использование: {usage_percent:.1f}%"
  1400                                                   )
  1401     50806  177086390.0   3485.5      1.7      return placed, unplaced

Total time: 519.516 s
File: /home/sasha/proj/2025/eva_layout/layout_optimizer.py
Function: bin_packing_with_existing at line 1072

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
  1072                                           @profile
  1073                                           def bin_packing_with_existing(
  1074                                               polygons: list[Carpet],
  1075                                               existing_placed: list[tuple],
  1076                                               sheet_size: tuple[float, float],
  1077                                               verbose: bool = True,
  1078                                           ) -> tuple[list[tuple], list[tuple]]:
  1079                                               """Bin packing that considers already placed polygons on the sheet."""
  1080                                               # Convert sheet size from cm to mm to match DXF polygon units
  1081     16935   28184133.0   1664.3      0.0      sheet_width_mm, sheet_height_mm = sheet_size[0] * 10, sheet_size[1] * 10
  1082                                           
  1083     16935   25246484.0   1490.8      0.0      placed = []
  1084     16935   24233888.0   1431.0      0.0      unplaced = []
  1085                                           
  1086                                               # Start with existing placed polygons as obstacles
  1087     16935   33450745.0   1975.2      0.0      obstacles = [placed_tuple[0] for placed_tuple in existing_placed]
  1088                                           
  1089     16935   24854884.0   1467.7      0.0      if verbose:
  1090                                                   st.info(
  1091                                                       f"Дозаполняем лист с {len(obstacles)} существующими деталями, добавляем {len(polygons)} новых"
  1092                                                   )
  1093                                           
  1094                                               # IMPROVEMENT 1: Sort polygons by area and perimeter for better packing
  1095     16935   28397738.0   1676.9      0.0      def get_polygon_priority(polygon_tuple: Carpet):
  1096                                                   polygon = polygon_tuple.polygon
  1097                                                   # Combine area and perimeter for better sorting (larger, more complex shapes first)
  1098                                                   area = polygon.area
  1099                                                   bounds = polygon.bounds
  1100                                                   perimeter_approx = 2 * ((bounds[2] - bounds[0]) + (bounds[3] - bounds[1]))
  1101                                                   return area + perimeter_approx * 0.1
  1102                                           
  1103     16935  881149380.0  52031.3      0.2      sorted_polygons = sorted(polygons, key=get_polygon_priority, reverse=True)
  1104                                           
  1105     35027   64607009.0   1844.5      0.0      for i, carpet in enumerate(sorted_polygons):
  1106     18092   28027377.0   1549.2      0.0          polygon = carpet.polygon
  1107     18092   29644082.0   1638.5      0.0          file_name = carpet.filename
  1108     18092   27902839.0   1542.3      0.0          color = carpet.color
  1109     18092   27499707.0   1520.0      0.0          order_id = carpet.order_id
  1110                                           
  1111     18092   26875865.0   1485.5      0.0          placed_successfully = False
  1112                                           
  1113                                                   # Check if polygon is too large for the sheet
  1114     18092  273047889.0  15092.2      0.1          bounds = polygon.bounds
  1115     18092   27997929.0   1547.5      0.0          poly_width = bounds[2] - bounds[0]
  1116     18092   27303316.0   1509.1      0.0          poly_height = bounds[3] - bounds[1]
  1117                                           
  1118     18092   30909626.0   1708.5      0.0          if poly_width > sheet_width_mm or poly_height > sheet_height_mm:
  1119     16778   27461726.0   1636.8      0.0              unplaced.append((polygon, file_name, color, order_id))
  1120     16778   24507781.0   1460.7      0.0              continue
  1121                                           
  1122                                                   # Try all allowed orientations (0°, 90°, 180°, 270°) with better placement
  1123      1314    2032125.0   1546.5      0.0          best_placement = None
  1124      1314    4894717.0   3725.1      0.0          best_waste = float("inf")
  1125                                           
  1126                                                   # Only allowed rotation angles for cutting machines
  1127      1314    2701795.0   2056.2      0.0          rotation_angles = [0, 90, 180, 270]
  1128                                           
  1129      6570   12661503.0   1927.2      0.0          for angle in rotation_angles:
  1130      5256  718409603.0 136683.7      0.1              rotated = rotate_polygon(polygon, angle) if angle != 0 else polygon
  1131      5256   73005308.0  13889.9      0.0              rotated_bounds = rotated.bounds
  1132      5256    9226019.0   1755.3      0.0              rotated_width = rotated_bounds[2] - rotated_bounds[0]
  1133      5256   10114748.0   1924.4      0.0              rotated_height = rotated_bounds[3] - rotated_bounds[1]
  1134                                           
  1135                                                       # Skip if doesn't fit
  1136      5256   11115309.0   2114.8      0.0              if rotated_width > sheet_width_mm or rotated_height > sheet_height_mm:
  1137       116     170688.0   1471.4      0.0                  continue
  1138                                           
  1139                                                       # Find position that avoids existing obstacles
  1140     10280     5.17e+11 5.03e+07     99.5              best_x, best_y = find_bottom_left_position_with_obstacles(
  1141      5140    7598018.0   1478.2      0.0                  rotated, obstacles, sheet_width_mm, sheet_height_mm
  1142                                                       )
  1143                                           
  1144      5140   11927823.0   2320.6      0.0              if best_x is not None and best_y is not None:
  1145                                                           # Calculate waste for this placement
  1146       300   12145633.0  40485.4      0.0                  translated = translate_polygon(
  1147       150     300109.0   2000.7      0.0                      rotated, best_x - rotated_bounds[0], best_y - rotated_bounds[1]
  1148                                                           )
  1149       300   11498712.0  38329.0      0.0                  waste = calculate_placement_waste(
  1150       150     272448.0   1816.3      0.0                      translated,
  1151       150     460542.0   3070.3      0.0                      [(obs, 0, 0, 0, "obstacle") for obs in obstacles],
  1152       150     239002.0   1593.3      0.0                      sheet_width_mm,
  1153       150     210997.0   1406.6      0.0                      sheet_height_mm,
  1154                                                           )
  1155                                           
  1156       150     282096.0   1880.6      0.0                  if waste < best_waste:
  1157        72     109090.0   1515.1      0.0                      best_waste = waste
  1158        72     185569.0   2577.3      0.0                      best_placement = {
  1159        72     103651.0   1439.6      0.0                          "polygon": translated,
  1160        72     117124.0   1626.7      0.0                          "x_offset": best_x - rotated_bounds[0],
  1161        72     115306.0   1601.5      0.0                          "y_offset": best_y - rotated_bounds[1],
  1162        72     122228.0   1697.6      0.0                          "angle": angle,
  1163                                                               }
  1164                                           
  1165                                                   # Apply best placement if found
  1166      1314    2608715.0   1985.3      0.0          if best_placement:
  1167       124     272670.0   2199.0      0.0              placed.append(
  1168        62      93312.0   1505.0      0.0                  (
  1169        62     134794.0   2174.1      0.0                      best_placement["polygon"],
  1170        62     111049.0   1791.1      0.0                      best_placement["x_offset"],
  1171        62     134790.0   2174.0      0.0                      best_placement["y_offset"],
  1172        62     135431.0   2184.4      0.0                      best_placement["angle"],
  1173        62     127670.0   2059.2      0.0                      file_name,
  1174        62     118102.0   1904.9      0.0                      color,
  1175        62     115871.0   1868.9      0.0                      order_id,
  1176                                                           )
  1177                                                       )
  1178                                                       # Add this polygon as an obstacle for subsequent placements
  1179        62     125505.0   2024.3      0.0              obstacles.append(best_placement["polygon"])
  1180        62     117333.0   1892.5      0.0              placed_successfully = True
  1181                                           
  1182      1314    2539692.0   1932.8      0.0          if not placed_successfully:
  1183      1252    2533121.0   2023.3      0.0              unplaced.append((polygon, file_name, color, order_id))
  1184                                           
  1185     16935   47382537.0   2797.9      0.0      return placed, unplaced

Total time: 723.291 s
File: /home/sasha/proj/2025/eva_layout/layout_optimizer.py
Function: bin_packing_with_inventory at line 1617

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
  1617                                           @profile
  1618                                           def bin_packing_with_inventory(
  1619                                               carpets: list[Carpet],
  1620                                               available_sheets: list[dict],
  1621                                               verbose: bool = True,
  1622                                               max_sheets_per_order: int = None,
  1623                                               progress_callback=None,
  1624                                           ) -> tuple[list[dict], list[tuple]]:
  1625                                               """Optimize placement of polygons on available sheets with inventory tracking."""
  1626       492  126392130.0 256894.6      0.0      logger.info("=== НАЧАЛО bin_packing_with_inventory ===")
  1627       982  103510236.0 105407.6      0.0      logger.info(
  1628       491    1331172.0   2711.1      0.0          f"Входные параметры: {len(carpets)} полигонов, {len(available_sheets)} типов листов, max_sheets_per_order={max_sheets_per_order}"
  1629                                               )
  1630                                           
  1631       491     827204.0   1684.7      0.0      placed_layouts = []
  1632       491     792613.0   1614.3      0.0      all_unplaced = []
  1633       982    1602501.0   1631.9      0.0      sheet_inventory = [
  1634       982    2134060.0   2173.2      0.0          sheet.copy() for sheet in available_sheets
  1635                                               ]  # Copy to avoid modifying original
  1636                                           
  1637       491    1078883.0   2197.3      0.0      if verbose:
  1638                                                   total_available = sum(
  1639                                                       sheet["count"] - sheet["used"] for sheet in sheet_inventory
  1640                                                   )
  1641                                                   st.info(
  1642                                                       f"Начинаем размещение {len(carpets)} полигонов на {total_available} доступных листах"
  1643                                                   )
  1644                                                   if max_sheets_per_order:
  1645                                                       st.info(f"Ограничение: максимум {max_sheets_per_order} листов на заказ")
  1646                                           
  1647                                               # Group polygons by order_id and separate by priority
  1648       491  100049072.0 203765.9      0.0      logger.info("Группировка полигонов по order_id и приоритету...")
  1649       491     858073.0   1747.6      0.0      order_groups = {}
  1650       491     809803.0   1649.3      0.0      priority2_carpets = []  # Polygons with priority 2 for later processing
  1651                                           
  1652      1152    2031442.0   1763.4      0.0      for carpet in carpets:
  1653                                                   # Separate priority 2 polygons for later processing
  1654       661    1288892.0   1949.9      0.0          if carpet.priority == 2:
  1655        40      58814.0   1470.3      0.0              priority2_carpets.append(carpet)
  1656        80     190972.0   2387.2      0.0              logger.debug(
  1657        40      60632.0   1515.8      0.0                  f"Полигон {carpet.filename} отложен для приоритета 2 (заполнение пустот)"
  1658                                                       )
  1659                                                   else:
  1660                                                       # Process priority 1 and Excel files normally
  1661       621    1283701.0   2067.2      0.0              if carpet.order_id not in order_groups:
  1662       535    1047504.0   1958.0      0.0                  order_groups[carpet.order_id] = []
  1663       535    3014085.0   5633.8      0.0                  logger.debug(f"Создана новая группа для заказа: {carpet.order_id}")
  1664       621    1144138.0   1842.4      0.0              order_groups[carpet.order_id].append(carpet)
  1665                                           
  1666       982  100714232.0 102560.3      0.0      logger.info(
  1667       491    1227597.0   2500.2      0.0          f"Группировка завершена: {len(order_groups)} уникальных заказов, {len(priority2_carpets)} полигонов приоритета 2"
  1668                                               )
  1669      1026    2168362.0   2113.4      0.0      for order_id, group in order_groups.items():
  1670       535  106269043.0 198633.7      0.0          logger.info(f"  • Заказ {order_id}: {len(group)} файлов")
  1671       491     878739.0   1789.7      0.0      if priority2_carpets:
  1672         2    1236518.0 618259.0      0.0          logger.info(
  1673         1       1956.0   1956.0      0.0              f"  • Приоритет 2 (заполнение пустот): {len(priority2_carpets)} файлов"
  1674                                                   )
  1675                                           
  1676       491     878939.0   1790.1      0.0      if verbose:
  1677                                                   st.info(f"Найдено {len(order_groups)} уникальных заказов для размещения:")
  1678                                                   for order_id, group in order_groups.items():
  1679                                                       st.info(f"  • Заказ {order_id}: {len(group)} файлов")
  1680                                                       # Show filenames for debugging
  1681                                                       for carpet in group:
  1682                                                           st.write(f"    - {carpet.filename}")
  1683                                           
  1684       491     783765.0   1596.3      0.0      sheet_counter = 0
  1685                                           
  1686                                               # Track sheets used per order for constraint checking
  1687       491    1821092.0   3708.9      0.0      order_sheet_usage = {order_id: 0 for order_id in order_groups.keys()}
  1688                                           
  1689       982  100077079.0 101911.5      0.0      logger.info(
  1690       491    1105307.0   2251.1      0.0          f"Используем упрощенный эффективный алгоритм: {len(order_groups)} заказов"
  1691                                               )
  1692                                           
  1693                                               # Check if we only have priority 2 polygons
  1694       491     895567.0   1824.0      0.0      if not order_groups and priority2_carpets:
  1695                                                   logger.info(
  1696                                                       f"Только файлы приоритета 2: {len(priority2_carpets)} файлов не размещаются (новые листы не создаются)"
  1697                                                   )
  1698                                                   if verbose:
  1699                                                       st.warning(
  1700                                                           f"⚠️ Только файлы приоритета 2: {len(priority2_carpets)} файлов не размещаются (новые листы не создаются)"
  1701                                                       )
  1702                                                   all_unplaced.extend(priority2_carpets)
  1703                                           
  1704                                                   # Progress update for early return
  1705                                                   if progress_callback:
  1706                                                       progress_callback(
  1707                                                           100, "Завершено: только файлы приоритета 2 (не размещены)"
  1708                                                       )
  1709                                           
  1710                                                   return placed_layouts, all_unplaced
  1711                                           
  1712                                               # NEW LOGIC: Priority queue for orders based on MAX_SHEETS_PER_ORDER constraint
  1713                                               # Track which order was placed first and its starting sheet
  1714       491     853381.0   1738.0      0.0      order_first_sheet = {}  # order_id -> first_sheet_number
  1715                                           
  1716                                               # Process orders using priority queue logic
  1717       491    1252259.0   2550.4      0.0      remaining_orders = dict(order_groups)  # Copy to modify
  1718       982    2342097.0   2385.0      0.0      max_iterations = max(
  1719       491     856267.0   1743.9      0.0          100, len(remaining_orders) * 50
  1720                                               )  # Safety limit with higher multiplier
  1721       491     799531.0   1628.4      0.0      iteration_count = 0
  1722                                           
  1723    102591  513744839.0   5007.7      0.1      while remaining_orders and any(
  1724     51295   81636276.0   1591.5      0.0          sheet["count"] - sheet["used"] > 0 for sheet in sheet_inventory
  1725                                               ):
  1726     51295   81216043.0   1583.3      0.0          iteration_count += 1
  1727     51295     1.08e+10 211136.1      1.5          logger.info(f"--- ИТЕРАЦИЯ {iteration_count} ---")
  1728     51295     1.05e+10 205177.1      1.5          logger.info(f"Остается заказов: {len(remaining_orders)}")
  1729    119571  230450258.0   1927.3      0.0          for order_id, carpets in remaining_orders.items():
  1730     68276     1.37e+10 200378.4      1.9              logger.info(f"  {order_id}: {len(carpets)} полигонов")
  1731                                           
  1732     51295  153428955.0   2991.1      0.0          if False and placed_layouts:  # Only if we have existing sheets
  1733                                                       logger.info("🔄 ПРОВЕРЯЕМ ДОЗАПОЛНЕНИЕ СУЩЕСТВУЮЩИХ ЛИСТОВ")
  1734                                           
  1735                                                       # Find single-polygon orders that can be added to existing sheets
  1736                                                       single_polygon_orders = {
  1737                                                           order_id: order_polygons
  1738                                                           for order_id, order_polygons in remaining_orders.items()
  1739                                                           if len(order_polygons) == 1
  1740                                                       }
  1741                                           
  1742                                                       if single_polygon_orders:
  1743                                                           logger.info(
  1744                                                               f"Найдено {len(single_polygon_orders)} однополигонных заказов для дозаполнения"
  1745                                                           )
  1746                                           
  1747                                                           filled_orders = 0
  1748                                                           for order_id, order_polygons in single_polygon_orders.items():
  1749                                                               carpet = order_polygons[0]
  1750                                                               color = carpet.color
  1751                                           
  1752                                                               # Try to place this single polygon on existing sheets with same color
  1753                                                               placed_successfully = False
  1754                                                               for layout_idx, existing_layout in enumerate(placed_layouts):
  1755                                                                   sheet_color = existing_layout.get("sheet_color", "серый")
  1756                                                                   if color != sheet_color:
  1757                                                                       continue
  1758                                           
  1759                                                                   current_usage = existing_layout.get("usage_percent", 0)
  1760                                                                   if current_usage >= 85:  # Skip nearly full sheets
  1761                                                                       continue
  1762                                           
  1763                                                                   sheet_size = existing_layout["sheet_size"]
  1764                                                                   existing_placed = existing_layout["placed_polygons"]
  1765                                           
  1766                                                                   logger.info(
  1767                                                                       f"Пытаемся дозаполнить лист #{existing_layout['sheet_number']} заказом {order_id}"
  1768                                                                   )
  1769                                           
  1770                                                                   try:
  1771                                                                       additional_placed, still_remaining = (
  1772                                                                           bin_packing_with_existing(
  1773                                                                               [carpet], existing_placed, sheet_size, verbose=False
  1774                                                                           )
  1775                                                                       )
  1776                                           
  1777                                                                       if additional_placed:
  1778                                                                           # Update existing layout
  1779                                                                           placed_layouts[layout_idx]["placed_polygons"] = (
  1780                                                                               existing_placed + additional_placed
  1781                                                                           )
  1782                                                                           new_usage = calculate_usage_percent(
  1783                                                                               placed_layouts[layout_idx]["placed_polygons"],
  1784                                                                               sheet_size,
  1785                                                                           )
  1786                                                                           placed_layouts[layout_idx]["usage_percent"] = new_usage
  1787                                           
  1788                                                                           # Update orders_on_sheet set
  1789                                                                           if "orders_on_sheet" not in placed_layouts[layout_idx]:
  1790                                                                               placed_layouts[layout_idx]["orders_on_sheet"] = (
  1791                                                                                   set()
  1792                                                                               )
  1793                                                                           placed_layouts[layout_idx]["orders_on_sheet"].add(
  1794                                                                               order_id
  1795                                                                           )
  1796                                           
  1797                                                                           # Track sheet usage for this order
  1798                                                                           if order_id not in order_sheet_usage:
  1799                                                                               order_sheet_usage[order_id] = 0
  1800                                                                           order_sheet_usage[order_id] = 1
  1801                                           
  1802                                                                           # Track order first sheet
  1803                                                                           if order_id not in order_first_sheet:
  1804                                                                               order_first_sheet[order_id] = existing_layout[
  1805                                                                                   "sheet_number"
  1806                                                                               ]
  1807                                           
  1808                                                                           filled_orders += 1
  1809                                                                           placed_successfully = True
  1810                                           
  1811                                                                           logger.info(
  1812                                                                               f"✅ ДОЗАПОЛНЕНИЕ УСПЕШНО: Заказ {order_id} размещен на лист #{existing_layout['sheet_number']} ({current_usage:.1f}% → {new_usage:.1f}%)"
  1813                                                                           )
  1814                                                                           break
  1815                                                                   except Exception as e:
  1816                                                                       logger.debug(
  1817                                                                           f"Не удалось дозаполнить лист #{existing_layout['sheet_number']}: {e}"
  1818                                                                       )
  1819                                                                       continue
  1820                                           
  1821                                                               if placed_successfully:
  1822                                                                   # Remove this order from remaining_orders
  1823                                                                   del remaining_orders[order_id]
  1824                                           
  1825                                                           if filled_orders > 0:
  1826                                                               logger.info(
  1827                                                                   f"Дозаполнение завершено: {filled_orders} заказов размещено на существующих листах"
  1828                                                               )
  1829                                                               placed_on_current_sheet = True
  1830                                                               continue  # Skip to next iteration, don't create new sheets
  1831                                           
  1832                                                   # If no orders were filled by existing sheets, proceed with normal sheet creation
  1833                                           
  1834     51295  213772999.0   4167.5      0.0          if iteration_count > max_iterations:
  1835       980  113072117.0 115379.7      0.0              logger.error(
  1836       490    2249435.0   4590.7      0.0                  f"Превышен лимит итераций ({max_iterations}), прерываем выполнение"
  1837                                                       )
  1838       490    5547108.0  11320.6      0.0              break
  1839                                           
  1840     50805  197546004.0   3888.3      0.0          placed_on_current_sheet = False
  1841                                           
  1842                                                   # Try each available sheet type, GROUP BY COLOR for better organization
  1843                                                   # Сначала группируем листы по цвету: чёрный, потом серый, потом остальные
  1844    101610  405637624.0   3992.1      0.1          available_sheet_types = [
  1845    101610  662525239.0   6520.3      0.1              st for st in sheet_inventory if st["count"] - st["used"] > 0
  1846                                                   ]
  1847                                           
  1848                                                   # Группируем по цветам
  1849     50805  210603736.0   4145.3      0.0          sheets_by_color = {}
  1850    103460  526738050.0   5091.2      0.1          for sheet_type in available_sheet_types:
  1851     52655  217523028.0   4131.1      0.0              color = sheet_type.get("color", "серый")
  1852     52655  215254871.0   4088.0      0.0              if color not in sheets_by_color:
  1853     52655  212257882.0   4031.1      0.0                  sheets_by_color[color] = []
  1854     52655  211613028.0   4018.9      0.0              sheets_by_color[color].append(sheet_type)
  1855                                           
  1856                                                   # Обрабатываем в порядке: черный, серый, остальные цвета
  1857     50805  216698217.0   4265.3      0.0          color_priority = ["чёрный", "серый"]
  1858     50805  206198444.0   4058.6      0.0          ordered_sheet_types = []
  1859                                           
  1860    152415  740074050.0   4855.7      0.1          for color in color_priority:
  1861    101610  414121804.0   4075.6      0.1              if color in sheets_by_color:
  1862     52655  232174166.0   4409.3      0.0                  ordered_sheet_types.extend(sheets_by_color[color])
  1863                                           
  1864                                                   # Добавляем остальные цвета
  1865    103460  589196094.0   5694.9      0.1          for color, sheet_list in sheets_by_color.items():
  1866     52655  229085038.0   4350.7      0.0              if color not in color_priority:
  1867                                                           ordered_sheet_types.extend(sheet_list)
  1868                                           
  1869    103419  836916145.0   8092.5      0.1          for sheet_type in ordered_sheet_types:
  1870     52642  239527674.0   4550.1      0.0              sheet_size = (sheet_type["width"], sheet_type["height"])
  1871     52642  227358818.0   4319.0      0.0              sheet_color = sheet_type.get("color", "серый")
  1872                                           
  1873                                                       # Calculate which sheet number this would be
  1874     52642  225908321.0   4291.4      0.0              next_sheet_number = sheet_counter + 1
  1875                                           
  1876                                                       # NEW APPROACH: Reserve sheets for started orders to guarantee completion
  1877                                                       # Step 1: Check which started orders need priority on this sheet
  1878     52642  226522787.0   4303.1      0.0              priority_orders = []
  1879     52642  223619017.0   4247.9      0.0              blocked_orders = []
  1880     52642  226502065.0   4302.7      0.0              new_orders = []
  1881                                           
  1882    138845  789966910.0   5689.6      0.1              for order_id, order_polygons in remaining_orders.items():
  1883                                                           # Skip orders that don't apply to MAX_SHEETS_PER_ORDER constraint
  1884     86203  376168579.0   4363.8      0.1                  is_constrained = (
  1885    258609 1112966156.0   4303.7      0.2                      max_sheets_per_order is not None
  1886     86203  374599328.0   4345.5      0.1                      and order_id != "additional"
  1887     86203  370080021.0   4293.1      0.1                      and order_id != "unknown"  # Manual uploads are not limited
  1888    172406  793500106.0   4602.5      0.1                      and not str(order_id).startswith(
  1889     86203  377316599.0   4377.1      0.1                          "group_"
  1890                                                               )  # Group uploads are not limited
  1891                                                           )
  1892                                           
  1893     86203  392650315.0   4554.9      0.1                  if not is_constrained:
  1894                                                               # Unconstrained orders can be placed anytime
  1895                                                               new_orders.append((order_id, order_polygons))
  1896                                                               continue
  1897                                           
  1898     86203  417171203.0   4839.4      0.1                  if order_id in order_first_sheet:
  1899                                                               # Order already started - check if within range
  1900     33154  146859727.0   4429.6      0.0                      first_sheet = order_first_sheet[order_id]
  1901     33154  145307883.0   4382.8      0.0                      max_allowed_sheet = first_sheet + max_sheets_per_order - 1
  1902                                           
  1903     33154  147763373.0   4456.9      0.0                      if next_sheet_number <= max_allowed_sheet:
  1904                                                                   # Within range - MAXIMUM priority (must complete this order)
  1905        69     293561.0   4254.5      0.0                          priority_orders.append((order_id, order_polygons))
  1906       138     727150.0   5269.2      0.0                          logger.debug(
  1907        69     330644.0   4791.9      0.0                              f"Заказ {order_id}: МАКСИМАЛЬНЫЙ приоритет (листы {first_sheet}-{max_allowed_sheet}, текущий {next_sheet_number})"
  1908                                                                   )
  1909                                                               else:
  1910                                                                   # Outside range - blocked from starting new placement
  1911     33085  151887360.0   4590.8      0.0                          blocked_orders.append(order_id)
  1912     66170  374194102.0   5655.0      0.1                          logger.debug(
  1913     33085  170904177.0   5165.6      0.0                              f"Заказ {order_id}: ЗАБЛОКИРОВАН (вне диапазона {first_sheet}-{max_allowed_sheet}, текущий {next_sheet_number})"
  1914                                                                   )
  1915                                                           else:
  1916                                                               # New order - can start only if no priority orders need this sheet
  1917     53049  252725695.0   4764.0      0.0                      new_orders.append((order_id, order_polygons))
  1918                                           
  1919                                                       # PRIORITY STRATEGY: If there are started orders within range, give them ALL the space
  1920     52642  289023452.0   5490.4      0.0              if priority_orders:
  1921                                                           # Only consider priority orders - they get the entire sheet
  1922        24     127463.0   5311.0      0.0                  orders_to_consider = priority_orders
  1923        48    4734401.0  98633.4      0.0                  logger.info(
  1924        24     136262.0   5677.6      0.0                      f"Лист {next_sheet_number}: РЕЖИМ ПРИОРИТЕТА - {len(priority_orders)} начатых заказов"
  1925                                                           )
  1926                                                       else:
  1927                                                           # No priority orders - allow new orders to start
  1928                                                           # IMPROVED STRATEGY: Sort new orders by carpet count (descending)
  1929                                                           # Orders with more carpets should be processed first as they are harder to fit within MAX_SHEETS_PER_ORDER constraint
  1930    105236  740977159.0   7041.1      0.1                  new_orders_sorted = sorted(
  1931     52618  286812857.0   5450.9      0.0                      new_orders, key=lambda x: len(x[1]), reverse=True
  1932                                                           )
  1933     52618  278188666.0   5286.9      0.0                  orders_to_consider = new_orders_sorted
  1934    105236     1.26e+10 119572.8      1.7                  logger.info(
  1935     52618  324673386.0   6170.4      0.0                      f"Лист {next_sheet_number}: Обычный режим - {len(new_orders_sorted)} новых заказов (отсортированы по убыванию количества ковров)"
  1936                                                           )
  1937                                                           # Log order sorting for debugging
  1938    105277  829704110.0   7881.2      0.1                  for order_id, order_polygons in new_orders_sorted[:5]:  # Show top 5
  1939     52659  520179468.0   9878.3      0.1                      logger.debug(f"  Заказ {order_id}: {len(order_polygons)} ковров")
  1940     52618  315262083.0   5991.5      0.0                  if len(new_orders_sorted) > 5:
  1941         8      66770.0   8346.2      0.0                      logger.debug(f"  ... еще {len(new_orders_sorted) - 5} заказов")
  1942                                           
  1943                                                       # Collect polygons from orders that can fit on this sheet
  1944     52642  305417954.0   5801.8      0.0              compatible_polygons = []
  1945     52642  311509440.0   5917.5      0.0              orders_to_try = []
  1946                                           
  1947    105458  805113469.0   7634.4      0.1              for order_id, order_polygons in orders_to_consider:
  1948                                                           # Filter polygons by color
  1949     52816  293592447.0   5558.8      0.0                  color_matched_polygons = []
  1950    105903  805288718.0   7604.0      0.1                  for carpet in order_polygons:
  1951     53087  317184591.0   5974.8      0.0                      if carpet.color == sheet_color:
  1952     51149  301610722.0   5896.7      0.0                          color_matched_polygons.append(carpet)
  1953                                           
  1954     52816  301503203.0   5708.6      0.0                  if color_matched_polygons:
  1955     50922  298602826.0   5863.9      0.0                      compatible_polygons.extend(color_matched_polygons)
  1956     50922  285689066.0   5610.3      0.0                      orders_to_try.append(order_id)
  1957                                           
  1958     52642  308198390.0   5854.6      0.0              if not compatible_polygons:
  1959      3672   25104918.0   6836.9      0.0                  logger.debug(
  1960      1836   11438513.0   6230.1      0.0                      f"Нет совместимых полигонов для листа {sheet_type['name']} цвета {sheet_color}"
  1961                                                           )
  1962      1836    8964335.0   4882.5      0.0                  continue  # No compatible polygons for this sheet color
  1963                                           
  1964                                                       # NEW STRATEGY: Try to fill existing sheets BEFORE creating a new one
  1965     50806  296852476.0   5842.9      0.0              filled_existing_sheet = False
  1966     50806     1.15e+10 226043.8      1.6              logger.info("🚀 НОВЫЙ АЛГОРИТМ: Попытка дозаполнить существующие листы")
  1967                                           
  1968                                                       # Try to add compatible polygons to existing sheets of the same color first
  1969     91574  977362785.0  10672.9      0.1              for layout_idx, existing_layout in enumerate(placed_layouts):
  1970     40768  233398374.0   5725.0      0.0                  if existing_layout.get("sheet_color") == sheet_color:
  1971     16886   97545819.0   5776.7      0.0                      current_usage = existing_layout.get("usage_percent", 0)
  1972                                           
  1973                                                               # Skip nearly full sheets (>90%) to avoid tiny gaps
  1974     16886   98212038.0   5816.2      0.0                      if current_usage >= 90:
  1975        13      71946.0   5534.3      0.0                          continue
  1976                                           
  1977     16873   97223692.0   5762.1      0.0                      existing_placed = existing_layout["placed_polygons"]
  1978     16873   96412026.0   5714.0      0.0                      sheet_size = existing_layout["sheet_size"]
  1979                                           
  1980     33746  247479129.0   7333.6      0.0                      logger.debug(
  1981     16873  125038042.0   7410.5      0.0                          f"Пытаемся дозаполнить лист #{existing_layout['sheet_number']} (заполнение: {current_usage:.1f}%)"
  1982                                                               )
  1983                                           
  1984     16873   98098591.0   5813.9      0.0                      try:
  1985     33746     3.79e+11 1.12e+07     52.4                          additional_placed, still_remaining = bin_packing_with_existing(
  1986     16873   97514135.0   5779.3      0.0                              compatible_polygons,
  1987     16873   97450797.0   5775.5      0.0                              existing_placed,
  1988     16873   96869703.0   5741.1      0.0                              sheet_size,
  1989     16873   97874745.0   5800.7      0.0                              verbose=False,
  1990                                                                   )
  1991                                           
  1992     16873  220421236.0  13063.5      0.0                          if additional_placed:
  1993        26    4156715.0 159873.7      0.0                              logger.info(
  1994        13     882756.0  67904.3      0.0                                  f"✅ ДОЗАПОЛНЕНИЕ: Лист #{existing_layout['sheet_number']} получил +{len(additional_placed)} полигонов ({current_usage:.1f}% → {calculate_usage_percent(existing_placed + additional_placed, sheet_size):.1f}%)"
  1995                                                                       )
  1996                                           
  1997                                                                       # Update existing layout
  1998        13      82555.0   6350.4      0.0                              placed_layouts[layout_idx]["placed_polygons"] = (
  1999        13      81996.0   6307.4      0.0                                  existing_placed + additional_placed
  2000                                                                       )
  2001        13      85697.0   6592.1      0.0                              placed_layouts[layout_idx]["usage_percent"] = (
  2002        26    1921494.0  73903.6      0.0                                  calculate_usage_percent(
  2003        13      77316.0   5947.4      0.0                                      placed_layouts[layout_idx]["placed_polygons"],
  2004        13      74521.0   5732.4      0.0                                      sheet_size,
  2005                                                                           )
  2006                                                                       )
  2007                                           
  2008                                                                       # Track orders and remove placed polygons from remaining orders
  2009        13      91703.0   7054.1      0.0                              additional_orders_on_sheet = set()
  2010        34     259817.0   7641.7      0.0                              for placed_tuple in additional_placed:
  2011                                                                           # Handle different tuple structures for order_id
  2012        21     135708.0   6462.3      0.0                                  if len(placed_tuple) == 7:
  2013                                                                               # Extended format from bin_packing_with_existing: (polygon, x, y, angle, file_name, color, order_id)
  2014        21     127329.0   6063.3      0.0                                      placed_order_id = placed_tuple[6]
  2015                                                                           elif len(placed_tuple) > 3:
  2016                                                                               # Standard format: (polygon, file_name, color, order_id)
  2017                                                                               placed_order_id = placed_tuple[3]
  2018                                                                           else:
  2019                                                                               placed_order_id = "unknown"
  2020        21     131028.0   6239.4      0.0                                  additional_orders_on_sheet.add(placed_order_id)
  2021                                           
  2022                                                                           # Update order sheet tracking
  2023        21     131518.0   6262.8      0.0                                  if placed_order_id not in order_sheet_usage:
  2024                                                                               order_sheet_usage[placed_order_id] = 0
  2025        21     136542.0   6502.0      0.0                                  if placed_order_id not in order_first_sheet:
  2026        18     106928.0   5940.4      0.0                                      order_first_sheet[placed_order_id] = (
  2027        18     111401.0   6188.9      0.0                                          existing_layout["sheet_number"]
  2028                                                                               )
  2029                                           
  2030                                                                       # Remove placed polygons from compatible_polygons for next iterations
  2031                                                                       # ИСПРАВЛЕНИЕ: точечное совпадение по 3 полям вместо set-сравнения
  2032                                                                       # Из-за разной длины кортежей (4 vs 7) set-сравнение всегда возвращало False
  2033        13      88770.0   6828.5      0.0                              placed_keys = set()
  2034        34     262051.0   7707.4      0.0                              for placed_poly in additional_placed:
  2035        21     128863.0   6136.3      0.0                                  if len(placed_poly) >= 5:
  2036                                                                               # Полигон из bin_packing_with_existing: (polygon, x, y, angle, filename, color, order_id)
  2037        21     136334.0   6492.1      0.0                                      key = (
  2038        21     126836.0   6039.8      0.0                                          placed_poly[4],
  2039        21     124046.0   5907.0      0.0                                          placed_poly[5],
  2040        21     128860.0   6136.2      0.0                                          placed_poly[6],
  2041                                                                               )  # filename, color, order_id
  2042                                                                           else:
  2043                                                                               # Обычный полигон: (polygon, filename, color, order_id)
  2044                                                                               key = (
  2045                                                                                   placed_poly[1],
  2046                                                                                   placed_poly[2],
  2047                                                                                   placed_poly[3],
  2048                                                                               )
  2049        21     127393.0   6066.3      0.0                                  placed_keys.add(key)
  2050                                           
  2051                                                                       # Удаляем полигоны с совпадающими ключами
  2052        26     181519.0   6981.5      0.0                              compatible_polygons = [
  2053       296    3112867.0  10516.4      0.0                                  p
  2054       322    2015548.0   6259.5      0.0                                  for p in compatible_polygons
  2055       296    2001872.0   6763.1      0.0                                  if (p.filename, p.color, p.order_id) not in placed_keys
  2056                                                                       ]
  2057                                           
  2058                                                                       # Update remaining orders - remove empty orders or reduce polygon counts
  2059       283    2003614.0   7079.9      0.0                              for order_id in list(remaining_orders.keys()):
  2060       270    1774803.0   6573.3      0.0                                  if order_id in additional_orders_on_sheet:
  2061                                                                               # Count how many polygons from this order were placed
  2062                                                                               # ИСПРАВЛЕНИЕ: правильно извлекаем order_id из разных форматов кортежей
  2063        21     140102.0   6671.5      0.0                                      placed_from_order = []
  2064        64     518318.0   8098.7      0.0                                      for p in additional_placed:
  2065        43     276798.0   6437.2      0.0                                          poly_order_id = None
  2066        43     280143.0   6515.0      0.0                                          if len(p) >= 5:
  2067                                                                                       # Полигон из bin_packing_with_existing: (polygon, x, y, angle, filename, color, order_id)
  2068        43     496318.0  11542.3      0.0                                              poly_order_id = p[6] if len(p) > 6 else None
  2069                                                                                   else:
  2070                                                                                       # Обычный полигон: (polygon, filename, color, order_id)
  2071                                                                                       poly_order_id = p[3] if len(p) > 3 else None
  2072                                           
  2073        43     284898.0   6625.5      0.0                                          if poly_order_id == order_id:
  2074        21     135709.0   6462.3      0.0                                              placed_from_order.append(p)
  2075                                           
  2076                                                                               # Remove exactly those polygons that were placed
  2077                                                                               # ИСПРАВЛЕНИЕ: учитываем правильный формат кортежей
  2078        42     394057.0   9382.3      0.0                                      for placed_poly in placed_from_order:
  2079                                                                                   # Извлекаем ключ из размещенного полигона
  2080        21     146463.0   6974.4      0.0                                          if len(placed_poly) >= 5:
  2081                                                                                       # Полигон из bin_packing_with_existing: (polygon, x, y, angle, filename, color, order_id)
  2082        21     139684.0   6651.6      0.0                                              placed_key = (
  2083        21     139269.0   6631.9      0.0                                                  placed_poly[4],
  2084        21     135917.0   6472.2      0.0                                                  placed_poly[5],
  2085        21     134518.0   6405.6      0.0                                                  placed_poly[6],
  2086                                                                                       )
  2087                                                                                   else:
  2088                                                                                       # Обычный полигон: (polygon, filename, color, order_id)
  2089                                                                                       placed_key = (
  2090                                                                                           placed_poly[1],
  2091                                                                                           placed_poly[2],
  2092                                                                                           placed_poly[3],
  2093                                                                                       )
  2094                                           
  2095        54     484168.0   8966.1      0.0                                          for orig_carpet in remaining_orders[order_id][:]:
  2096                                                                                       # Сравниваем по ключу (filename, color, order_id)
  2097        54     359215.0   6652.1      0.0                                              orig_key = (
  2098        54     358863.0   6645.6      0.0                                                  orig_carpet.filename,
  2099        54     375840.0   6960.0      0.0                                                  orig_carpet.color,
  2100        54     358447.0   6637.9      0.0                                                  orig_carpet.order_id,
  2101                                                                                       )
  2102        54     406217.0   7522.5      0.0                                              if orig_key == placed_key:
  2103        42     451548.0  10751.1      0.0                                                  remaining_orders[order_id].remove(
  2104        21     152261.0   7250.5      0.0                                                      orig_carpet
  2105                                                                                           )
  2106        21     146393.0   6971.1      0.0                                                  break
  2107                                           
  2108                                                                               # Remove empty orders
  2109        21     139966.0   6665.0      0.0                                      if not remaining_orders[order_id]:
  2110        14    2080108.0 148579.1      0.0                                          logger.info(
  2111         7      50357.0   7193.9      0.0                                              f"  Заказ {order_id} полностью размещен (дозаполнение)"
  2112                                                                                   )
  2113         7      62998.0   8999.7      0.0                                          del remaining_orders[order_id]
  2114                                           
  2115                                                                       # Update orders on this sheet
  2116        13     108185.0   8321.9      0.0                              if "orders_on_sheet" not in placed_layouts[layout_idx]:
  2117                                                                           placed_layouts[layout_idx]["orders_on_sheet"] = set()
  2118        13     120410.0   9262.3      0.0                              placed_layouts[layout_idx]["orders_on_sheet"].update(
  2119                                                                           additional_orders_on_sheet
  2120                                                                       )
  2121                                           
  2122                                                                       filled_existing_sheet = True
  2123                                                                       placed_on_current_sheet = True
  2124                                           
  2125                                                                       if verbose:
  2126                                                                           st.success(
  2127                                                                               f"✅ Дозаполнен лист #{existing_layout['sheet_number']}: +{len(additional_placed)} деталей"
  2128                                                                           )
  2129                                           
  2130                                                                       break  # Found space, don't need to create new sheet yet
  2131                                           
  2132        13      23956.0   1842.8      0.0                      except Exception as e:
  2133        26     100855.0   3879.0      0.0                          logger.debug(
  2134        13      47007.0   3615.9      0.0                              f"Не удалось дозаполнить лист #{existing_layout['sheet_number']}: {e}"
  2135                                                                   )
  2136        13      59156.0   4550.5      0.0                          continue
  2137                                           
  2138                                                       # If we filled an existing sheet, continue to next iteration without creating new sheet
  2139     50806  450207713.0   8861.3      0.1              if filled_existing_sheet:
  2140                                                           continue
  2141                                           
  2142     50806  435651252.0   8574.8      0.1              sheet_counter += 1
  2143                                           
  2144     50806  448377175.0   8825.3      0.1              if verbose:
  2145                                                           st.info(
  2146                                                               f"  Лист #{sheet_counter}: {sheet_type['name']} ({sheet_size[0]}x{sheet_size[1]} см, цвет: {sheet_color})"
  2147                                                           )
  2148                                                           st.info(
  2149                                                               f"  Совместимых полигонов: {len(compatible_polygons)} из заказов: {orders_to_try}"
  2150                                                           )
  2151                                           
  2152    101612     1.22e+10 120090.1      1.7              logger.info(
  2153     50806  589737349.0  11607.6      0.1                  f"Обрабатываем лист #{sheet_counter}: {len(compatible_polygons)} совместимых полигонов из заказов {orders_to_try}"
  2154                                                       )
  2155                                           
  2156                                                       # Try to place compatible polygons on this sheet
  2157    101612     1.42e+10 139697.6      2.0              placed, remaining_from_sheet = bin_packing(
  2158     50806  449951681.0   8856.3      0.1                  compatible_polygons, sheet_size, verbose=verbose
  2159                                                       )
  2160                                           
  2161     50806  358809912.0   7062.4      0.0              if placed:  # If we managed to place something
  2162        28     236074.0   8431.2      0.0                  sheet_type["used"] += 1
  2163                                           
  2164                                                           # Track which orders are represented on this sheet
  2165        28     236488.0   8446.0      0.0                  orders_on_sheet = set()
  2166        28     224616.0   8022.0      0.0                  placed_polygon_names = set()
  2167                                           
  2168       114    1046262.0   9177.7      0.0                  for placed_carpet in placed:
  2169                                                               # bin_packing returns: (polygon, x_offset, y_offset, angle, file_name, color, order_id)
  2170        86     667086.0   7756.8      0.0                      if len(placed_carpet) >= 5:
  2171        86     658775.0   7660.2      0.0                          filename = placed_carpet[4]  # file_name is at index 4
  2172                                                               else:
  2173                                                                   filename = "unknown"  # fallback
  2174                                           
  2175        86     656049.0   7628.5      0.0                      placed_polygon_names.add(filename)
  2176                                           
  2177                                                               # Find which order this polygon belongs to
  2178        86     652489.0   7587.1      0.0                      found_order = False
  2179       900    7416771.0   8240.9      0.0                      for order_id, order_polygons in remaining_orders.items():
  2180      3598   32976337.0   9165.2      0.0                          for carpet in order_polygons:
  2181      2784   21716811.0   7800.6      0.0                              if carpet.filename == filename:
  2182        86     659126.0   7664.3      0.0                                  orders_on_sheet.add(order_id)
  2183       172    1602724.0   9318.2      0.0                                  logger.debug(
  2184        86     694809.0   8079.2      0.0                                      f"    Полигон {filename} принадлежит заказу {order_id}"
  2185                                                                           )
  2186        86     667018.0   7756.0      0.0                                  found_order = True
  2187        86     664572.0   7727.6      0.0                                  break
  2188       900    6949154.0   7721.3      0.0                          if found_order:
  2189        86     683006.0   7941.9      0.0                              break
  2190                                           
  2191        86     671201.0   7804.7      0.0                      if not found_order:
  2192                                                                   logger.warning(f"    Не найден заказ для полигона {filename}")
  2193                                           
  2194        56    7083348.0 126488.4      0.0                  logger.info(
  2195        28     378900.0  13532.1      0.0                      f"УСПЕХ: Лист #{sheet_counter} содержит заказы: {orders_on_sheet}"
  2196                                                           )
  2197                                           
  2198                                                           # Update order sheet usage and track first sheet
  2199        96    1027821.0  10706.5      0.0                  for order_id in orders_on_sheet:
  2200        68     598981.0   8808.5      0.0                      if order_id in order_sheet_usage:
  2201        68     606596.0   8920.5      0.0                          order_sheet_usage[order_id] += 1
  2202                                           
  2203                                                                   # Track first sheet for MAX_SHEETS_PER_ORDER constraint
  2204        68     579431.0   8521.0      0.0                          if order_id not in order_first_sheet:
  2205        26     214071.0   8233.5      0.0                              order_first_sheet[order_id] = sheet_counter
  2206        52    4017782.0  77265.0      0.0                              logger.info(
  2207        26     221961.0   8537.0      0.0                                  f"  Заказ {order_id}: начат на листе {sheet_counter}"
  2208                                                                       )
  2209                                           
  2210       136   11590165.0  85221.8      0.0                          logger.info(
  2211        68     617707.0   9083.9      0.0                              f"  Заказ {order_id}: теперь использует {order_sheet_usage[order_id]} листов"
  2212                                                                   )
  2213                                           
  2214        56     477652.0   8529.5      0.0                  placed_layouts.append(
  2215        28     262958.0   9391.4      0.0                      {
  2216        28     233764.0   8348.7      0.0                          "sheet_number": sheet_counter,
  2217        28     240820.0   8600.7      0.0                          "sheet_type": sheet_type["name"],
  2218        28     243963.0   8713.0      0.0                          "sheet_color": sheet_color,  # Add sheet color directly
  2219        28     235510.0   8411.1      0.0                          "sheet_size": sheet_size,
  2220        28     227970.0   8141.8      0.0                          "placed_polygons": placed,
  2221        28    2568443.0  91730.1      0.0                          "usage_percent": calculate_usage_percent(placed, sheet_size),
  2222        28     256738.0   9169.2      0.0                          "orders_on_sheet": list(orders_on_sheet),
  2223                                                               }
  2224                                                           )
  2225                                           
  2226                                                           # Update progress callback if provided
  2227        28     237888.0   8496.0      0.0                  if progress_callback:
  2228                                                               # Better estimate based on actual polygons and sheet capacity
  2229        44     392244.0   8914.6      0.0                      total_priority1_polygons = len(
  2230        44     362701.0   8243.2      0.0                          [
  2231      3190   26267456.0   8234.3      0.0                              p
  2232       858    7226631.0   8422.6      0.0                              for order_polys in order_groups.values()
  2233      3190   32140910.0  10075.5      0.0                              for p in order_polys
  2234                                                                   ]
  2235                                                               )
  2236                                                               # Estimate sheets needed based on average usage and total polygons
  2237        44     401325.0   9121.0      0.0                      estimated_total_sheets = max(
  2238        22     186345.0   8470.2      0.0                          1, total_priority1_polygons // 4
  2239                                                               )  # Assume 4 polygons per sheet on average
  2240        44     382540.0   8694.1      0.0                      progress_percent = min(
  2241        22     184041.0   8365.5      0.0                          95,
  2242        44     373737.0   8494.0      0.0                          50
  2243        22     199058.0   9048.1      0.0                          + (len(placed_layouts) / max(1, estimated_total_sheets)) * 40,
  2244                                                               )  # 50-95% range
  2245        44   23171182.0 526617.8      0.0                      progress_callback(
  2246        22     180964.0   8225.6      0.0                          progress_percent,
  2247        22     210787.0   9581.2      0.0                          f"Создан лист #{sheet_counter} ({sheet_type['name']})",
  2248                                                               )
  2249                                           
  2250                                                           # Remove placed polygons from remaining orders
  2251                                                           # We need to match polygons by both filename AND order_id
  2252        28     301934.0  10783.4      0.0                  placed_polygon_keys = set()  # Maps (filename, order_id) -> True
  2253       114    1186090.0  10404.3      0.0                  for carpet in placed:
  2254        86     742234.0   8630.6      0.0                      if len(carpet) >= 5:
  2255        86     746005.0   8674.5      0.0                          filename = carpet[4]  # file_name is at index 4
  2256        86     742512.0   8633.9      0.0                          if len(carpet) >= 7:
  2257        86     743976.0   8650.9      0.0                              order_id = carpet[6]  # order_id is at index 6
  2258        86     760955.0   8848.3      0.0                              placed_polygon_keys.add((filename, order_id))
  2259       172    1674658.0   9736.4      0.0                              logger.debug(
  2260        86     781693.0   9089.5      0.0                                  f"  Размещен полигон: файл='{filename}', заказ='{order_id}'"
  2261                                                                       )
  2262                                           
  2263        28     244662.0   8737.9      0.0                  total_removed = 0
  2264       570    5486947.0   9626.2      0.0                  for order_id in list(remaining_orders.keys()):
  2265       542    5024514.0   9270.3      0.0                      original_count = len(remaining_orders[order_id])
  2266                                                               
  2267                                                               # Only remove polygons that were actually placed from this specific order
  2268       542    4969214.0   9168.3      0.0                      new_order_list = []
  2269      1898   21614531.0  11388.1      0.0                      for carpet in remaining_orders[order_id]:
  2270                                                                   # Check if this carpet was placed
  2271      1356   12776411.0   9422.1      0.0                          carpet_key = (carpet.filename, carpet.order_id)
  2272      1356   12577417.0   9275.4      0.0                          if carpet_key not in placed_polygon_keys:
  2273      1270   11709869.0   9220.4      0.0                              new_order_list.append(carpet)
  2274                                                               
  2275       542    5079486.0   9371.7      0.0                      remaining_orders[order_id] = new_order_list
  2276       542    5123340.0   9452.7      0.0                      removed_count = original_count - len(remaining_orders[order_id])
  2277       542    5059658.0   9335.2      0.0                      total_removed += removed_count
  2278                                           
  2279       542    5080331.0   9373.3      0.0                      if removed_count > 0:
  2280       136   18810338.0 138311.3      0.0                          logger.info(
  2281        68     669523.0   9845.9      0.0                              f"  Из заказа {order_id} удалено {removed_count} размещенных полигонов"
  2282                                                                   )
  2283                                           
  2284                                                               # Remove empty orders
  2285       542    5325574.0   9825.8      0.0                      if not remaining_orders[order_id]:
  2286        29    5528024.0 190621.5      0.0                          logger.info(f"  Заказ {order_id} полностью размещен")
  2287        29     311081.0  10726.9      0.0                          del remaining_orders[order_id]
  2288                                           
  2289        28    6774511.0 241946.8      0.0                  logger.info(f"Общее количество удаленных полигонов: {total_removed}")
  2290        28    5072265.0 181152.3      0.0                  logger.info(f"Оставшиеся заказы: {list(remaining_orders.keys())}")
  2291       541    6030439.0  11146.8      0.0                  for order_id, carpets in remaining_orders.items():
  2292       513   82456497.0 160733.9      0.0                      logger.info(f"  {order_id}: {len(carpets)} полигонов")
  2293                                           
  2294        28     285030.0  10179.6      0.0                  placed_on_current_sheet = True
  2295                                           
  2296        28     291038.0  10394.2      0.0                  if verbose:
  2297                                                               st.success(
  2298                                                                   f"  ✅ Размещено {len(placed)} объектов на листе {sheet_type['name']}"
  2299                                                               )
  2300                                                               st.info(f"  📊 Заказы на листе: {', '.join(orders_on_sheet)}")
  2301                                           
  2302        28     298375.0  10656.2      0.0                  break  # Move to next iteration with remaining orders
  2303                                           
  2304     50805  601747013.0  11844.2      0.1          if not placed_on_current_sheet:
  2305                                                       # No sheet type could accommodate any remaining polygons in this iteration
  2306                                                       # Check if we still have available sheets of any type
  2307    101554 1678361072.0  16526.8      0.2              sheets_still_available = any(
  2308     50777  571801623.0  11261.0      0.1                  sheet["count"] - sheet["used"] > 0 for sheet in sheet_inventory
  2309                                                       )
  2310                                           
  2311     50777  612421717.0  12061.0      0.1              if not sheets_still_available:
  2312                                                           logger.warning(
  2313                                                               f"Все листы закончились. Не удалось разместить оставшиеся заказы: {list(remaining_orders.keys())}"
  2314                                                           )
  2315                                                           break
  2316                                                       else:
  2317                                                           # Continue to next iteration - might be color/size mismatch this round
  2318    101554 1387993982.0  13667.5      0.2                  available_sheets_count = sum(
  2319     50777  578996715.0  11402.7      0.1                      max(0, sheet["count"] - sheet["used"]) for sheet in sheet_inventory
  2320                                                           )
  2321                                           
  2322                                                           # Enhanced debugging: show what's blocking placement
  2323     50777     1.39e+10 274326.7      1.9                  logger.info(f"Не удалось разместить в итерации {iteration_count}:")
  2324     50777     1.23e+10 242004.8      1.7                  logger.info(f"  Доступно листов: {available_sheets_count}")
  2325     50777     1.15e+10 227127.1      1.6                  logger.info(f"  Осталось заказов: {len(remaining_orders)}")
  2326                                           
  2327                                                           # Show remaining orders and their polygon counts
  2328    118005 2015552619.0  17080.2      0.3                  for order_id, order_polygons in remaining_orders.items():
  2329     67228  797739302.0  11866.2      0.1                      colors_in_order = {}
  2330    161876 2562196925.0  15828.1      0.4                      for carpet in order_polygons:
  2331     94648 1113483021.0  11764.5      0.2                          color = carpet.color
  2332     94648 1121931729.0  11853.7      0.2                          colors_in_order[color] = colors_in_order.get(color, 0) + 1
  2333    134456     1.61e+10 119621.5      2.2                      logger.info(
  2334     67228 1034027586.0  15380.9      0.1                          f"    {order_id}: {len(order_polygons)} полигонов, цвета: {colors_in_order}"
  2335                                                               )
  2336                                           
  2337                                                           # Show available sheets
  2338    103382 1802344249.0  17433.8      0.2                  for sheet_type in sheet_inventory:
  2339     52605  649848197.0  12353.4      0.1                      remaining = sheet_type["count"] - sheet_type["used"]
  2340     52605  627403115.0  11926.7      0.1                      if remaining > 0:
  2341    105210     1.25e+10 119032.6      1.7                          logger.info(
  2342     52605  695380665.0  13218.9      0.1                              f"    Доступен лист: {sheet_type['name']} цвет {sheet_type.get('color', 'серый')}, осталось: {remaining}"
  2343                                                                   )
  2344                                           
  2345     50777  638735495.0  12579.2      0.1                  if verbose:
  2346                                                               st.info(
  2347                                                                   f"⚠️ Пропуск итерации {iteration_count}: нет совместимых комбинаций полигон/лист"
  2348                                                               )
  2349                                                               st.info(
  2350                                                                   f"📋 Осталось {len(remaining_orders)} заказов, {available_sheets_count} листов"
  2351                                                               )
  2352                                           
  2353     50777  375379663.0   7392.7      0.1                  continue
  2354                                           
  2355                                               # Check order constraints after placement - both sheet count and adjacency
  2356       491    6858226.0  13967.9      0.0      violated_orders = []
  2357       491    6156944.0  12539.6      0.0      adjacency_violations = []
  2358                                           
  2359      1026   19043910.0  18561.3      0.0      for order_id, sheets_used in order_sheet_usage.items():
  2360                                                   # Check sheet count constraint
  2361                                                   if (
  2362       535    6660851.0  12450.2      0.0              max_sheets_per_order
  2363       535    6609246.0  12353.7      0.0              and order_id != "additional"
  2364       535    6602242.0  12340.6      0.0              and order_id != "unknown"  # Manual uploads are not limited
  2365       535    7023664.0  13128.3      0.0              and not str(order_id).startswith("group_")  # Group uploads are not limited
  2366       535    6993708.0  13072.4      0.0              and sheets_used > max_sheets_per_order
  2367                                                   ):
  2368                                                       violated_orders.append((order_id, sheets_used))
  2369                                                       logger.error(
  2370                                                           f"НАРУШЕНИЕ ОГРАНИЧЕНИЙ: Заказ {order_id} использует {sheets_used} листов (лимит: {max_sheets_per_order})"
  2371                                                       )
  2372                                           
  2373                                                   # Check adjacency constraint
  2374                                                   if (
  2375       535    6649393.0  12428.8      0.0              max_sheets_per_order
  2376       535    6748297.0  12613.6      0.0              and order_id != "additional"
  2377       535    6638917.0  12409.2      0.0              and order_id != "unknown"
  2378       535    6890746.0  12879.9      0.0              and not str(order_id).startswith("group_")
  2379       535    6727407.0  12574.6      0.0              and order_id in order_first_sheet
  2380                                                   ):
  2381        44     519117.0  11798.1      0.0              first_sheet = order_first_sheet[order_id]
  2382                                                       # Find all sheets where this order appears
  2383        44     497050.0  11296.6      0.0              order_sheets = []
  2384       846    9915315.0  11720.2      0.0              for layout in placed_layouts:
  2385       802    9740117.0  12144.8      0.0                  if order_id in layout["orders_on_sheet"]:
  2386        68     791141.0  11634.4      0.0                      order_sheets.append(layout["sheet_number"])
  2387                                           
  2388        44     498093.0  11320.3      0.0              if order_sheets:
  2389        32     683026.0  21344.6      0.0                  min_sheet = min(order_sheets)
  2390        32     387957.0  12123.7      0.0                  max_sheet = max(order_sheets)
  2391        32     371619.0  11613.1      0.0                  expected_max_sheet = first_sheet + max_sheets_per_order - 1
  2392                                           
  2393        32     369452.0  11545.4      0.0                  if max_sheet > expected_max_sheet:
  2394                                                               adjacency_violations.append(
  2395                                                                   (order_id, min_sheet, max_sheet, expected_max_sheet)
  2396                                                               )
  2397                                                               logger.error(
  2398                                                                   f"НАРУШЕНИЕ СМЕЖНОСТИ: Заказ {order_id} размещен на листах {min_sheet}-{max_sheet}, "
  2399                                                                   f"но должен быть в диапазоне {first_sheet}-{expected_max_sheet}"
  2400                                                               )
  2401                                           
  2402       491    7026282.0  14310.1      0.0      if violated_orders or adjacency_violations:
  2403                                                   warning_parts = []
  2404                                                   if violated_orders:
  2405                                                       warning_parts.append("⚠️ Предупреждение: Нарушение ограничений заказов:")
  2406                                                       for order_id, sheets_used in violated_orders:
  2407                                                           warning_parts.append(
  2408                                                               f"Заказ {order_id}: {sheets_used} листов (лимит: {max_sheets_per_order})"
  2409                                                           )
  2410                                           
  2411                                                   if adjacency_violations:
  2412                                                       warning_parts.append("⚠️ Предупреждение: Нарушение смежности листов:")
  2413                                                       for order_id, min_sheet, max_sheet, expected_max in adjacency_violations:
  2414                                                           warning_parts.append(
  2415                                                               f"Заказ {order_id}: листы {min_sheet}-{max_sheet} (ожидалось до {expected_max})"
  2416                                                           )
  2417                                           
  2418                                                   warning_msg = "\n".join(warning_parts)
  2419                                                   logger.warning(warning_msg)
  2420                                                   if verbose:
  2421                                                       st.warning(warning_msg)
  2422                                                   # Don't raise error - allow algorithm to continue with warnings
  2423                                           
  2424                                               # NEW: SINGLE-POLYGON ORDER FILL STRATEGY - Try to place remaining single-polygon orders into existing sheets
  2425       491    7919938.0  16130.2      0.0      if remaining_orders and placed_layouts:
  2426         4      69420.0  17355.0      0.0          single_polygon_orders = {
  2427        11     244160.0  22196.4      0.0              order_id: order_polygons
  2428        15     229913.0  15327.5      0.0              for order_id, order_polygons in remaining_orders.items()
  2429        11     163634.0  14875.8      0.0              if len(order_polygons) == 1
  2430                                                   }
  2431                                           
  2432         2      36876.0  18438.0      0.0          if single_polygon_orders:
  2433         4     813071.0 203267.8      0.0              logger.info(
  2434         2      41833.0  20916.5      0.0                  f"=== ДОЗАПОЛНЕНИЕ ОДНОКОМПОНЕНТНЫМИ ЗАКАЗАМИ: {len(single_polygon_orders)} заказов ==="
  2435                                                       )
  2436         2      35688.0  17844.0      0.0              if verbose:
  2437                                                           st.info(
  2438                                                               f"🔄 Дозаполнение листов однокомпонентными заказами: {len(single_polygon_orders)} заказов"
  2439                                                           )
  2440                                           
  2441         2      34779.0  17389.5      0.0              filled_orders = 0
  2442         7     126129.0  18018.4      0.0              for order_id, order_polygons in single_polygon_orders.items():
  2443         5      80806.0  16161.2      0.0                  if len(order_polygons) != 1:
  2444                                                               continue
  2445                                           
  2446         5      77592.0  15518.4      0.0                  carpet = order_polygons[0]
  2447         5      71585.0  14317.0      0.0                  color = carpet.color
  2448                                           
  2449                                                           # Try to place this single polygon on existing sheets with same color
  2450         5      68444.0  13688.8      0.0                  placed_successfully = False
  2451        95    1601633.0  16859.3      0.0                  for layout_idx, layout in enumerate(placed_layouts):
  2452        90    1194039.0  13267.1      0.0                      sheet_color = layout.get("sheet_color", "серый")
  2453        90    1164012.0  12933.5      0.0                      if color != sheet_color:
  2454        44     529310.0  12029.8      0.0                          continue
  2455                                           
  2456        46     601316.0  13072.1      0.0                      current_usage = layout.get("usage_percent", 0)
  2457        46     597898.0  12997.8      0.0                      if current_usage >= 95:  # Skip nearly full sheets
  2458                                                                   continue
  2459                                           
  2460        46     607743.0  13211.8      0.0                      sheet_size = layout["sheet_size"]
  2461        46     595590.0  12947.6      0.0                      existing_placed = layout["placed_polygons"]
  2462                                           
  2463        92    1437158.0  15621.3      0.0                      logger.debug(
  2464        46     796240.0  17309.6      0.0                          f"Пытаемся добавить {order_id} на лист #{layout['sheet_number']} (заполнение: {current_usage:.1f}%)"
  2465                                                               )
  2466                                           
  2467        46     581337.0  12637.8      0.0                      try:
  2468        92     1.24e+10 1.34e+08      1.7                          additional_placed, still_remaining = bin_packing_with_existing(
  2469        46     597690.0  12993.3      0.0                              [carpet], existing_placed, sheet_size, verbose=False
  2470                                                                   )
  2471                                           
  2472        46    1254175.0  27264.7      0.0                          if additional_placed:
  2473                                                                       # Update the layout with the additional polygon
  2474         1      13479.0  13479.0      0.0                              placed_layouts[layout_idx]["placed_polygons"] = (
  2475         1      12780.0  12780.0      0.0                                  existing_placed + additional_placed
  2476                                                                       )
  2477         2      87578.0  43789.0      0.0                              new_usage = calculate_usage_percent(
  2478         1      12431.0  12431.0      0.0                                  placed_layouts[layout_idx]["placed_polygons"],
  2479         1      11873.0  11873.0      0.0                                  sheet_size,
  2480                                                                       )
  2481         1      14317.0  14317.0      0.0                              placed_layouts[layout_idx]["usage_percent"] = new_usage
  2482                                           
  2483                                                                       # Update orders_on_sheet set
  2484         1      13828.0  13828.0      0.0                              if "orders_on_sheet" not in placed_layouts[layout_idx]:
  2485                                                                           placed_layouts[layout_idx]["orders_on_sheet"] = set()
  2486         1      17670.0  17670.0      0.0                              placed_layouts[layout_idx]["orders_on_sheet"].add(order_id)
  2487                                           
  2488                                                                       # Track sheet usage for this order
  2489                                                                       if order_id not in order_sheet_usage:
  2490                                                                           order_sheet_usage[order_id] = 0
  2491                                                                       order_sheet_usage[order_id] = (
  2492                                                                           1  # Single polygon order uses 1 sheet
  2493                                                                       )
  2494                                           
  2495                                                                       filled_orders += 1
  2496                                                                       placed_successfully = True
  2497                                           
  2498                                                                       logger.info(
  2499                                                                           f"✅ ДОЗАПОЛНЕНИЕ: Заказ {order_id} размещен на лист #{layout['sheet_number']} ({current_usage:.1f}% → {new_usage:.1f}%)"
  2500                                                                       )
  2501                                                                       if verbose:
  2502                                                                           st.success(
  2503                                                                               f"✅ Заказ {order_id} добавлен на лист #{layout['sheet_number']} ({current_usage:.1f}% → {new_usage:.1f}%)"
  2504                                                                           )
  2505                                                                       break
  2506         1      22278.0  22278.0      0.0                      except Exception as e:
  2507         2      46094.0  23047.0      0.0                          logger.debug(
  2508         1      21301.0  21301.0      0.0                              f"Не удалось добавить {order_id} на лист #{layout['sheet_number']}: {e}"
  2509                                                                   )
  2510         1      16692.0  16692.0      0.0                          continue
  2511                                           
  2512         5      63693.0  12738.6      0.0                  if placed_successfully:
  2513                                                               # Remove this order from remaining_orders
  2514                                                               del remaining_orders[order_id]
  2515                                           
  2516         2     516953.0 258476.5      0.0              logger.info(f"Дозаполнение завершено: {filled_orders} заказов размещено")
  2517         2      27588.0  13794.0      0.0              if verbose:
  2518                                                           st.info(
  2519                                                               f"📊 Дозаполнение: {filled_orders} однокомпонентных заказов размещено"
  2520                                                           )
  2521                                           
  2522       491    7737671.0  15759.0      0.0      remaining_polygons_list = []
  2523       990   22506063.0  22733.4      0.0      for order_id, remaining_polygons in remaining_orders.items():
  2524       499    7952064.0  15936.0      0.0          remaining_polygons_list.extend(remaining_polygons)
  2525                                           
  2526       982  125551712.0 127853.1      0.0      logger.info(
  2527       491    8352344.0  17010.9      0.0          f"Проверка дозаполнения: remaining_orders={len(remaining_orders)}, remaining_polygons_list={len(remaining_polygons_list)}, placed_layouts={len(placed_layouts)}"
  2528                                               )
  2529                                           
  2530                                               # НОВОЕ: Создание дополнительных листов для неразмещенных Excel полигонов
  2531                                               # Анализируем неразмещенные полигоны из remaining_polygons_list (Excel полигоны, не приоритет 2)
  2532       982   15706149.0  15994.0      0.0      remaining_excel_polygons = [
  2533       982   30665968.0  31228.1      0.0          p for p in remaining_polygons_list if p.priority != 2
  2534                                               ]  # Не приоритет 2
  2535                                           
  2536       981   20521305.0  20918.8      0.0      if remaining_excel_polygons and any(
  2537       490    7840191.0  16000.4      0.0          sheet["count"] - sheet["used"] > 0 for sheet in sheet_inventory
  2538                                               ):
  2539       980  122591256.0 125093.1      0.0          logger.info(
  2540       490    8325375.0  16990.6      0.0              f"Создаем дополнительные листы для {len(remaining_excel_polygons)} неразмещенных Excel полигонов"
  2541                                                   )
  2542                                           
  2543                                                   # Группируем по цветам
  2544       490    8108795.0  16548.6      0.0          polygons_by_color = {}
  2545      1004   23997953.0  23902.3      0.0          for poly in remaining_excel_polygons:
  2546       514    8215175.0  15982.8      0.0              color = poly.color
  2547       514    8165999.0  15887.2      0.0              if color not in polygons_by_color:
  2548       491    7927607.0  16145.8      0.0                  polygons_by_color[color] = []
  2549       514    8241415.0  16033.9      0.0              polygons_by_color[color].append(poly)
  2550                                           
  2551                                                   # Пытаемся создать листы для каждого цвета
  2552       490    7797637.0  15913.5      0.0          additional_created = 0
  2553       981   23300311.0  23751.6      0.0          for color, color_polygons in polygons_by_color.items():
  2554                                                       # Найти доступные листы этого цвета
  2555       491    8060686.0  16416.9      0.0              available_count = 0
  2556       984   23177729.0  23554.6      0.0              for sheet_type in sheet_inventory:
  2557                                                           if (
  2558       493    8229140.0  16692.0      0.0                      sheet_type["color"] == color
  2559       491    8231230.0  16764.2      0.0                      and sheet_type["used"] < sheet_type["count"]
  2560                                                           ):
  2561       491    8167892.0  16635.2      0.0                      available_count = sheet_type["count"] - sheet_type["used"]
  2562                                           
  2563       491    7984404.0  16261.5      0.0              if available_count > 0:
  2564       982  122494155.0 124739.5      0.0                  logger.info(
  2565       491    8642668.0  17602.2      0.0                      f"Доступно {available_count} листов цвета {color} для {len(color_polygons)} полигонов"
  2566                                                           )
  2567                                           
  2568                                                           # Пытаемся разместить полигоны на новых листах
  2569       491    8467779.0  17246.0      0.0                  try:
  2570       982   12455156.0  12683.5      0.0                      new_layouts, still_unplaced = bin_packing_with_inventory(
  2571       491    8073170.0  16442.3      0.0                          color_polygons,
  2572       491   37663758.0  76708.3      0.0                          [sheet for sheet in sheet_inventory if sheet["color"] == color],
  2573       491    8135976.0  16570.2      0.0                          verbose=False,
  2574       491    7983277.0  16259.2      0.0                          max_sheets_per_order=max_sheets_per_order,
  2575                                                               )
  2576                                           
  2577       490    4348605.0   8874.7      0.0                      if new_layouts:
  2578                                                                   # Обновляем номера листов
  2579         8     141845.0  17730.6      0.0                          for layout in new_layouts:
  2580         6      89396.0  14899.3      0.0                              sheet_counter += 1
  2581         6      87722.0  14620.3      0.0                              layout["sheet_number"] = sheet_counter
  2582                                           
  2583         2      33174.0  16587.0      0.0                          placed_layouts.extend(new_layouts)
  2584         2      30171.0  15085.5      0.0                          additional_created += len(new_layouts)
  2585                                           
  2586                                                                   # Обновляем использование листов
  2587         3      71167.0  23722.3      0.0                          for sheet_type in sheet_inventory:
  2588         3      46165.0  15388.3      0.0                              if sheet_type["color"] == color:
  2589         4      63205.0  15801.2      0.0                                  sheet_type["used"] += len(
  2590         4      59433.0  14858.2      0.0                                      [
  2591         6     165731.0  27621.8      0.0                                          layout
  2592        10     147015.0  14701.5      0.0                                          for layout in new_layouts
  2593         6      90932.0  15155.3      0.0                                          if layout.get("sheet_color") == color
  2594                                                                               ]
  2595                                                                           )
  2596         2      31080.0  15540.0      0.0                                  break
  2597                                           
  2598                                                                   # Убираем размещенные полигоны из remaining_polygons_list
  2599         4      78850.0  19712.5      0.0                          placed_count = sum(
  2600         2      30172.0  15086.0      0.0                              len(layout["placed_polygons"]) for layout in new_layouts
  2601                                                                   )
  2602         4      61110.0  15277.5      0.0                          remaining_polygons_list = [
  2603        31     549574.0  17728.2      0.0                              p
  2604        35     518846.0  14824.2      0.0                              for p in remaining_polygons_list
  2605        31     928733.0  29959.1      0.0                              if p not in color_polygons[:placed_count]
  2606                                                                   ]
  2607                                           
  2608         4     609776.0 152444.0      0.0                          logger.info(
  2609         2      34920.0  17460.0      0.0                              f"Создано {len(new_layouts)} дополнительных листов цвета {color}"
  2610                                                                   )
  2611                                           
  2612         1      22489.0  22489.0      0.0                  except Exception as e:
  2613         2     226705.0 113352.5      0.0                      logger.warning(
  2614         1      22279.0  22279.0      0.0                          f"Ошибка создания дополнительных листов для {color}: {e}"
  2615                                                               )
  2616                                           
  2617       490    8110551.0  16552.1      0.0          if additional_created > 0:
  2618         2     207569.0 103784.5      0.0              logger.info(
  2619         1      15714.0  15714.0      0.0                  f"✅ Создано {additional_created} дополнительных листов для Excel полигонов"
  2620                                                       )
  2621                                           
  2622       491    8289922.0  16883.8      0.0      if remaining_polygons_list and placed_layouts:
  2623         2      31010.0  15505.0      0.0          if verbose:
  2624                                                       st.info(
  2625                                                           f"🔄 Пытаемся дозаполнить {len(placed_layouts)} существующих листов {len(remaining_polygons_list)} оставшимися деталями"
  2626                                                       )
  2627                                               else:
  2628       978  111097417.0 113596.5      0.0          logger.info(
  2629       489    8621879.0  17631.7      0.0              f"Дозаполнение не запущено: remaining_polygons_list={len(remaining_polygons_list)}, placed_layouts={len(placed_layouts)}"
  2630                                                   )
  2631                                           
  2632       978  101085776.0 103359.7      0.0          logger.info(
  2633       489    8668813.0  17727.6      0.0              f"Попытка дозаполнения: {len(remaining_polygons_list)} полигонов на {len(placed_layouts)} листах"
  2634                                                   )
  2635                                           
  2636       489   16737276.0  34227.6      0.0          for layout_idx, layout in enumerate(placed_layouts):
  2637         1      15365.0  15365.0      0.0              if not remaining_polygons_list:
  2638         1      16133.0  16133.0      0.0                  break
  2639                                           
  2640                                                       sheet_size = layout["sheet_size"]
  2641                                                       existing_placed = layout["placed_polygons"]
  2642                                                       current_usage = layout["usage_percent"]
  2643                                           
  2644                                                       if current_usage >= 95:  # Skip nearly full sheets
  2645                                                           continue
  2646                                           
  2647                                                       logger.info(
  2648                                                           f"Пытаемся дозаполнить лист #{layout['sheet_number']} (заполнение: {current_usage:.1f}%)"
  2649                                                       )
  2650                                           
  2651                                                       # Try to place remaining polygons on this existing sheet
  2652                                                       try:
  2653                                                           additional_placed, still_remaining = bin_packing_with_existing(
  2654                                                               remaining_polygons_list, existing_placed, sheet_size, verbose=False
  2655                                                           )
  2656                                           
  2657                                                           if additional_placed:
  2658                                                               # Update the layout with additional polygons
  2659                                                               placed_layouts[layout_idx]["placed_polygons"] = (
  2660                                                                   existing_placed + additional_placed
  2661                                                               )
  2662                                                               placed_layouts[layout_idx]["usage_percent"] = (
  2663                                                                   calculate_usage_percent(
  2664                                                                       placed_layouts[layout_idx]["placed_polygons"], sheet_size
  2665                                                                   )
  2666                                                               )
  2667                                           
  2668                                                               new_usage = placed_layouts[layout_idx]["usage_percent"]
  2669                                                               logger.info(
  2670                                                                   f"✅ Дозаполнен лист #{layout['sheet_number']}: +{len(additional_placed)} деталей ({current_usage:.1f}% → {new_usage:.1f}%)"
  2671                                                               )
  2672                                           
  2673                                                               if verbose:
  2674                                                                   st.success(
  2675                                                                       f"✅ Дозаполнен лист #{layout['sheet_number']}: +{len(additional_placed)} деталей ({current_usage:.1f}% → {new_usage:.1f}%)"
  2676                                                                   )
  2677                                           
  2678                                                               # Update remaining polygons list
  2679                                                               remaining_polygons_list = still_remaining
  2680                                           
  2681                                                           else:
  2682                                                               logger.info(f"Лист #{layout['sheet_number']} нельзя дозаполнить")
  2683                                                       except Exception as e:
  2684                                                           logger.warning(
  2685                                                               f"Ошибка при дозаполнении листа #{layout['sheet_number']}: {e}"
  2686                                                           )
  2687                                           
  2688                                               # Add any remaining unplaced polygons to the unplaced list
  2689       491    9013405.0  18357.2      0.0      all_unplaced.extend(remaining_polygons_list)
  2690                                           
  2691       491   94707152.0 192886.3      0.0      logger.info("=== ОКОНЧАНИЕ bin_packing_with_inventory ===")
  2692       982  104891183.0 106813.8      0.0      logger.info(
  2693       491    9405239.0  19155.3      0.0          f"ИТОГОВЫЙ РЕЗУЛЬТАТ: {len(placed_layouts)} листов использовано, {len(all_unplaced)} объектов не размещено"
  2694                                               )
  2695                                           
  2696       491   99930202.0 203523.8      0.0      logger.info("Финальное распределение по заказам:")
  2697      1026   28250206.0  27534.3      0.0      for order_id, sheets_used in order_sheet_usage.items():
  2698       535  105847577.0 197845.9      0.0          logger.info(f"  • Заказ {order_id}: {sheets_used} листов")
  2699                                           
  2700       491    9164539.0  18665.0      0.0      if verbose:
  2701                                                   st.info(
  2702                                                       f"Размещение завершено: {len(placed_layouts)} листов использовано, {len(all_unplaced)} объектов не размещено"
  2703                                                   )
  2704                                           
  2705                                                   # Show summary by orders using the tracked usage
  2706                                                   if order_sheet_usage:
  2707                                                       st.success("✅ Распределение по заказам:")
  2708                                                       for order_id, sheet_count in order_sheet_usage.items():
  2709                                                           if order_id != "unknown":  # Only show real orders
  2710                                                               status = (
  2711                                                                   "✅"
  2712                                                                   if sheet_count <= (max_sheets_per_order or float("inf"))
  2713                                                                   else "❌"
  2714                                                               )
  2715                                                               st.info(f"  {status} Заказ {order_id}: {sheet_count} листов")
  2716                                           
  2717                                               # PRIORITY 2 PROCESSING: Try to fit priority 2 polygons into existing sheets only
  2718                                               # Размещаем приоритет 2 В САМУЮ ПОСЛЕДНЮЮ ОЧЕРЕДЬ после всех операций
  2719       491   10009156.0  20385.2      0.0      if priority2_carpets and placed_layouts:
  2720         2     188643.0  94321.5      0.0          logger.info(
  2721         1      17251.0  17251.0      0.0              f"=== ОБРАБОТКА ПРИОРИТЕТА 2: {len(priority2_carpets)} полигонов ==="
  2722                                                   )
  2723         1      16692.0  16692.0      0.0          if verbose:
  2724                                                       st.info(
  2725                                                           f"🔄 Размещение файлов приоритета 2: {len(priority2_carpets)} файлов в существующие листы"
  2726                                                       )
  2727                                           
  2728                                                   # Update progress for priority 2 processing
  2729         1      16901.0  16901.0      0.0          if progress_callback:
  2730         2    1958011.0 979005.5      0.0              progress_callback(
  2731         1      17111.0  17111.0      0.0                  98, f"Обработка файлов приоритета 2: {len(priority2_carpets)} файлов"
  2732                                                       )
  2733                                           
  2734         1      18229.0  18229.0      0.0          priority2_placed = 0
  2735         1      21022.0  21022.0      0.0          priority2_remaining = list(priority2_carpets)
  2736                                           
  2737                                                   # Try to fill existing sheets with priority 2 polygons
  2738        19     425969.0  22419.4      0.0          for layout_idx, layout in enumerate(placed_layouts):
  2739        19     391395.0  20599.7      0.0              if not priority2_remaining:
  2740         1      23118.0  23118.0      0.0                  break
  2741                                           
  2742        18     377078.0  20948.8      0.0              sheet_size = layout["sheet_size"]
  2743        36     740393.0  20566.5      0.0              sheet_color = layout.get(
  2744        18     371561.0  20642.3      0.0                  "sheet_color", "серый"
  2745                                                       )  # Get color directly from layout
  2746                                           
  2747        18     369393.0  20521.8      0.0              existing_placed = layout["placed_polygons"]
  2748        18     366532.0  20362.9      0.0              current_usage = layout["usage_percent"]
  2749                                           
  2750        18     407806.0  22655.9      0.0              if current_usage >= 95:  # Skip nearly full sheets
  2751                                                           continue
  2752                                           
  2753        36   10847713.0 301325.4      0.0              logger.info(
  2754        18     454044.0  25224.7      0.0                  f"Пытаемся добавить приоритет 2 на лист #{layout['sheet_number']} (заполнение: {current_usage:.1f}%, цвет листа: {sheet_color})"
  2755                                                       )
  2756                                           
  2757                                                       # Filter priority 2 polygons by color compatibility
  2758        18     431696.0  23983.1      0.0              compatible_priority2 = []
  2759       541   10688348.0  19756.7      0.0              for carpet in priority2_remaining:
  2760       523   10196375.0  19495.9      0.0                  poly_color = carpet.color
  2761                                           
  2762                                                           # Skip detailed logging for speed
  2763       523   10032179.0  19182.0      0.0                  if poly_color == sheet_color:
  2764       243    4818549.0  19829.4      0.0                      compatible_priority2.append(carpet)
  2765                                           
  2766        36   13643829.0 378995.2      0.0              logger.info(
  2767        18     376660.0  20925.6      0.0                  f"Найдено {len(compatible_priority2)} совместимых полигонов приоритета 2 из {len(priority2_remaining)}"
  2768                                                       )
  2769                                           
  2770        18     423663.0  23536.8      0.0              if not compatible_priority2:
  2771         4      74102.0  18525.5      0.0                  logger.debug(
  2772         2      33733.0  16866.5      0.0                      f"Нет совместимых по цвету приоритет 2 полигонов для листа {sheet_color}"
  2773                                                           )
  2774         2      32617.0  16308.5      0.0                  continue
  2775                                           
  2776                                                       # Try to place compatible priority 2 polygons on this existing sheet
  2777        32     1.29e+11 4.04e+09     17.9              additional_placed, still_remaining = bin_packing_with_existing(
  2778        16     346975.0  21685.9      0.0                  compatible_priority2, existing_placed, sheet_size, verbose=False
  2779                                                       )
  2780                                           
  2781        16     461095.0  28818.4      0.0              if additional_placed:
  2782                                                           # Update the layout with additional polygons
  2783         8     167272.0  20909.0      0.0                  placed_layouts[layout_idx]["placed_polygons"] = (
  2784         8     150509.0  18813.6      0.0                      existing_placed + additional_placed
  2785                                                           )
  2786        16    1250038.0  78127.4      0.0                  placed_layouts[layout_idx]["usage_percent"] = calculate_usage_percent(
  2787         8     189202.0  23650.2      0.0                      placed_layouts[layout_idx]["placed_polygons"], sheet_size
  2788                                                           )
  2789         8     175095.0  21886.9      0.0                  new_usage = placed_layouts[layout_idx]["usage_percent"]
  2790         8     159592.0  19949.0      0.0                  priority2_placed += len(additional_placed)
  2791                                           
  2792        16    3104768.0 194048.0      0.0                  logger.info(
  2793         8     231808.0  28976.0      0.0                      f"✅ Добавлено {len(additional_placed)} файлов приоритета 2 на лист #{layout['sheet_number']} ({current_usage:.1f}% → {new_usage:.1f}%)"
  2794                                                           )
  2795         8     175862.0  21982.8      0.0                  if verbose:
  2796                                                               st.success(
  2797                                                                   f"✅ Добавлено {len(additional_placed)} файлов приоритета 2 на лист #{layout['sheet_number']}"
  2798                                                               )
  2799                                           
  2800                                                           # Remove placed polygons from priority2_remaining
  2801                                                           # ИСПРАВЛЕНИЕ: точное совпадение по 3 полям для правильного удаления
  2802         8     191159.0  23894.9      0.0                  placed_keys = set()
  2803        48    1063835.0  22163.2      0.0                  for placed_poly in additional_placed:
  2804        40     798089.0  19952.2      0.0                      if len(placed_poly) >= 5:
  2805                                                                   # Полигон из bin_packing_with_existing: (polygon, x, y, angle, filename, color, order_id)
  2806        40     771134.0  19278.3      0.0                          key = (
  2807        40     794316.0  19857.9      0.0                              placed_poly[4],
  2808        40     800462.0  20011.5      0.0                              placed_poly[5],
  2809        40     770289.0  19257.2      0.0                              placed_poly[6],
  2810                                                                   )  # filename, color, order_id
  2811                                                               else:
  2812                                                                   # Обычный полигон: (polygon, filename, color, order_id)
  2813                                                                   key = (placed_poly[1], placed_poly[2], placed_poly[3])
  2814        40     783629.0  19590.7      0.0                      placed_keys.add(key)
  2815                                           
  2816                                                           # Удаляем полигоны с совпадающими ключами
  2817        16     299343.0  18708.9      0.0                  priority2_remaining = [
  2818       200    7063979.0  35319.9      0.0                      p
  2819       216    4257447.0  19710.4      0.0                      for p in priority2_remaining
  2820       200    3993713.0  19968.6      0.0                      if (p.filename, p.color, p.order_id) not in placed_keys
  2821                                                           ]
  2822                                           
  2823         2     240956.0 120478.0      0.0          logger.info(
  2824         1      19626.0  19626.0      0.0              f"Приоритет 2: размещено {priority2_placed}, осталось {len(priority2_remaining)}"
  2825                                                   )
  2826         1      22419.0  22419.0      0.0          if priority2_remaining:
  2827                                                       logger.info(
  2828                                                           f"⚠️ {len(priority2_remaining)} файлов приоритета 2 не размещены (новые листы не создаются)"
  2829                                                       )
  2830                                                       if verbose:
  2831                                                           st.warning(
  2832                                                               f"⚠️ {len(priority2_remaining)} файлов приоритета 2 не удалось разместить в существующие листы"
  2833                                                           )
  2834                                           
  2835                                                   # Add remaining priority 2 polygons to unplaced list
  2836         1      32966.0  32966.0      0.0          all_unplaced.extend(priority2_remaining)
  2837                                           
  2838       490   10523931.0  21477.4      0.0      elif priority2_carpets and not placed_layouts:
  2839                                                   logger.warning(
  2840                                                       f"Нет существующих листов для размещения {len(priority2_carpets)} файлов приоритета 2"
  2841                                                   )
  2842                                                   if verbose:
  2843                                                       st.warning(
  2844                                                           f"⚠️ Нет размещенных листов для {len(priority2_carpets)} файлов приоритета 2"
  2845                                                       )
  2846                                                   # Add all priority 2 polygons to unplaced list since no sheets were created
  2847                                                   all_unplaced.extend(priority2_carpets)
  2848       490   10438121.0  21302.3      0.0      elif priority2_carpets and not order_groups:
  2849                                                   # Special case: only priority 2 polygons exist, no priority 1 files
  2850                                                   logger.info(
  2851                                                       f"Только priority 2 файлы без существующих листов: {len(priority2_carpets)} файлов не размещаются"
  2852                                                   )
  2853                                                   if verbose:
  2854                                                       st.warning(
  2855                                                           f"⚠️ Только файлы приоритета 2: {len(priority2_carpets)} файлов не размещаются (новые листы не создаются)"
  2856                                                       )
  2857                                                   all_unplaced.extend(priority2_carpets)
  2858                                           
  2859                                               # ИСПРАВЛЕНИЕ: Перенумеровываем листы для группировки по цветам
  2860                                               # Листы должны идти подряд по цветам: 1-N чёрные, N+1-M серые, M+1-K остальные
  2861       491   10762689.0  21919.9      0.0      if placed_layouts:
  2862         6     918069.0 153011.5      0.0          logger.info(
  2863         3      61461.0  20487.0      0.0              f"Перенумеровываем {len(placed_layouts)} листов для группировки по цветам"
  2864                                                   )
  2865                                           
  2866                                                   # Группируем листы по цветам
  2867         3      68585.0  22861.7      0.0          sheets_by_color = {"чёрный": [], "серый": [], "other": []}
  2868                                           
  2869        37     755198.0  20410.8      0.0          for layout in placed_layouts:
  2870        34     632698.0  18608.8      0.0              sheet_color = layout.get("sheet_color", "серый")
  2871        34     627595.0  18458.7      0.0              if sheet_color == "чёрный":
  2872        21     390137.0  18578.0      0.0                  sheets_by_color["чёрный"].append(layout)
  2873        13     238370.0  18336.2      0.0              elif sheet_color == "серый":
  2874        13     239421.0  18417.0      0.0                  sheets_by_color["серый"].append(layout)
  2875                                                       else:
  2876                                                           sheets_by_color["other"].append(layout)
  2877                                           
  2878                                                   # Перенумеровываем листы по группам
  2879         3      55595.0  18531.7      0.0          new_sheet_number = 1
  2880         3      56921.0  18973.7      0.0          renumbered_layouts = []
  2881                                           
  2882                                                   # Сначала черные листы
  2883        24     511448.0  21310.3      0.0          for layout in sheets_by_color["чёрный"]:
  2884        21     396627.0  18887.0      0.0              layout["sheet_number"] = new_sheet_number
  2885        21     390349.0  18588.0      0.0              renumbered_layouts.append(layout)
  2886        21     406059.0  19336.1      0.0              new_sheet_number += 1
  2887                                           
  2888                                                   # Потом серые листы
  2889        16     346905.0  21681.6      0.0          for layout in sheets_by_color["серый"]:
  2890        13     240397.0  18492.1      0.0              layout["sheet_number"] = new_sheet_number
  2891        13     240048.0  18465.2      0.0              renumbered_layouts.append(layout)
  2892        13     257997.0  19845.9      0.0              new_sheet_number += 1
  2893                                           
  2894                                                   # Потом остальные листы
  2895         3     111745.0  37248.3      0.0          for layout in sheets_by_color["other"]:
  2896                                                       layout["sheet_number"] = new_sheet_number
  2897                                                       renumbered_layouts.append(layout)
  2898                                                       new_sheet_number += 1
  2899                                           
  2900         3      58736.0  19578.7      0.0          placed_layouts = renumbered_layouts
  2901         6     998594.0 166432.3      0.0          logger.info(
  2902         3      63277.0  21092.3      0.0              f"Листы перенумерованы: чёрных {len(sheets_by_color['чёрный'])}, серых {len(sheets_by_color['серый'])}, других {len(sheets_by_color['other'])}"
  2903                                                   )
  2904                                           
  2905                                               # Final progress update
  2906       491   11102445.0  22611.9      0.0      if progress_callback:
  2907         1    1182431.0 1.18e+06      0.0          progress_callback(100, f"Завершено: {len(placed_layouts)} листов создано")
  2908                                           
  2909       491    5961315.0  12141.2      0.0      return placed_layouts, all_unplaced

 10.13 seconds - /home/sasha/proj/2025/eva_layout/layout_optimizer.py:1187 - bin_packing
519.52 seconds - /home/sasha/proj/2025/eva_layout/layout_optimizer.py:1072 - bin_packing_with_existing
723.29 seconds - /home/sasha/proj/2025/eva_layout/layout_optimizer.py:1617 - bin_packing_with_inventory
