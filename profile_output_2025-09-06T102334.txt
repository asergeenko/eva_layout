Timer unit: 1e-09 s

Total time: 1.73634 s
File: /home/sasha/proj/2025/eva_layout/layout_optimizer.py
Function: bin_packing at line 1187

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
  1187                                           @profile
  1188                                           def bin_packing(
  1189                                               polygons: list[tuple],
  1190                                               sheet_size: tuple[float, float],
  1191                                               verbose: bool = True,
  1192                                           ) -> tuple[list[tuple], list[tuple]]:
  1193                                               """Optimize placement of complex polygons on a sheet with improved algorithm."""
  1194                                               # Convert sheet size from cm to mm to match DXF polygon units
  1195      1500    2692635.0   1795.1      0.2      sheet_width_mm, sheet_height_mm = sheet_size[0] * 10, sheet_size[1] * 10
  1196                                           
  1197      1500    2419263.0   1612.8      0.1      placed = []
  1198      1500    2248016.0   1498.7      0.1      unplaced = []
  1199                                           
  1200      1500    2262255.0   1508.2      0.1      if verbose:
  1201                                                   st.info(
  1202                                                       f"Начинаем улучшенную упаковку {len(polygons)} полигонов на листе {sheet_size[0]}x{sheet_size[1]} см"
  1203                                                   )
  1204                                           
  1205                                               # IMPROVEMENT 1: Sort polygons by area and perimeter for better packing
  1206      1500    2668088.0   1778.7      0.2      def get_polygon_priority(carpet: Carpet):
  1207                                                   polygon = carpet.polygon
  1208                                                   # Combine area and perimeter for better sorting (larger, more complex shapes first)
  1209                                                   area = polygon.area
  1210                                                   bounds = polygon.bounds
  1211                                                   perimeter_approx = 2 * ((bounds[2] - bounds[0]) + (bounds[3] - bounds[1]))
  1212                                                   return area + perimeter_approx * 0.1
  1213                                           
  1214      1500   65377282.0  43584.9      3.8      sorted_polygons = sorted(polygons, key=get_polygon_priority, reverse=True)
  1215      1500    2611435.0   1741.0      0.2      if verbose:
  1216                                                   st.info("✨ Сортировка полигонов по площади (сначала крупные)")
  1217                                           
  1218      3322   11066483.0   3331.3      0.6      for i, carpet in enumerate(sorted_polygons):
  1219      1822    2783036.0   1527.5      0.2          placed_successfully = False
  1220      1822    2854898.0   1566.9      0.2          if verbose:
  1221                                                       st.info(
  1222                                                           f"Обрабатываем полигон {i+1}/{len(sorted_polygons)} из файла {carpet.filename}, площадь: {carpet.polygon.area:.2f}"
  1223                                                       )
  1224                                           
  1225                                                   # Check if polygon is too large for the sheet
  1226      1822   23887821.0  13110.8      1.4          bounds = carpet.polygon.bounds
  1227      1822    2916892.0   1600.9      0.2          poly_width = bounds[2] - bounds[0]
  1228      1822    2996898.0   1644.8      0.2          poly_height = bounds[3] - bounds[1]
  1229                                           
  1230      1822    3319118.0   1821.7      0.2          if poly_width > sheet_width_mm or poly_height > sheet_height_mm:
  1231      1475    2239223.0   1518.1      0.1              if verbose:
  1232                                                           st.warning(
  1233                                                               f"Полигон из {carpet.filename} слишком большой: {poly_width/10:.1f}x{poly_height/10:.1f} см > {sheet_size[0]}x{sheet_size[1]} см"
  1234                                                           )
  1235      1475    2469117.0   1674.0      0.1              unplaced.append(carpet)
  1236      1475    2124177.0   1440.1      0.1              continue
  1237                                           
  1238                                                   # IMPROVEMENT 2: Try all allowed orientations (0°, 90°, 180°, 270°) with better placement
  1239       347     555868.0   1601.9      0.0          best_placement = None
  1240       347     853374.0   2459.3      0.0          best_waste = float("inf")
  1241                                           
  1242                                                   # Only allowed rotation angles for cutting machines
  1243       347     645643.0   1860.6      0.0          rotation_angles = [0, 90, 180, 270]
  1244                                           
  1245      1735    2967672.0   1710.5      0.2          for angle in rotation_angles:
  1246      1388    2685805.0   1935.0      0.2              rotated = (
  1247      1388  181018176.0 130416.6     10.4                  rotate_polygon(carpet.polygon, angle) if angle != 0 else carpet.polygon
  1248                                                       )
  1249      1388   17790331.0  12817.2      1.0              rotated_bounds = rotated.bounds
  1250      1388    2455613.0   1769.2      0.1              rotated_width = rotated_bounds[2] - rotated_bounds[0]
  1251      1388    2126402.0   1532.0      0.1              rotated_height = rotated_bounds[3] - rotated_bounds[1]
  1252                                           
  1253                                                       # Skip if doesn't fit
  1254      1388    2330969.0   1679.4      0.1              if rotated_width > sheet_width_mm or rotated_height > sheet_height_mm:
  1255        34      51120.0   1503.5      0.0                  continue
  1256                                           
  1257                                                       # IMPROVEMENT 3: Bottom-Left Fill algorithm for better placement
  1258      2708  338673549.0 125064.1     19.5              best_x, best_y = find_bottom_left_position(
  1259      1354    1943442.0   1435.3      0.1                  rotated, placed, sheet_width_mm, sheet_height_mm
  1260                                                       )
  1261                                           
  1262      1354    2337243.0   1726.2      0.1              if best_x is not None and best_y is not None:
  1263                                                           # Calculate waste for this placement
  1264       564   22380773.0  39682.2      1.3                  translated = translate_polygon(
  1265       282     501901.0   1779.8      0.0                      rotated, best_x - rotated_bounds[0], best_y - rotated_bounds[1]
  1266                                                           )
  1267       564   11022077.0  19542.7      0.6                  waste = calculate_placement_waste(
  1268       282     426828.0   1513.6      0.0                      translated, placed, sheet_width_mm, sheet_height_mm
  1269                                                           )
  1270                                           
  1271       282     507678.0   1800.3      0.0                  if waste < best_waste:
  1272       103     173600.0   1685.4      0.0                      best_waste = waste
  1273       103     236736.0   2298.4      0.0                      best_placement = {
  1274       103     153286.0   1488.2      0.0                          "polygon": translated,
  1275       103     173690.0   1686.3      0.0                          "x_offset": best_x - rotated_bounds[0],
  1276       103     178435.0   1732.4      0.0                          "y_offset": best_y - rotated_bounds[1],
  1277       103     157192.0   1526.1      0.0                          "angle": angle,
  1278                                                               }
  1279                                           
  1280                                                   # Apply best placement if found
  1281       347     576141.0   1660.3      0.0          if best_placement:
  1282       170     323193.0   1901.1      0.0              placed.append(
  1283        85     126059.0   1483.0      0.0                  (
  1284        85     155312.0   1827.2      0.0                      best_placement["polygon"],
  1285        85     155455.0   1828.9      0.0                      best_placement["x_offset"],
  1286        85     129198.0   1520.0      0.0                      best_placement["y_offset"],
  1287        85     138478.0   1629.2      0.0                      best_placement["angle"],
  1288        85     174030.0   2047.4      0.0                      carpet.filename,
  1289        85     147216.0   1732.0      0.0                      carpet.color,
  1290        85     148413.0   1746.0      0.0                      carpet.order_id,
  1291                                                           )
  1292                                                       )
  1293        85     134696.0   1584.7      0.0              placed_successfully = True
  1294        85     467610.0   5501.3      0.0              if verbose:
  1295                                                           st.success(
  1296                                                               f"✅ Размещен {carpet.filename} (угол: {best_placement['angle']}°, waste: {best_waste:.1f})"
  1297                                                           )
  1298                                                   else:
  1299                                                       # Fallback to original grid method if no bottom-left position found
  1300       262    3236591.0  12353.4      0.2              simple_bounds = carpet.polygon.bounds
  1301       262     461266.0   1760.6      0.0              simple_width = simple_bounds[2] - simple_bounds[0]
  1302       262     432422.0   1650.5      0.0              simple_height = simple_bounds[3] - simple_bounds[1]
  1303                                           
  1304                                                       # Optimized grid placement as fallback
  1305       262     399176.0   1523.6      0.0              max_grid_attempts = 10  # Reduced for better performance
  1306       262     448773.0   1712.9      0.0              if sheet_width_mm > simple_width:
  1307       524   10064259.0  19206.6      0.6                  x_positions = np.linspace(
  1308       262     430535.0   1643.3      0.0                      0, sheet_width_mm - simple_width, max_grid_attempts
  1309                                                           )
  1310                                                       else:
  1311                                                           x_positions = [0]
  1312                                           
  1313       262     449966.0   1717.4      0.0              if sheet_height_mm > simple_height:
  1314       524    6861752.0  13094.9      0.4                  y_positions = np.linspace(
  1315       262     404067.0   1542.2      0.0                      0, sheet_height_mm - simple_height, max_grid_attempts
  1316                                                           )
  1317                                                       else:
  1318                                                           y_positions = [0]
  1319                                           
  1320                                                       # PERFORMANCE: Pre-compute placed polygon bounds for faster collision checking
  1321       262    7155661.0  27311.7      0.4              placed_bounds_cache = [placed_poly.bounds for placed_poly, *_ in placed]
  1322                                           
  1323      2881    5039368.0   1749.2      0.3              for grid_x in x_positions:
  1324     28817   49884276.0   1731.1      2.9                  for grid_y in y_positions:
  1325     26198   40152501.0   1532.7      2.3                      x_offset = grid_x - simple_bounds[0]
  1326     26198   39447666.0   1505.8      2.3                      y_offset = grid_y - simple_bounds[1]
  1327                                           
  1328                                                               # Fast bounds check
  1329     26198   38950510.0   1486.8      2.2                      test_bounds = (
  1330     26198   39287643.0   1499.6      2.3                          simple_bounds[0] + x_offset,
  1331     26198   38740681.0   1478.8      2.2                          simple_bounds[1] + y_offset,
  1332     26198   38602104.0   1473.5      2.2                          simple_bounds[2] + x_offset,
  1333     26198   38788592.0   1480.6      2.2                          simple_bounds[3] + y_offset,
  1334                                                               )
  1335                                           
  1336                                                               if not (
  1337     26198   39429436.0   1505.1      2.3                          test_bounds[0] >= -0.1
  1338     26198   38421632.0   1466.6      2.2                          and test_bounds[1] >= -0.1
  1339     26198   40230393.0   1535.6      2.3                          and test_bounds[2] <= sheet_width_mm + 0.1
  1340     26198   40055908.0   1529.0      2.3                          and test_bounds[3] <= sheet_height_mm + 0.1
  1341                                                               ):
  1342                                                                   continue
  1343                                           
  1344                                                               # OPTIMIZATION: Fast bounding box collision check first
  1345     26198   37802711.0   1443.0      2.2                      bbox_collision = False
  1346     37151   54203870.0   1459.0      3.1                      for placed_bounds in placed_bounds_cache:
  1347                                                                   if not (
  1348     37150   59916100.0   1612.8      3.5                              test_bounds[2] + 2.0 <= placed_bounds[0]
  1349     36911   54949977.0   1488.7      3.2                              or test_bounds[0] >= placed_bounds[2] + 2.0
  1350     34668   54143576.0   1561.8      3.1                              or test_bounds[3] + 2.0 <= placed_bounds[1]
  1351     34646   51444371.0   1484.9      3.0                              or test_bounds[1] >= placed_bounds[3] + 2.0
  1352                                                                   ):
  1353     26197   37714977.0   1439.7      2.2                              bbox_collision = True
  1354     26197   37263318.0   1422.4      2.1                              break
  1355                                           
  1356     26198   37373854.0   1426.6      2.2                      if bbox_collision:
  1357     26197   37460008.0   1429.9      2.2                          continue
  1358                                           
  1359                                                               # Only create polygon if bounding box check passes
  1360         1      84153.0  84153.0      0.0                      translated = translate_polygon(carpet.polygon, x_offset, y_offset)
  1361                                           
  1362                                                               # Final precise collision check
  1363         1        978.0    978.0      0.0                      collision = False
  1364         3       6217.0   2072.3      0.0                      for placed_poly, *_ in placed:
  1365         2     526568.0 263284.0      0.0                          if check_collision(translated, placed_poly):
  1366                                                                       collision = True
  1367                                                                       break
  1368                                           
  1369         1       1466.0   1466.0      0.0                      if not collision:
  1370         2       3910.0   1955.0      0.0                          placed.append(
  1371         1       1396.0   1396.0      0.0                              (
  1372         1       1885.0   1885.0      0.0                                  translated,
  1373         1       1397.0   1397.0      0.0                                  x_offset,
  1374         1       1396.0   1396.0      0.0                                  y_offset,
  1375         1       1467.0   1467.0      0.0                                  0,
  1376         1       1816.0   1816.0      0.0                                  carpet.filename,
  1377         1       1886.0   1886.0      0.0                                  carpet.color,
  1378         1       1466.0   1466.0      0.0                                  carpet.order_id,
  1379                                                                       )
  1380                                                                   )
  1381         1       1467.0   1467.0      0.0                          placed_successfully = True
  1382         1       3771.0   3771.0      0.0                          if verbose:
  1383                                                                       st.success(
  1384                                                                           f"✅ Размещен {carpet.filename} (сетчатое размещение)"
  1385                                                                       )
  1386         1       4749.0   4749.0      0.0                          break
  1387                                           
  1388      2620    7814579.0   2982.7      0.5                  if placed_successfully:
  1389         1      27655.0  27655.0      0.0                      break
  1390                                           
  1391       347    1475352.0   4251.7      0.1          if not placed_successfully:
  1392       261    1167655.0   4473.8      0.1              if verbose:
  1393                                                           st.warning(f"❌ Не удалось разместить полигон из {carpet.filename}")
  1394       261     853605.0   3270.5      0.0              unplaced.append(carpet)
  1395                                           
  1396      1500    7993129.0   5328.8      0.5      if verbose:
  1397                                                   usage_percent = calculate_usage_percent(placed, sheet_size)
  1398                                                   st.info(
  1399                                                       f"🏁 Упаковка завершена: {len(placed)} размещено, {len(unplaced)} не размещено, использование: {usage_percent:.1f}%"
  1400                                                   )
  1401      1500    4753104.0   3168.7      0.3      return placed, unplaced

Total time: 481.707 s
File: /home/sasha/proj/2025/eva_layout/layout_optimizer.py
Function: bin_packing_with_existing at line 1072

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
  1072                                           @profile
  1073                                           def bin_packing_with_existing(
  1074                                               polygons: list[Carpet],
  1075                                               existing_placed: list[tuple],
  1076                                               sheet_size: tuple[float, float],
  1077                                               verbose: bool = True,
  1078                                           ) -> tuple[list[tuple], list[tuple]]:
  1079                                               """Bin packing that considers already placed polygons on the sheet."""
  1080                                               # Convert sheet size from cm to mm to match DXF polygon units
  1081       220     464546.0   2111.6      0.0      sheet_width_mm, sheet_height_mm = sheet_size[0] * 10, sheet_size[1] * 10
  1082                                           
  1083       220     393254.0   1787.5      0.0      placed = []
  1084       220     376422.0   1711.0      0.0      unplaced = []
  1085                                           
  1086                                               # Start with existing placed polygons as obstacles
  1087       220     573757.0   2608.0      0.0      obstacles = [placed_tuple[0] for placed_tuple in existing_placed]
  1088                                           
  1089       220     406303.0   1846.8      0.0      if verbose:
  1090                                                   st.info(
  1091                                                       f"Дозаполняем лист с {len(obstacles)} существующими деталями, добавляем {len(polygons)} новых"
  1092                                                   )
  1093                                           
  1094                                               # IMPROVEMENT 1: Sort polygons by area and perimeter for better packing
  1095       220     434934.0   1977.0      0.0      def get_polygon_priority(polygon_tuple: Carpet):
  1096                                                   polygon = polygon_tuple.polygon
  1097                                                   # Combine area and perimeter for better sorting (larger, more complex shapes first)
  1098                                                   area = polygon.area
  1099                                                   bounds = polygon.bounds
  1100                                                   perimeter_approx = 2 * ((bounds[2] - bounds[0]) + (bounds[3] - bounds[1]))
  1101                                                   return area + perimeter_approx * 0.1
  1102                                           
  1103       220   39550101.0 179773.2      0.0      sorted_polygons = sorted(polygons, key=get_polygon_priority, reverse=True)
  1104                                           
  1105      1597    4196028.0   2627.4      0.0      for i, carpet in enumerate(sorted_polygons):
  1106      1377    3079067.0   2236.1      0.0          polygon = carpet.polygon
  1107      1377    3618474.0   2627.8      0.0          file_name = carpet.filename
  1108      1377    2976142.0   2161.3      0.0          color = carpet.color
  1109      1377    2629143.0   1909.3      0.0          order_id = carpet.order_id
  1110                                           
  1111      1377    2592331.0   1882.6      0.0          placed_successfully = False
  1112                                           
  1113                                                   # Check if polygon is too large for the sheet
  1114      1377   18862265.0  13698.1      0.0          bounds = polygon.bounds
  1115      1377    2817400.0   2046.0      0.0          poly_width = bounds[2] - bounds[0]
  1116      1377    2532530.0   1839.2      0.0          poly_height = bounds[3] - bounds[1]
  1117                                           
  1118      1377    3135344.0   2276.9      0.0          if poly_width > sheet_width_mm or poly_height > sheet_height_mm:
  1119        63     113626.0   1803.6      0.0              unplaced.append((polygon, file_name, color, order_id))
  1120        63      92607.0   1470.0      0.0              continue
  1121                                           
  1122                                                   # Try all allowed orientations (0°, 90°, 180°, 270°) with better placement
  1123      1314    2127959.0   1619.5      0.0          best_placement = None
  1124      1314    4859586.0   3698.3      0.0          best_waste = float("inf")
  1125                                           
  1126                                                   # Only allowed rotation angles for cutting machines
  1127      1314    2637783.0   2007.4      0.0          rotation_angles = [0, 90, 180, 270]
  1128                                           
  1129      6570   13104286.0   1994.6      0.0          for angle in rotation_angles:
  1130      5256  683853432.0 130109.1      0.1              rotated = rotate_polygon(polygon, angle) if angle != 0 else polygon
  1131      5256   67947816.0  12927.7      0.0              rotated_bounds = rotated.bounds
  1132      5256    9824687.0   1869.2      0.0              rotated_width = rotated_bounds[2] - rotated_bounds[0]
  1133      5256   10184307.0   1937.7      0.0              rotated_height = rotated_bounds[3] - rotated_bounds[1]
  1134                                           
  1135                                                       # Skip if doesn't fit
  1136      5256   10526710.0   2002.8      0.0              if rotated_width > sheet_width_mm or rotated_height > sheet_height_mm:
  1137       116     168999.0   1456.9      0.0                  continue
  1138                                           
  1139                                                       # Find position that avoids existing obstacles
  1140     10280     4.81e+11 4.68e+07     99.8              best_x, best_y = find_bottom_left_position_with_obstacles(
  1141      5140    7469431.0   1453.2      0.0                  rotated, obstacles, sheet_width_mm, sheet_height_mm
  1142                                                       )
  1143                                           
  1144      5140   11898725.0   2314.9      0.0              if best_x is not None and best_y is not None:
  1145                                                           # Calculate waste for this placement
  1146       300   11597122.0  38657.1      0.0                  translated = translate_polygon(
  1147       150     288064.0   1920.4      0.0                      rotated, best_x - rotated_bounds[0], best_y - rotated_bounds[1]
  1148                                                           )
  1149       300   11443358.0  38144.5      0.0                  waste = calculate_placement_waste(
  1150       150     252940.0   1686.3      0.0                      translated,
  1151       150     461535.0   3076.9      0.0                      [(obs, 0, 0, 0, "obstacle") for obs in obstacles],
  1152       150     292261.0   1948.4      0.0                      sheet_width_mm,
  1153       150     203351.0   1355.7      0.0                      sheet_height_mm,
  1154                                                           )
  1155                                           
  1156       150     284094.0   1894.0      0.0                  if waste < best_waste:
  1157        72     126824.0   1761.4      0.0                      best_waste = waste
  1158        72     189668.0   2634.3      0.0                      best_placement = {
  1159        72     100774.0   1399.6      0.0                          "polygon": translated,
  1160        72     151958.0   2110.5      0.0                          "x_offset": best_x - rotated_bounds[0],
  1161        72     125211.0   1739.0      0.0                          "y_offset": best_y - rotated_bounds[1],
  1162        72     118581.0   1647.0      0.0                          "angle": angle,
  1163                                                               }
  1164                                           
  1165                                                   # Apply best placement if found
  1166      1314    2708128.0   2061.0      0.0          if best_placement:
  1167       124     224588.0   1811.2      0.0              placed.append(
  1168        62      88542.0   1428.1      0.0                  (
  1169        62     119202.0   1922.6      0.0                      best_placement["polygon"],
  1170        62     111660.0   1801.0      0.0                      best_placement["x_offset"],
  1171        62      95675.0   1543.1      0.0                      best_placement["y_offset"],
  1172        62     108039.0   1742.6      0.0                      best_placement["angle"],
  1173        62     104825.0   1690.7      0.0                      file_name,
  1174        62      85335.0   1376.4      0.0                      color,
  1175        62     108380.0   1748.1      0.0                      order_id,
  1176                                                           )
  1177                                                       )
  1178                                                       # Add this polygon as an obstacle for subsequent placements
  1179        62     114252.0   1842.8      0.0              obstacles.append(best_placement["polygon"])
  1180        62     111875.0   1804.4      0.0              placed_successfully = True
  1181                                           
  1182      1314    2325174.0   1769.5      0.0          if not placed_successfully:
  1183      1252    3170036.0   2532.0      0.0              unplaced.append((polygon, file_name, color, order_id))
  1184                                           
  1185       220     765244.0   3478.4      0.0      return placed, unplaced

Total time: 490.425 s
File: /home/sasha/proj/2025/eva_layout/layout_optimizer.py
Function: bin_packing_with_inventory at line 1617

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
  1617                                           @profile
  1618                                           def bin_packing_with_inventory(
  1619                                               carpets: list[Carpet],
  1620                                               available_sheets: list[dict],
  1621                                               verbose: bool = True,
  1622                                               max_sheets_per_order: int = None,
  1623                                               progress_callback=None,
  1624                                           ) -> tuple[list[dict], list[tuple]]:
  1625                                               """Optimize placement of polygons on available sheets with inventory tracking."""
  1626       492   74475258.0 151372.5      0.0      logger.info("=== НАЧАЛО bin_packing_with_inventory ===")
  1627       982   71957235.0  73276.2      0.0      logger.info(
  1628       491    1056430.0   2151.6      0.0          f"Входные параметры: {len(carpets)} полигонов, {len(available_sheets)} типов листов, max_sheets_per_order={max_sheets_per_order}"
  1629                                               )
  1630                                           
  1631       491     838290.0   1707.3      0.0      placed_layouts = []
  1632       491     703157.0   1432.1      0.0      all_unplaced = []
  1633       982    1446472.0   1473.0      0.0      sheet_inventory = [
  1634       982    1694369.0   1725.4      0.0          sheet.copy() for sheet in available_sheets
  1635                                               ]  # Copy to avoid modifying original
  1636                                           
  1637       491     731304.0   1489.4      0.0      if verbose:
  1638                                                   total_available = sum(
  1639                                                       sheet["count"] - sheet["used"] for sheet in sheet_inventory
  1640                                                   )
  1641                                                   st.info(
  1642                                                       f"Начинаем размещение {len(carpets)} полигонов на {total_available} доступных листах"
  1643                                                   )
  1644                                                   if max_sheets_per_order:
  1645                                                       st.info(f"Ограничение: максимум {max_sheets_per_order} листов на заказ")
  1646                                           
  1647                                               # Group polygons by order_id and separate by priority
  1648       491   72762404.0 148192.3      0.0      logger.info("Группировка полигонов по order_id и приоритету...")
  1649       491     803097.0   1635.6      0.0      order_groups = {}
  1650       491     736194.0   1499.4      0.0      priority2_carpets = []  # Polygons with priority 2 for later processing
  1651                                           
  1652      1152    1829149.0   1587.8      0.0      for carpet in carpets:
  1653                                                   # Separate priority 2 polygons for later processing
  1654       661    1088845.0   1647.3      0.0          if carpet.priority == 2:
  1655        40      55861.0   1396.5      0.0              priority2_carpets.append(carpet)
  1656        80     176059.0   2200.7      0.0              logger.debug(
  1657        40      61943.0   1548.6      0.0                  f"Полигон {carpet.filename} отложен для приоритета 2 (заполнение пустот)"
  1658                                                       )
  1659                                                   else:
  1660                                                       # Process priority 1 and Excel files normally
  1661       621     987385.0   1590.0      0.0              if carpet.order_id not in order_groups:
  1662       535     880750.0   1646.3      0.0                  order_groups[carpet.order_id] = []
  1663       535    2195941.0   4104.6      0.0                  logger.debug(f"Создана новая группа для заказа: {carpet.order_id}")
  1664       621    1042341.0   1678.5      0.0              order_groups[carpet.order_id].append(carpet)
  1665                                           
  1666       982   70840167.0  72138.7      0.0      logger.info(
  1667       491     976501.0   1988.8      0.0          f"Группировка завершена: {len(order_groups)} уникальных заказов, {len(priority2_carpets)} полигонов приоритета 2"
  1668                                               )
  1669      1026    1907034.0   1858.7      0.0      for order_id, group in order_groups.items():
  1670       535   76638114.0 143248.8      0.0          logger.info(f"  • Заказ {order_id}: {len(group)} файлов")
  1671       491     810082.0   1649.9      0.0      if priority2_carpets:
  1672         2    1584591.0 792295.5      0.0          logger.info(
  1673         1       3283.0   3283.0      0.0              f"  • Приоритет 2 (заполнение пустот): {len(priority2_carpets)} файлов"
  1674                                                   )
  1675                                           
  1676       491     791355.0   1611.7      0.0      if verbose:
  1677                                                   st.info(f"Найдено {len(order_groups)} уникальных заказов для размещения:")
  1678                                                   for order_id, group in order_groups.items():
  1679                                                       st.info(f"  • Заказ {order_id}: {len(group)} файлов")
  1680                                                       # Show filenames for debugging
  1681                                                       for carpet in group:
  1682                                                           st.write(f"    - {carpet.filename}")
  1683                                           
  1684       491     726551.0   1479.7      0.0      sheet_counter = 0
  1685                                           
  1686                                               # Track sheets used per order for constraint checking
  1687       491    1082647.0   2205.0      0.0      order_sheet_usage = {order_id: 0 for order_id in order_groups.keys()}
  1688                                           
  1689       982   70476561.0  71768.4      0.0      logger.info(
  1690       491     906161.0   1845.5      0.0          f"Используем упрощенный эффективный алгоритм: {len(order_groups)} заказов"
  1691                                               )
  1692                                           
  1693                                               # Check if we only have priority 2 polygons
  1694       491     837733.0   1706.2      0.0      if not order_groups and priority2_carpets:
  1695                                                   logger.info(
  1696                                                       f"Только файлы приоритета 2: {len(priority2_carpets)} файлов не размещаются (новые листы не создаются)"
  1697                                                   )
  1698                                                   if verbose:
  1699                                                       st.warning(
  1700                                                           f"⚠️ Только файлы приоритета 2: {len(priority2_carpets)} файлов не размещаются (новые листы не создаются)"
  1701                                                       )
  1702                                                   all_unplaced.extend(priority2_carpets)
  1703                                           
  1704                                                   # Progress update for early return
  1705                                                   if progress_callback:
  1706                                                       progress_callback(
  1707                                                           100, "Завершено: только файлы приоритета 2 (не размещены)"
  1708                                                       )
  1709                                           
  1710                                                   return placed_layouts, all_unplaced
  1711                                           
  1712                                               # NEW LOGIC: Priority queue for orders based on MAX_SHEETS_PER_ORDER constraint
  1713                                               # Track which order was placed first and its starting sheet
  1714       491     750650.0   1528.8      0.0      order_first_sheet = {}  # order_id -> first_sheet_number
  1715                                           
  1716                                               # Process orders using priority queue logic
  1717       491     945679.0   1926.0      0.0      remaining_orders = dict(order_groups)  # Copy to modify
  1718       982    1774003.0   1806.5      0.0      max_iterations = max(
  1719       491     807986.0   1645.6      0.0          50, len(remaining_orders) * 25
  1720                                               )  # Safety limit with higher multiplier
  1721       491     734223.0   1495.4      0.0      iteration_count = 0
  1722                                               
  1723                                               # Детектор зависших итераций
  1724       491     695953.0   1417.4      0.0      consecutive_no_progress = 0
  1725       491     711191.0   1448.5      0.0      max_no_progress = 3  # Прерывать после 3 итераций без размещений
  1726                                           
  1727      1990    3604144.0   1811.1      0.0      while (remaining_orders and 
  1728      1989   11882936.0   5974.3      0.0             any(sheet["count"] - sheet["used"] > 0 for sheet in sheet_inventory) and
  1729      1989    5887845.0   2960.2      0.0             consecutive_no_progress < max_no_progress):
  1730      1499    2297609.0   1532.8      0.0          iteration_count += 1
  1731      1499  219371550.0 146345.3      0.0          logger.info(f"--- ИТЕРАЦИЯ {iteration_count} ---")
  1732      1499  211582968.0 141149.4      0.0          logger.info(f"Остается заказов: {len(remaining_orders)}")
  1733      1499    2555885.0   1705.1      0.0          if iteration_count > max_iterations:
  1734                                                       logger.error(
  1735                                                           f"Превышен лимит итераций ({max_iterations}), прерываем выполнение"
  1736                                                       )
  1737                                                       break
  1738                                           
  1739      1499    2337097.0   1559.1      0.0          placed_on_current_sheet = False
  1740                                           
  1741                                                   # Try each available sheet type, GROUP BY COLOR for better organization
  1742                                                   # Сначала группируем листы по цвету: чёрный, потом серый, потом остальные
  1743      2998    4726302.0   1576.5      0.0          available_sheet_types = [
  1744      2998    5174617.0   1726.0      0.0              st for st in sheet_inventory if st["count"] - st["used"] > 0
  1745                                                   ]
  1746                                           
  1747                                                   # Группируем по цветам
  1748      1499    2358492.0   1573.4      0.0          sheets_by_color = {}
  1749      3023    4673060.0   1545.8      0.0          for sheet_type in available_sheet_types:
  1750      1524    2533518.0   1662.4      0.0              color = sheet_type.get("color", "серый")
  1751      1524    2471500.0   1621.7      0.0              if color not in sheets_by_color:
  1752      1524    2519585.0   1653.3      0.0                  sheets_by_color[color] = []
  1753      1524    2464558.0   1617.2      0.0              sheets_by_color[color].append(sheet_type)
  1754                                           
  1755                                                   # Обрабатываем в порядке: черный, серый, остальные цвета
  1756      1499    2563690.0   1710.3      0.0          color_priority = ["чёрный", "серый"]
  1757      1499    2366308.0   1578.6      0.0          ordered_sheet_types = []
  1758                                           
  1759      4497    6802966.0   1512.8      0.0          for color in color_priority:
  1760      2998    4585517.0   1529.5      0.0              if color in sheets_by_color:
  1761      1524    2630367.0   1726.0      0.0                  ordered_sheet_types.extend(sheets_by_color[color])
  1762                                           
  1763                                                   # Добавляем остальные цвета
  1764      3023    5277684.0   1745.8      0.0          for color, sheet_list in sheets_by_color.items():
  1765      1524    2583964.0   1695.5      0.0              if color not in color_priority:
  1766                                                           ordered_sheet_types.extend(sheet_list)
  1767                                           
  1768      2982   12304975.0   4126.4      0.0          for sheet_type in ordered_sheet_types:
  1769      1511    2568822.0   1700.1      0.0              sheet_size = (sheet_type["width"], sheet_type["height"])
  1770      1511    2285576.0   1512.6      0.0              sheet_color = sheet_type.get("color", "серый")
  1771                                           
  1772                                                       # Calculate which sheet number this would be
  1773      1511    2249570.0   1488.8      0.0              next_sheet_number = sheet_counter + 1
  1774                                           
  1775                                                       # NEW APPROACH: Reserve sheets for started orders to guarantee completion
  1776                                                       # Step 1: Check which started orders need priority on this sheet
  1777      1511    2242510.0   1484.1      0.0              priority_orders = []
  1778      1511    2211002.0   1463.3      0.0              blocked_orders = []
  1779      1511    2241207.0   1483.3      0.0              new_orders = []
  1780                                           
  1781      3733    6085075.0   1630.1      0.0              for order_id, order_polygons in remaining_orders.items():
  1782                                                           # Skip orders that don't apply to MAX_SHEETS_PER_ORDER constraint
  1783      2222    3262299.0   1468.2      0.0                  is_constrained = (
  1784      6666   10002650.0   1500.5      0.0                      max_sheets_per_order is not None
  1785      2222    3291535.0   1481.3      0.0                      and order_id != "additional"
  1786      2222    3225490.0   1451.6      0.0                      and order_id != "unknown"  # Manual uploads are not limited
  1787      4444    7408534.0   1667.1      0.0                      and not str(order_id).startswith(
  1788      2222    3227940.0   1452.7      0.0                          "group_"
  1789                                                               )  # Group uploads are not limited
  1790                                                           )
  1791                                           
  1792      2222    3277924.0   1475.2      0.0                  if not is_constrained:
  1793                                                               # Unconstrained orders can be placed anytime
  1794                                                               new_orders.append((order_id, order_polygons))
  1795                                                               continue
  1796                                           
  1797      2222    3527738.0   1587.6      0.0                  if order_id in order_first_sheet:
  1798                                                               # Order already started - check if within range
  1799       304     446220.0   1467.8      0.0                      first_sheet = order_first_sheet[order_id]
  1800       304     460348.0   1514.3      0.0                      max_allowed_sheet = first_sheet + max_sheets_per_order - 1
  1801                                           
  1802       304     452259.0   1487.7      0.0                      if next_sheet_number <= max_allowed_sheet:
  1803                                                                   # Within range - MAXIMUM priority (must complete this order)
  1804        69     109506.0   1587.0      0.0                          priority_orders.append((order_id, order_polygons))
  1805       138     347356.0   2517.1      0.0                          logger.debug(
  1806        69     139886.0   2027.3      0.0                              f"Заказ {order_id}: МАКСИМАЛЬНЫЙ приоритет (листы {first_sheet}-{max_allowed_sheet}, текущий {next_sheet_number})"
  1807                                                                   )
  1808                                                               else:
  1809                                                                   # Outside range - blocked from starting new placement
  1810       235     355879.0   1514.4      0.0                          blocked_orders.append(order_id)
  1811       470    1167060.0   2483.1      0.0                          logger.debug(
  1812       235     464953.0   1978.5      0.0                              f"Заказ {order_id}: ЗАБЛОКИРОВАН (вне диапазона {first_sheet}-{max_allowed_sheet}, текущий {next_sheet_number})"
  1813                                                                   )
  1814                                                           else:
  1815                                                               # New order - can start only if no priority orders need this sheet
  1816      1918    2934112.0   1529.8      0.0                      new_orders.append((order_id, order_polygons))
  1817                                           
  1818                                                       # PRIORITY STRATEGY: If there are started orders within range, give them ALL the space
  1819      1511    2454811.0   1624.6      0.0              if priority_orders:
  1820                                                           # Only consider priority orders - they get the entire sheet
  1821        24      48813.0   2033.9      0.0                  orders_to_consider = priority_orders
  1822        48    4922122.0 102544.2      0.0                  logger.info(
  1823        24      49937.0   2080.7      0.0                      f"Лист {next_sheet_number}: РЕЖИМ ПРИОРИТЕТА - {len(priority_orders)} начатых заказов"
  1824                                                           )
  1825                                                       else:
  1826                                                           # No priority orders - allow new orders to start
  1827                                                           # IMPROVED STRATEGY: Sort new orders by carpet count (descending)
  1828                                                           # Orders with more carpets should be processed first as they are harder to fit within MAX_SHEETS_PER_ORDER constraint
  1829      2974    7469372.0   2511.6      0.0                  new_orders_sorted = sorted(
  1830      1487    2467356.0   1659.3      0.0                      new_orders, key=lambda x: len(x[1]), reverse=True
  1831                                                           )
  1832      1487    2289626.0   1539.8      0.0                  orders_to_consider = new_orders_sorted
  1833      2974  229124758.0  77042.6      0.0                  logger.info(
  1834      1487    2946747.0   1981.7      0.0                      f"Лист {next_sheet_number}: Обычный режим - {len(new_orders_sorted)} новых заказов (отсортированы по убыванию количества ковров)"
  1835                                                           )
  1836                                                           # Log order sorting for debugging
  1837      3015    5520438.0   1831.0      0.0                  for order_id, order_polygons in new_orders_sorted[:5]:  # Show top 5
  1838      1528    6507399.0   4258.8      0.0                      logger.debug(f"  Заказ {order_id}: {len(order_polygons)} ковров")
  1839      1487    2452147.0   1649.1      0.0                  if len(new_orders_sorted) > 5:
  1840         8      30378.0   3797.2      0.0                      logger.debug(f"  ... еще {len(new_orders_sorted) - 5} заказов")
  1841                                           
  1842                                                       # Collect polygons from orders that can fit on this sheet
  1843      1511    2426514.0   1605.9      0.0              compatible_polygons = []
  1844      1511    2234128.0   1478.6      0.0              orders_to_try = []
  1845                                           
  1846      3196    7619331.0   2384.0      0.0              for order_id, order_polygons in orders_to_consider:
  1847                                                           # Filter polygons by color
  1848      1685    6101238.0   3620.9      0.0                  color_matched_polygons = []
  1849      3641   24499512.0   6728.8      0.0                  for carpet in order_polygons:
  1850      1956   10250897.0   5240.7      0.0                      if carpet.color == sheet_color:
  1851      1843    9389118.0   5094.5      0.0                          color_matched_polygons.append(carpet)
  1852                                           
  1853      1685    8401373.0   4986.0      0.0                  if color_matched_polygons:
  1854      1616    8614038.0   5330.5      0.0                      compatible_polygons.extend(color_matched_polygons)
  1855      1616    5194728.0   3214.6      0.0                      orders_to_try.append(order_id)
  1856                                           
  1857      1511    7709720.0   5102.4      0.0              if not compatible_polygons:
  1858        22     158591.0   7208.7      0.0                  logger.debug(
  1859        11      69973.0   6361.2      0.0                      f"Нет совместимых полигонов для листа {sheet_type['name']} цвета {sheet_color}"
  1860                                                           )
  1861        11      40922.0   3720.2      0.0                  continue  # No compatible polygons for this sheet color
  1862                                           
  1863                                                       # NEW STRATEGY: Try to fill existing sheets BEFORE creating a new one
  1864      1500    7689012.0   5126.0      0.0              filled_existing_sheet = False
  1865      1500  237024549.0 158016.4      0.0              logger.info("🚀 НОВЫЙ АЛГОРИТМ: Попытка дозаполнить существующие листы")
  1866                                           
  1867                                                       # Try to add compatible polygons to existing sheets of the same color first
  1868      1828   18741864.0  10252.7      0.0              for layout_idx, existing_layout in enumerate(placed_layouts):
  1869       328    1864925.0   5685.7      0.0                  if existing_layout.get("sheet_color") == sheet_color:
  1870       171     958888.0   5607.5      0.0                      current_usage = existing_layout.get("usage_percent", 0)
  1871                                           
  1872                                                               # Skip nearly full sheets (>90%) to avoid tiny gaps
  1873       171     951073.0   5561.8      0.0                      if current_usage >= 90:
  1874        13      66275.0   5098.1      0.0                          continue
  1875                                           
  1876       158     863643.0   5466.1      0.0                      existing_placed = existing_layout["placed_polygons"]
  1877       158     884030.0   5595.1      0.0                      sheet_size = existing_layout["sheet_size"]
  1878                                           
  1879       316    2488960.0   7876.5      0.0                      logger.debug(
  1880       158    1419250.0   8982.6      0.0                          f"Пытаемся дозаполнить лист #{existing_layout['sheet_number']} (заполнение: {current_usage:.1f}%)"
  1881                                                               )
  1882                                           
  1883       158     871881.0   5518.2      0.0                      try:
  1884       316     3.62e+11 1.14e+09     73.7                          additional_placed, still_remaining = bin_packing_with_existing(
  1885       158     864909.0   5474.1      0.0                              compatible_polygons,
  1886       158     851566.0   5389.7      0.0                              existing_placed,
  1887       158     864062.0   5468.7      0.0                              sheet_size,
  1888       158     860849.0   5448.4      0.0                              verbose=False,
  1889                                                                   )
  1890                                           
  1891       158     979144.0   6197.1      0.0                          if additional_placed:
  1892        26    4459139.0 171505.3      0.0                              logger.info(
  1893        13     922794.0  70984.2      0.0                                  f"✅ ДОЗАПОЛНЕНИЕ: Лист #{existing_layout['sheet_number']} получил +{len(additional_placed)} полигонов ({current_usage:.1f}% → {calculate_usage_percent(existing_placed + additional_placed, sheet_size):.1f}%)"
  1894                                                                       )
  1895                                           
  1896                                                                       # Update existing layout
  1897        13      92811.0   7139.3      0.0                              placed_layouts[layout_idx]["placed_polygons"] = (
  1898        13      97071.0   7467.0      0.0                                  existing_placed + additional_placed
  1899                                                                       )
  1900        13      89039.0   6849.2      0.0                              placed_layouts[layout_idx]["usage_percent"] = (
  1901        26    1797121.0  69120.0      0.0                                  calculate_usage_percent(
  1902        13      77308.0   5946.8      0.0                                      placed_layouts[layout_idx]["placed_polygons"],
  1903        13      72556.0   5581.2      0.0                                      sheet_size,
  1904                                                                           )
  1905                                                                       )
  1906                                           
  1907                                                                       # Track orders and remove placed polygons from remaining orders
  1908        13      91064.0   7004.9      0.0                              additional_orders_on_sheet = set()
  1909        34     259569.0   7634.4      0.0                              for placed_tuple in additional_placed:
  1910                                                                           # Handle different tuple structures for order_id
  1911        21     123536.0   5882.7      0.0                                  if len(placed_tuple) == 7:
  1912                                                                               # Extended format from bin_packing_with_existing: (polygon, x, y, angle, file_name, color, order_id)
  1913        21     123469.0   5879.5      0.0                                      placed_order_id = placed_tuple[6]
  1914                                                                           elif len(placed_tuple) > 3:
  1915                                                                               # Standard format: (polygon, file_name, color, order_id)
  1916                                                                               placed_order_id = placed_tuple[3]
  1917                                                                           else:
  1918                                                                               placed_order_id = "unknown"
  1919        21     123399.0   5876.1      0.0                                  additional_orders_on_sheet.add(placed_order_id)
  1920                                           
  1921                                                                           # Update order sheet tracking
  1922        21     130521.0   6215.3      0.0                                  if placed_order_id not in order_sheet_usage:
  1923                                                                               order_sheet_usage[placed_order_id] = 0
  1924        21     123536.0   5882.7      0.0                                  if placed_order_id not in order_first_sheet:
  1925        18     104616.0   5812.0      0.0                                      order_first_sheet[placed_order_id] = (
  1926        18     103703.0   5761.3      0.0                                          existing_layout["sheet_number"]
  1927                                                                               )
  1928                                           
  1929                                                                       # ИСПРАВЛЕНИЕ: точечное совпадение по 3 полям вместо set-сравнения
  1930                                                                       # Из-за разной длины кортежей (4 vs 7) set-сравнение всегда возвращало False
  1931        13      81216.0   6247.4      0.0                              placed_keys = set()
  1932        34     260761.0   7669.4      0.0                              for placed_poly in additional_placed:
  1933        21     123887.0   5899.4      0.0                                  if len(placed_poly) >= 5:
  1934                                                                               # Полигон из bin_packing_with_existing: (polygon, x, y, angle, filename, color, order_id)
  1935        21     130595.0   6218.8      0.0                                      key = (
  1936        21     126258.0   6012.3      0.0                                          placed_poly[4],
  1937        21     121791.0   5799.6      0.0                                          placed_poly[5],
  1938        21     122911.0   5852.9      0.0                                          placed_poly[6],
  1939                                                                               )  # filename, color, order_id
  1940                                                                           else:
  1941                                                                               # Обычный полигон: (polygon, filename, color, order_id)
  1942                                                                               key = (
  1943                                                                                   placed_poly[1],
  1944                                                                                   placed_poly[2],
  1945                                                                                   placed_poly[3],
  1946                                                                               )
  1947        21     126962.0   6045.8      0.0                                  placed_keys.add(key)
  1948                                           
  1949                                                                       # Удаляем полигоны с совпадающими ключами
  1950        26     160407.0   6169.5      0.0                              compatible_polygons = [
  1951       296    3368238.0  11379.2      0.0                                  p
  1952       322    2242550.0   6964.4      0.0                                  for p in compatible_polygons
  1953       296    2127890.0   7188.8      0.0                                  if (p.filename, p.color, p.order_id) not in placed_keys
  1954                                                                       ]
  1955                                           
  1956                                                                       # Update remaining orders - remove empty orders or reduce polygon counts
  1957       283    1828139.0   6459.9      0.0                              for order_id in list(remaining_orders.keys()):
  1958       270    1646352.0   6097.6      0.0                                  if order_id in additional_orders_on_sheet:
  1959                                                                               # Count how many polygons from this order were placed
  1960                                                                               # ИСПРАВЛЕНИЕ: правильно извлекаем order_id из разных форматов кортежей
  1961        21     133037.0   6335.1      0.0                                      placed_from_order = []
  1962        64     535631.0   8369.2      0.0                                      for p in additional_placed:
  1963        43     270189.0   6283.5      0.0                                          if len(p) >= 5:
  1964                                                                                       # Полигон из bin_packing_with_existing: (polygon, x, y, angle, filename, color, order_id)
  1965        43     473965.0  11022.4      0.0                                              poly_order_id = p[6] if len(p) > 6 else None
  1966                                                                                   else:
  1967                                                                                       # Обычный полигон: (polygon, filename, color, order_id)
  1968                                                                                       poly_order_id = p[3] if len(p) > 3 else None
  1969                                           
  1970        43     274028.0   6372.7      0.0                                          if poly_order_id == order_id:
  1971        21     134712.0   6414.9      0.0                                              placed_from_order.append(p)
  1972                                           
  1973                                                                               # Remove exactly those polygons that were placed
  1974                                                                               # ИСПРАВЛЕНИЕ: учитываем правильный формат кортежей
  1975        42     375221.0   8933.8      0.0                                      for placed_poly in placed_from_order:
  1976                                                                                   # Извлекаем ключ из размещенного полигона
  1977        21     137714.0   6557.8      0.0                                          if len(placed_poly) >= 5:
  1978                                                                                       # Полигон из bin_packing_with_existing: (polygon, x, y, angle, filename, color, order_id)
  1979        21     138414.0   6591.1      0.0                                              placed_key = (
  1980        21     134710.0   6414.8      0.0                                                  placed_poly[4],
  1981        21     145043.0   6906.8      0.0                                                  placed_poly[5],
  1982        21     134289.0   6394.7      0.0                                                  placed_poly[6],
  1983                                                                                       )
  1984                                                                                   else:
  1985                                                                                       # Обычный полигон: (polygon, filename, color, order_id)
  1986                                                                                       placed_key = (
  1987                                                                                           placed_poly[1],
  1988                                                                                           placed_poly[2],
  1989                                                                                           placed_poly[3],
  1990                                                                                       )
  1991                                           
  1992        54     465308.0   8616.8      0.0                                          for orig_carpet in remaining_orders[order_id][:]:
  1993                                                                                       # Сравниваем по ключу (filename, color, order_id)
  1994        54     352529.0   6528.3      0.0                                              orig_key = (
  1995        54     351618.0   6511.4      0.0                                                  orig_carpet.filename,
  1996        54     347630.0   6437.6      0.0                                                  orig_carpet.color,
  1997        54     368795.0   6829.5      0.0                                                  orig_carpet.order_id,
  1998                                                                                       )
  1999        54     363633.0   6733.9      0.0                                              if orig_key == placed_key:
  2000        42     427671.0  10182.6      0.0                                                  remaining_orders[order_id].remove(
  2001        21     140299.0   6680.9      0.0                                                      orig_carpet
  2002                                                                                           )
  2003        21     138697.0   6604.6      0.0                                                  break
  2004                                           
  2005                                                                               # Remove empty orders
  2006        21     138692.0   6604.4      0.0                                      if not remaining_orders[order_id]:
  2007        14    2360690.0 168620.7      0.0                                          logger.info(
  2008         7      50981.0   7283.0      0.0                                              f"  Заказ {order_id} полностью размещен (дозаполнение)"
  2009                                                                                   )
  2010         7      58662.0   8380.3      0.0                                          del remaining_orders[order_id]
  2011                                           
  2012                                                                       # Update orders on this sheet
  2013        13      93649.0   7203.8      0.0                              if "orders_on_sheet" not in placed_layouts[layout_idx]:
  2014                                                                           placed_layouts[layout_idx]["orders_on_sheet"] = set()
  2015        13     103006.0   7923.5      0.0                              placed_layouts[layout_idx]["orders_on_sheet"].update(
  2016                                                                           additional_orders_on_sheet
  2017                                                                       )
  2018                                           
  2019                                                                       filled_existing_sheet = True
  2020                                                                       placed_on_current_sheet = True
  2021                                           
  2022                                                                       if verbose:
  2023                                                                           st.success(
  2024                                                                               f"✅ Дозаполнен лист #{existing_layout['sheet_number']}: +{len(additional_placed)} деталей"
  2025                                                                           )
  2026                                           
  2027                                                                       break  # Found space, don't need to create new sheet yet
  2028                                           
  2029        13      25137.0   1933.6      0.0                      except Exception as e:
  2030        26      88479.0   3403.0      0.0                          logger.debug(
  2031        13      38900.0   2992.3      0.0                              f"Не удалось дозаполнить лист #{existing_layout['sheet_number']}: {e}"
  2032                                                                   )
  2033        13      58661.0   4512.4      0.0                          continue
  2034                                           
  2035                                                       # If we filled an existing sheet, continue to next iteration without creating new sheet
  2036      1500   11281811.0   7521.2      0.0              if filled_existing_sheet:
  2037                                                           continue
  2038                                           
  2039      1500   11015647.0   7343.8      0.0              sheet_counter += 1
  2040                                           
  2041      1500   11184463.0   7456.3      0.0              if verbose:
  2042                                                           st.info(
  2043                                                               f"  Лист #{sheet_counter}: {sheet_type['name']} ({sheet_size[0]}x{sheet_size[1]} см, цвет: {sheet_color})"
  2044                                                           )
  2045                                                           st.info(
  2046                                                               f"  Совместимых полигонов: {len(compatible_polygons)} из заказов: {orders_to_try}"
  2047                                                           )
  2048                                           
  2049      3000  254177009.0  84725.7      0.1              logger.info(
  2050      1500   14052674.0   9368.4      0.0                  f"Обрабатываем лист #{sheet_counter}: {len(compatible_polygons)} совместимых полигонов из заказов {orders_to_try}"
  2051                                                       )
  2052                                           
  2053                                                       # Try to place compatible polygons on this sheet
  2054      3000 2633229535.0 877743.2      0.5              placed, remaining_from_sheet = bin_packing(
  2055      1500   11462594.0   7641.7      0.0                  compatible_polygons, sheet_size, verbose=verbose
  2056                                                       )
  2057                                           
  2058      1500    7538188.0   5025.5      0.0              if placed:  # If we managed to place something
  2059        28     249590.0   8913.9      0.0                  sheet_type["used"] += 1
  2060                                           
  2061                                                           # Track which orders are represented on this sheet
  2062        28     241074.0   8609.8      0.0                  orders_on_sheet = set()
  2063        28     230315.0   8225.5      0.0                  placed_polygon_names = set()
  2064                                           
  2065       114    1050171.0   9212.0      0.0                  for placed_carpet in placed:
  2066                                                               # bin_packing returns: (polygon, x_offset, y_offset, angle, file_name, color, order_id)
  2067        86     677746.0   7880.8      0.0                      if len(placed_carpet) >= 5:
  2068        86     655327.0   7620.1      0.0                          filename = placed_carpet[4]  # file_name is at index 4
  2069                                                               else:
  2070                                                                   filename = "unknown"  # fallback
  2071                                           
  2072        86     655541.0   7622.6      0.0                      placed_polygon_names.add(filename)
  2073                                           
  2074                                                               # Find which order this polygon belongs to
  2075        86     645484.0   7505.6      0.0                      found_order = False
  2076       900    7459262.0   8288.1      0.0                      for order_id, order_polygons in remaining_orders.items():
  2077      3598   33105735.0   9201.1      0.0                          for carpet in order_polygons:
  2078      2784   21789747.0   7826.8      0.0                              if carpet.filename == filename:
  2079        86     659030.0   7663.1      0.0                                  orders_on_sheet.add(order_id)
  2080       172    1624004.0   9441.9      0.0                                  logger.debug(
  2081        86     694158.0   8071.6      0.0                                      f"    Полигон {filename} принадлежит заказу {order_id}"
  2082                                                                           )
  2083        86     669855.0   7789.0      0.0                                  found_order = True
  2084        86     669507.0   7785.0      0.0                                  break
  2085       900    6930167.0   7700.2      0.0                          if found_order:
  2086        86     674462.0   7842.6      0.0                              break
  2087                                           
  2088        86     656381.0   7632.3      0.0                      if not found_order:
  2089                                                                   logger.warning(f"    Не найден заказ для полигона {filename}")
  2090                                           
  2091        56   14692835.0 262372.1      0.0                  logger.info(
  2092        28     365096.0  13039.1      0.0                      f"УСПЕХ: Лист #{sheet_counter} содержит заказы: {orders_on_sheet}"
  2093                                                           )
  2094                                           
  2095                                                           # Update order sheet usage and track first sheet
  2096        96    1148142.0  11959.8      0.0                  for order_id in orders_on_sheet:
  2097        68     668178.0   9826.1      0.0                      if order_id in order_sheet_usage:
  2098        68     695132.0  10222.5      0.0                          order_sheet_usage[order_id] += 1
  2099                                           
  2100                                                                   # Track first sheet for MAX_SHEETS_PER_ORDER constraint
  2101        68     668460.0   9830.3      0.0                          if order_id not in order_first_sheet:
  2102        26     259087.0   9964.9      0.0                              order_first_sheet[order_id] = sheet_counter
  2103        52    5771566.0 110991.7      0.0                              logger.info(
  2104        26     270047.0  10386.4      0.0                                  f"  Заказ {order_id}: начат на листе {sheet_counter}"
  2105                                                                       )
  2106                                           
  2107       136   32750679.0 240813.8      0.0                          logger.info(
  2108        68     705122.0  10369.4      0.0                              f"  Заказ {order_id}: теперь использует {order_sheet_usage[order_id]} листов"
  2109                                                                   )
  2110                                           
  2111        56     510773.0   9120.9      0.0                  placed_layouts.append(
  2112        28     283942.0  10140.8      0.0                      {
  2113        28     248614.0   8879.1      0.0                          "sheet_number": sheet_counter,
  2114        28     270473.0   9659.8      0.0                          "sheet_type": sheet_type["name"],
  2115        28     247284.0   8831.6      0.0                          "sheet_color": sheet_color,  # Add sheet color directly
  2116        28     269912.0   9639.7      0.0                          "sheet_size": sheet_size,
  2117        28     248191.0   8864.0      0.0                          "placed_polygons": placed,
  2118        28    2918960.0 104248.6      0.0                          "usage_percent": calculate_usage_percent(placed, sheet_size),
  2119        28     311814.0  11136.2      0.0                          "orders_on_sheet": list(orders_on_sheet),
  2120                                                               }
  2121                                                           )
  2122                                           
  2123                                                           # Update progress callback if provided
  2124        28     262160.0   9362.9      0.0                  if progress_callback:
  2125                                                               # Better estimate based on actual polygons and sheet capacity
  2126        44     434095.0   9865.8      0.0                      total_priority1_polygons = len(
  2127        44     397290.0   9029.3      0.0                          [
  2128      3190   30752570.0   9640.3      0.0                              p
  2129       858    8176544.0   9529.8      0.0                              for order_polys in order_groups.values()
  2130      3190   36533891.0  11452.6      0.0                              for p in order_polys
  2131                                                                   ]
  2132                                                               )
  2133                                                               # Estimate sheets needed based on average usage and total polygons
  2134        44     418664.0   9515.1      0.0                      estimated_total_sheets = max(
  2135        22     202243.0   9192.9      0.0                          1, total_priority1_polygons // 4
  2136                                                               )  # Assume 4 polygons per sheet on average
  2137        44     416493.0   9465.8      0.0                      progress_percent = min(
  2138        22     200214.0   9100.6      0.0                          95,
  2139        44     402805.0   9154.7      0.0                          50
  2140        22     216144.0   9824.7      0.0                          + (len(placed_layouts) / max(1, estimated_total_sheets)) * 40,
  2141                                                               )  # 50-95% range
  2142        44   25965415.0 590123.1      0.0                      progress_callback(
  2143        22     201053.0   9138.8      0.0                          progress_percent,
  2144        22     225288.0  10240.4      0.0                          f"Создан лист #{sheet_counter} ({sheet_type['name']})",
  2145                                                               )
  2146                                           
  2147                                                           # Remove placed polygons from remaining orders
  2148                                                           # We need to match polygons by both filename AND order_id
  2149        28     294006.0  10500.2      0.0                  placed_polygon_keys = set()  # Maps (filename, order_id) -> True
  2150       114    1255483.0  11013.0      0.0                  for carpet in placed:
  2151        86     787669.0   9158.9      0.0                      if len(carpet) >= 5:
  2152        86     792068.0   9210.1      0.0                          filename = carpet[4]  # file_name is at index 4
  2153        86     774261.0   9003.0      0.0                          if len(carpet) >= 7:
  2154        86     774681.0   9007.9      0.0                              order_id = carpet[6]  # order_id is at index 6
  2155        86     790319.0   9189.8      0.0                              placed_polygon_keys.add((filename, order_id))
  2156       172    1748100.0  10163.4      0.0                              logger.debug(
  2157        86     816373.0   9492.7      0.0                                  f"  Размещен полигон: файл='{filename}', заказ='{order_id}'"
  2158                                                                       )
  2159                                           
  2160        28     269770.0   9634.6      0.0                  total_removed = 0
  2161       570    5837734.0  10241.6      0.0                  for order_id in list(remaining_orders.keys()):
  2162       542    5305009.0   9787.8      0.0                      original_count = len(remaining_orders[order_id])
  2163                                           
  2164                                                               # Only remove polygons that were actually placed from this specific order
  2165       542    5309409.0   9796.0      0.0                      new_order_list = []
  2166      1898   22902355.0  12066.6      0.0                      for carpet in remaining_orders[order_id]:
  2167                                                                   # Check if this carpet was placed
  2168      1356   13575979.0  10011.8      0.0                          carpet_key = (carpet.filename, carpet.order_id)
  2169      1356   13419071.0   9896.1      0.0                          if carpet_key not in placed_polygon_keys:
  2170      1270   13192785.0  10388.0      0.0                              new_order_list.append(carpet)
  2171                                           
  2172       542    5359623.0   9888.6      0.0                      remaining_orders[order_id] = new_order_list
  2173       542    5362282.0   9893.5      0.0                      removed_count = original_count - len(remaining_orders[order_id])
  2174       542    5429447.0  10017.4      0.0                      total_removed += removed_count
  2175                                           
  2176       542    5407628.0   9977.2      0.0                      if removed_count > 0:
  2177       136   25426299.0 186958.1      0.0                          logger.info(
  2178        68     727891.0  10704.3      0.0                              f"  Из заказа {order_id} удалено {removed_count} размещенных полигонов"
  2179                                                                   )
  2180                                           
  2181                                                               # Remove empty orders
  2182       542    5777810.0  10660.2      0.0                      if not remaining_orders[order_id]:
  2183        29    8906348.0 307115.4      0.0                          logger.info(f"  Заказ {order_id} полностью размещен")
  2184        29     340723.0  11749.1      0.0                          del remaining_orders[order_id]
  2185                                           
  2186        28    7524395.0 268728.4      0.0                  logger.info(f"Общее количество удаленных полигонов: {total_removed}")
  2187        28    7204009.0 257286.0      0.0                  logger.info(f"Оставшиеся заказы: {list(remaining_orders.keys())}")
  2188                                           
  2189        28     311046.0  11108.8      0.0                  placed_on_current_sheet = True
  2190                                           
  2191        28     312722.0  11168.6      0.0                  if verbose:
  2192                                                               st.success(
  2193                                                                   f"  ✅ Размещено {len(placed)} объектов на листе {sheet_type['name']}"
  2194                                                               )
  2195                                                               st.info(f"  📊 Заказы на листе: {', '.join(orders_on_sheet)}")
  2196                                           
  2197        28     329620.0  11772.1      0.0                  break  # Move to next iteration with remaining orders
  2198                                           
  2199      1499   15322439.0  10221.8      0.0          if not placed_on_current_sheet:
  2200                                                       # No sheet type could accommodate any remaining polygons in this iteration
  2201                                                       # Check if we still have available sheets of any type
  2202      2942   37005097.0  12578.2      0.0              sheets_still_available = any(
  2203      1471   14409014.0   9795.4      0.0                  sheet["count"] - sheet["used"] > 0 for sheet in sheet_inventory
  2204                                                       )
  2205                                           
  2206      1471   14740366.0  10020.6      0.0              if not sheets_still_available:
  2207                                                           logger.warning(
  2208                                                               f"Все листы закончились. Не удалось разместить оставшиеся заказы: {list(remaining_orders.keys())}"
  2209                                                           )
  2210                                                           break
  2211                                                       else:
  2212                                                           # Continue to next iteration - might be color/size mismatch this round
  2213      2942   34678221.0  11787.3      0.0                  available_sheets_count = sum(
  2214      1471   14506418.0   9861.6      0.0                      max(0, sheet["count"] - sheet["used"]) for sheet in sheet_inventory
  2215                                                           )
  2216                                           
  2217                                                           # Enhanced debugging: show what's blocking placement
  2218      1471  282537792.0 192071.9      0.1                  logger.info(f"Не удалось разместить в итерации {iteration_count}:")
  2219      1471  243045233.0 165224.5      0.0                  logger.info(f"  Доступно листов: {available_sheets_count}")
  2220      1471  225217815.0 153105.2      0.0                  logger.info(f"  Осталось заказов: {len(remaining_orders)}")
  2221                                           
  2222                                                           # Show remaining orders and their polygon counts
  2223      2968   43772277.0  14748.1      0.0                  for order_id, order_polygons in remaining_orders.items():
  2224      1497   15256472.0  10191.4      0.0                      colors_in_order = {}
  2225      3039   43522350.0  14321.3      0.0                      for carpet in order_polygons:
  2226      1542   15846787.0  10276.8      0.0                          color = carpet.color
  2227      1542   16058248.0  10413.9      0.0                          colors_in_order[color] = colors_in_order.get(color, 0) + 1
  2228      2994  255838056.0  85450.3      0.1                      logger.info(
  2229      1497   18915631.0  12635.7      0.0                          f"    {order_id}: {len(order_polygons)} полигонов, цвета: {colors_in_order}"
  2230                                                               )
  2231                                           
  2232                                                           # Show available sheets
  2233      2945   43441138.0  14750.8      0.0                  for sheet_type in sheet_inventory:
  2234      1474   15488025.0  10507.5      0.0                      remaining = sheet_type["count"] - sheet_type["used"]
  2235      1474   15312251.0  10388.2      0.0                      if remaining > 0:
  2236      2948  249710047.0  84704.9      0.1                          logger.info(
  2237      1474   16522627.0  11209.4      0.0                              f"    Доступен лист: {sheet_type['name']} цвет {sheet_type.get('color', 'серый')}, осталось: {remaining}"
  2238                                                                   )
  2239                                           
  2240      1471   15687837.0  10664.7      0.0                  if verbose:
  2241                                                               st.info(
  2242                                                                   f"⚠️ Пропуск итерации {iteration_count}: нет совместимых комбинаций полигон/лист"
  2243                                                               )
  2244                                                               st.info(
  2245                                                                   f"📋 Осталось {len(remaining_orders)} заказов, {available_sheets_count} листов"
  2246                                                               )
  2247                                           
  2248                                                           # Проверка прогресса
  2249      1471   15774061.0  10723.4      0.0                  if placed_on_current_sheet:
  2250                                                               consecutive_no_progress = 0
  2251                                                           else:
  2252      1471   15806525.0  10745.4      0.0                      consecutive_no_progress += 1
  2253      1471  230858660.0 156939.9      0.0                      logger.warning(f"Итерация {iteration_count}: нет прогресса ({consecutive_no_progress}/{max_no_progress})")
  2254                                           
  2255      1471    9450347.0   6424.4      0.0                  continue
  2256                                           
  2257                                               # Проверка причины завершения цикла
  2258       491    5458221.0  11116.5      0.0      if consecutive_no_progress >= max_no_progress:
  2259       490   77901924.0 158983.5      0.0          logger.warning(f"⚠️ Цикл завершен из-за отсутствия прогресса ({consecutive_no_progress} итераций подряд)")
  2260       490    5439510.0  11101.0      0.0          if verbose:
  2261                                                       st.warning(f"⚠️ Размещение прервано: {consecutive_no_progress} итераций подряд без прогресса")
  2262                                           
  2263                                               # Check order constraints after placement - both sheet count and adjacency
  2264       491    5402630.0  11003.3      0.0      violated_orders = []
  2265       491    5397300.0  10992.5      0.0      adjacency_violations = []
  2266                                           
  2267      1026   16438897.0  16022.3      0.0      for order_id, sheets_used in order_sheet_usage.items():
  2268                                                   # Check sheet count constraint
  2269                                                   if (
  2270       535    5873515.0  10978.5      0.0              max_sheets_per_order
  2271       535    5886995.0  11003.7      0.0              and order_id != "additional"
  2272       535    5858139.0  10949.8      0.0              and order_id != "unknown"  # Manual uploads are not limited
  2273       535    6087903.0  11379.3      0.0              and not str(order_id).startswith("group_")  # Group uploads are not limited
  2274       535    6000129.0  11215.2      0.0              and sheets_used > max_sheets_per_order
  2275                                                   ):
  2276                                                       violated_orders.append((order_id, sheets_used))
  2277                                                       logger.error(
  2278                                                           f"НАРУШЕНИЕ ОГРАНИЧЕНИЙ: Заказ {order_id} использует {sheets_used} листов (лимит: {max_sheets_per_order})"
  2279                                                       )
  2280                                           
  2281                                                   # Check adjacency constraint
  2282                                                   if (
  2283       535    5985688.0  11188.2      0.0              max_sheets_per_order
  2284       535    5994756.0  11205.2      0.0              and order_id != "additional"
  2285       535    5993086.0  11202.0      0.0              and order_id != "unknown"
  2286       535    6117656.0  11434.9      0.0              and not str(order_id).startswith("group_")
  2287       535    6022330.0  11256.7      0.0              and order_id in order_first_sheet
  2288                                                   ):
  2289        44     528430.0  12009.8      0.0              first_sheet = order_first_sheet[order_id]
  2290                                                       # Find all sheets where this order appears
  2291        44     517328.0  11757.5      0.0              order_sheets = []
  2292       846   10768273.0  12728.5      0.0              for layout in placed_layouts:
  2293       802   10559468.0  13166.4      0.0                  if order_id in layout["orders_on_sheet"]:
  2294        68     802605.0  11803.0      0.0                      order_sheets.append(layout["sheet_number"])
  2295                                           
  2296        44     512650.0  11651.1      0.0              if order_sheets:
  2297        32     391698.0  12240.6      0.0                  min_sheet = min(order_sheets)
  2298        32     389669.0  12177.2      0.0                  max_sheet = max(order_sheets)
  2299        32     409500.0  12796.9      0.0                  expected_max_sheet = first_sheet + max_sheets_per_order - 1
  2300                                           
  2301        32     396027.0  12375.8      0.0                  if max_sheet > expected_max_sheet:
  2302                                                               adjacency_violations.append(
  2303                                                                   (order_id, min_sheet, max_sheet, expected_max_sheet)
  2304                                                               )
  2305                                                               logger.error(
  2306                                                                   f"НАРУШЕНИЕ СМЕЖНОСТИ: Заказ {order_id} размещен на листах {min_sheet}-{max_sheet}, "
  2307                                                                   f"но должен быть в диапазоне {first_sheet}-{expected_max_sheet}"
  2308                                                               )
  2309                                           
  2310       491    6062774.0  12347.8      0.0      if violated_orders or adjacency_violations:
  2311                                                   warning_parts = []
  2312                                                   if violated_orders:
  2313                                                       warning_parts.append("⚠️ Предупреждение: Нарушение ограничений заказов:")
  2314                                                       for order_id, sheets_used in violated_orders:
  2315                                                           warning_parts.append(
  2316                                                               f"Заказ {order_id}: {sheets_used} листов (лимит: {max_sheets_per_order})"
  2317                                                           )
  2318                                           
  2319                                                   if adjacency_violations:
  2320                                                       warning_parts.append("⚠️ Предупреждение: Нарушение смежности листов:")
  2321                                                       for order_id, min_sheet, max_sheet, expected_max in adjacency_violations:
  2322                                                           warning_parts.append(
  2323                                                               f"Заказ {order_id}: листы {min_sheet}-{max_sheet} (ожидалось до {expected_max})"
  2324                                                           )
  2325                                           
  2326                                                   warning_msg = "\n".join(warning_parts)
  2327                                                   logger.warning(warning_msg)
  2328                                                   if verbose:
  2329                                                       st.warning(warning_msg)
  2330                                                   # Don't raise error - allow algorithm to continue with warnings
  2331                                           
  2332                                               # NEW: SINGLE-POLYGON ORDER FILL STRATEGY - Try to place remaining single-polygon orders into existing sheets
  2333       491    6832476.0  13915.4      0.0      if remaining_orders and placed_layouts:
  2334         4      48675.0  12168.8      0.0          single_polygon_orders = {
  2335        11     198677.0  18061.5      0.0              order_id: order_polygons
  2336        15     185972.0  12398.1      0.0              for order_id, order_polygons in remaining_orders.items()
  2337        11     136805.0  12436.8      0.0              if len(order_polygons) == 1
  2338                                                   }
  2339                                           
  2340         2      24511.0  12255.5      0.0          if single_polygon_orders:
  2341         4     377731.0  94432.8      0.0              logger.info(
  2342         2      27724.0  13862.0      0.0                  f"=== ДОЗАПОЛНЕНИЕ ОДНОКОМПОНЕНТНЫМИ ЗАКАЗАМИ: {len(single_polygon_orders)} заказов ==="
  2343                                                       )
  2344         2      25210.0  12605.0      0.0              if verbose:
  2345                                                           st.info(
  2346                                                               f"🔄 Дозаполнение листов однокомпонентными заказами: {len(single_polygon_orders)} заказов"
  2347                                                           )
  2348                                           
  2349         2      24652.0  12326.0      0.0              filled_orders = 0
  2350         7     112360.0  16051.4      0.0              for order_id, order_polygons in single_polygon_orders.items():
  2351         5      61106.0  12221.2      0.0                  if len(order_polygons) != 1:
  2352                                                               continue
  2353                                           
  2354         5      62990.0  12598.0      0.0                  carpet = order_polygons[0]
  2355         5      63898.0  12779.6      0.0                  color = carpet.color
  2356                                           
  2357                                                           # Try to place this single polygon on existing sheets with same color
  2358         5      60547.0  12109.4      0.0                  placed_successfully = False
  2359        95    1237532.0  13026.7      0.0                  for layout_idx, layout in enumerate(placed_layouts):
  2360        90    1124817.0  12498.0      0.0                      sheet_color = layout.get("sheet_color", "серый")
  2361        90    1107008.0  12300.1      0.0                      if color != sheet_color:
  2362        44     524314.0  11916.2      0.0                          continue
  2363                                           
  2364        46     582417.0  12661.2      0.0                      current_usage = layout.get("usage_percent", 0)
  2365        46     582136.0  12655.1      0.0                      if current_usage >= 95:  # Skip nearly full sheets
  2366                                                                   continue
  2367                                           
  2368        46     573128.0  12459.3      0.0                      sheet_size = layout["sheet_size"]
  2369        46     567049.0  12327.2      0.0                      existing_placed = layout["placed_polygons"]
  2370                                           
  2371        92    1388433.0  15091.7      0.0                      logger.debug(
  2372        46     738212.0  16048.1      0.0                          f"Пытаемся добавить {order_id} на лист #{layout['sheet_number']} (заполнение: {current_usage:.1f}%)"
  2373                                                               )
  2374                                           
  2375        46     563209.0  12243.7      0.0                      try:
  2376        92     1.13e+10 1.23e+08      2.3                          additional_placed, still_remaining = bin_packing_with_existing(
  2377        46     567404.0  12334.9      0.0                              [carpet], existing_placed, sheet_size, verbose=False
  2378                                                                   )
  2379                                           
  2380        46    1195764.0  25994.9      0.0                          if additional_placed:
  2381                                                                       # Update the layout with the additional polygon
  2382         1      13478.0  13478.0      0.0                              placed_layouts[layout_idx]["placed_polygons"] = (
  2383         1      13269.0  13269.0      0.0                                  existing_placed + additional_placed
  2384                                                                       )
  2385         2      91133.0  45566.5      0.0                              new_usage = calculate_usage_percent(
  2386         1      13059.0  13059.0      0.0                                  placed_layouts[layout_idx]["placed_polygons"],
  2387         1      11871.0  11871.0      0.0                                  sheet_size,
  2388                                                                       )
  2389         1      14595.0  14595.0      0.0                              placed_layouts[layout_idx]["usage_percent"] = new_usage
  2390                                           
  2391                                                                       # Update orders_on_sheet set
  2392         1      14036.0  14036.0      0.0                              if "orders_on_sheet" not in placed_layouts[layout_idx]:
  2393                                                                           placed_layouts[layout_idx]["orders_on_sheet"] = set()
  2394         1      10335.0  10335.0      0.0                              placed_layouts[layout_idx]["orders_on_sheet"].add(order_id)
  2395                                           
  2396                                                                       # Track sheet usage for this order
  2397                                                                       if order_id not in order_sheet_usage:
  2398                                                                           order_sheet_usage[order_id] = 0
  2399                                                                       order_sheet_usage[order_id] = (
  2400                                                                           1  # Single polygon order uses 1 sheet
  2401                                                                       )
  2402                                           
  2403                                                                       filled_orders += 1
  2404                                                                       placed_successfully = True
  2405                                           
  2406                                                                       logger.info(
  2407                                                                           f"✅ ДОЗАПОЛНЕНИЕ: Заказ {order_id} размещен на лист #{layout['sheet_number']} ({current_usage:.1f}% → {new_usage:.1f}%)"
  2408                                                                       )
  2409                                                                       if verbose:
  2410                                                                           st.success(
  2411                                                                               f"✅ Заказ {order_id} добавлен на лист #{layout['sheet_number']} ({current_usage:.1f}% → {new_usage:.1f}%)"
  2412                                                                           )
  2413                                                                       break
  2414         1      22207.0  22207.0      0.0                      except Exception as e:
  2415         2      47696.0  23848.0      0.0                          logger.debug(
  2416         1      22347.0  22347.0      0.0                              f"Не удалось добавить {order_id} на лист #{layout['sheet_number']}: {e}"
  2417                                                                   )
  2418         1      17249.0  17249.0      0.0                          continue
  2419                                           
  2420         5      65782.0  13156.4      0.0                  if placed_successfully:
  2421                                                               # Remove this order from remaining_orders
  2422                                                               del remaining_orders[order_id]
  2423                                           
  2424         2     488697.0 244348.5      0.0              logger.info(f"Дозаполнение завершено: {filled_orders} заказов размещено")
  2425         2      33939.0  16969.5      0.0              if verbose:
  2426                                                           st.info(
  2427                                                               f"📊 Дозаполнение: {filled_orders} однокомпонентных заказов размещено"
  2428                                                           )
  2429                                           
  2430       491    6900211.0  14053.4      0.0      remaining_polygons_list = []
  2431       990   19824224.0  20024.5      0.0      for order_id, remaining_polygons in remaining_orders.items():
  2432       499    6957827.0  13943.5      0.0          remaining_polygons_list.extend(remaining_polygons)
  2433                                           
  2434       982   87329327.0  88930.1      0.0      logger.info(
  2435       491    7184430.0  14632.2      0.0          f"Проверка дозаполнения: remaining_orders={len(remaining_orders)}, remaining_polygons_list={len(remaining_polygons_list)}, placed_layouts={len(placed_layouts)}"
  2436                                               )
  2437                                           
  2438                                               # НОВОЕ: Создание дополнительных листов для неразмещенных Excel полигонов
  2439                                               # Анализируем неразмещенные полигоны из remaining_polygons_list (Excel полигоны, не приоритет 2)
  2440       982   14028507.0  14285.6      0.0      remaining_excel_polygons = [
  2441       982   26973399.0  27467.8      0.0          p for p in remaining_polygons_list if p.priority != 2
  2442                                               ]  # Не приоритет 2
  2443                                           
  2444       981   16067242.0  16378.4      0.0      if remaining_excel_polygons and any(
  2445       490    6966694.0  14217.7      0.0          sheet["count"] - sheet["used"] > 0 for sheet in sheet_inventory
  2446                                               ):
  2447       980   89883088.0  91717.4      0.0          logger.info(
  2448       490    7233405.0  14762.1      0.0              f"Создаем дополнительные листы для {len(remaining_excel_polygons)} неразмещенных Excel полигонов"
  2449                                                   )
  2450                                           
  2451                                                   # Группируем по цветам
  2452       490    7179964.0  14653.0      0.0          polygons_by_color = {}
  2453      1004   20663839.0  20581.5      0.0          for poly in remaining_excel_polygons:
  2454       514    7411534.0  14419.3      0.0              color = poly.color
  2455       514    7406787.0  14410.1      0.0              if color not in polygons_by_color:
  2456       491    7129268.0  14519.9      0.0                  polygons_by_color[color] = []
  2457       514    7439598.0  14473.9      0.0              polygons_by_color[color].append(poly)
  2458                                           
  2459                                                   # Пытаемся создать листы для каждого цвета
  2460       490    7060826.0  14409.8      0.0          additional_created = 0
  2461       981   20723746.0  21125.1      0.0          for color, color_polygons in polygons_by_color.items():
  2462                                                       # Найти доступные листы этого цвета
  2463       491    7136466.0  14534.6      0.0              available_count = 0
  2464       984   20624669.0  20960.0      0.0              for sheet_type in sheet_inventory:
  2465                                                           if (
  2466       493    7220198.0  14645.4      0.0                      sheet_type["color"] == color
  2467       491    7188815.0  14641.2      0.0                      and sheet_type["used"] < sheet_type["count"]
  2468                                                           ):
  2469       491    7215373.0  14695.3      0.0                      available_count = sheet_type["count"] - sheet_type["used"]
  2470                                           
  2471       491    7154038.0  14570.3      0.0              if available_count > 0:
  2472       982   89768771.0  91414.2      0.0                  logger.info(
  2473       491    7524114.0  15324.1      0.0                      f"Доступно {available_count} листов цвета {color} для {len(color_polygons)} полигонов"
  2474                                                           )
  2475                                           
  2476                                                           # Пытаемся разместить полигоны на новых листах
  2477       491    7331862.0  14932.5      0.0                  try:
  2478       982    9775113.0   9954.3      0.0                      new_layouts, still_unplaced = bin_packing_with_inventory(
  2479       491    7290305.0  14847.9      0.0                          color_polygons,
  2480       491   33325197.0  67872.1      0.0                          [sheet for sheet in sheet_inventory if sheet["color"] == color],
  2481       491    7285195.0  14837.5      0.0                          verbose=False,
  2482       491    7281221.0  14829.4      0.0                          max_sheets_per_order=max_sheets_per_order,
  2483                                                               )
  2484                                           
  2485       490    3991758.0   8146.4      0.0                      if new_layouts:
  2486                                                                   # Обновляем номера листов
  2487         8     134358.0  16794.8      0.0                          for layout in new_layouts:
  2488         6      82752.0  13792.0      0.0                              sheet_counter += 1
  2489         6      82124.0  13687.3      0.0                              layout["sheet_number"] = sheet_counter
  2490                                           
  2491         2      29121.0  14560.5      0.0                          placed_layouts.extend(new_layouts)
  2492         2      28422.0  14211.0      0.0                          additional_created += len(new_layouts)
  2493                                           
  2494                                                                   # Обновляем использование листов
  2495         3      65782.0  21927.3      0.0                          for sheet_type in sheet_inventory:
  2496         3      42739.0  14246.3      0.0                              if sheet_type["color"] == color:
  2497         4      57125.0  14281.2      0.0                                  sheet_type["used"] += len(
  2498         4      55728.0  13932.0      0.0                                      [
  2499         6     157684.0  26280.7      0.0                                          layout
  2500        10     138898.0  13889.8      0.0                                          for layout in new_layouts
  2501         6      83173.0  13862.2      0.0                                          if layout.get("sheet_color") == color
  2502                                                                               ]
  2503                                                                           )
  2504         2      28493.0  14246.5      0.0                                  break
  2505                                           
  2506                                                                   # Убираем размещенные полигоны из remaining_polygons_list
  2507         4      69833.0  17458.2      0.0                          placed_count = sum(
  2508         2      28422.0  14211.0      0.0                              len(layout["placed_polygons"]) for layout in new_layouts
  2509                                                                   )
  2510         4      57054.0  14263.5      0.0                          remaining_polygons_list = [
  2511        31     540935.0  17449.5      0.0                              p
  2512        35     494141.0  14118.3      0.0                              for p in remaining_polygons_list
  2513        31     918246.0  29620.8      0.0                              if p not in color_polygons[:placed_count]
  2514                                                                   ]
  2515                                           
  2516         4     345328.0  86332.0      0.0                          logger.info(
  2517         2      29749.0  14874.5      0.0                              f"Создано {len(new_layouts)} дополнительных листов цвета {color}"
  2518                                                                   )
  2519                                           
  2520         1      22835.0  22835.0      0.0                  except Exception as e:
  2521         2     188551.0  94275.5      0.0                      logger.warning(
  2522         1      23673.0  23673.0      0.0                          f"Ошибка создания дополнительных листов для {color}: {e}"
  2523                                                               )
  2524                                           
  2525       490    7292529.0  14882.7      0.0          if additional_created > 0:
  2526         2     164947.0  82473.5      0.0              logger.info(
  2527         1      14805.0  14805.0      0.0                  f"✅ Создано {additional_created} дополнительных листов для Excel полигонов"
  2528                                                       )
  2529                                           
  2530       491    7389035.0  15049.0      0.0      if remaining_polygons_list and placed_layouts:
  2531         2      30027.0  15013.5      0.0          if verbose:
  2532                                                       st.info(
  2533                                                           f"🔄 Пытаемся дозаполнить {len(placed_layouts)} существующих листов {len(remaining_polygons_list)} оставшимися деталями"
  2534                                                       )
  2535                                               else:
  2536       978   89045389.0  91048.5      0.0          logger.info(
  2537       489    7607412.0  15557.1      0.0              f"Дозаполнение не запущено: remaining_polygons_list={len(remaining_polygons_list)}, placed_layouts={len(placed_layouts)}"
  2538                                                   )
  2539                                           
  2540       978   86423790.0  88367.9      0.0          logger.info(
  2541       489    7699400.0  15745.2      0.0              f"Попытка дозаполнения: {len(remaining_polygons_list)} полигонов на {len(placed_layouts)} листах"
  2542                                                   )
  2543                                           
  2544       489   14682563.0  30025.7      0.0          for layout_idx, layout in enumerate(placed_layouts):
  2545         1      14805.0  14805.0      0.0              if not remaining_polygons_list:
  2546         1      15713.0  15713.0      0.0                  break
  2547                                           
  2548                                                       sheet_size = layout["sheet_size"]
  2549                                                       existing_placed = layout["placed_polygons"]
  2550                                                       current_usage = layout["usage_percent"]
  2551                                           
  2552                                                       if current_usage >= 95:  # Skip nearly full sheets
  2553                                                           continue
  2554                                           
  2555                                                       logger.info(
  2556                                                           f"Пытаемся дозаполнить лист #{layout['sheet_number']} (заполнение: {current_usage:.1f}%)"
  2557                                                       )
  2558                                           
  2559                                                       # Try to place remaining polygons on this existing sheet
  2560                                                       try:
  2561                                                           additional_placed, still_remaining = bin_packing_with_existing(
  2562                                                               remaining_polygons_list, existing_placed, sheet_size, verbose=False
  2563                                                           )
  2564                                           
  2565                                                           if additional_placed:
  2566                                                               # Update the layout with additional polygons
  2567                                                               placed_layouts[layout_idx]["placed_polygons"] = (
  2568                                                                   existing_placed + additional_placed
  2569                                                               )
  2570                                                               placed_layouts[layout_idx]["usage_percent"] = (
  2571                                                                   calculate_usage_percent(
  2572                                                                       placed_layouts[layout_idx]["placed_polygons"], sheet_size
  2573                                                                   )
  2574                                                               )
  2575                                           
  2576                                                               new_usage = placed_layouts[layout_idx]["usage_percent"]
  2577                                                               logger.info(
  2578                                                                   f"✅ Дозаполнен лист #{layout['sheet_number']}: +{len(additional_placed)} деталей ({current_usage:.1f}% → {new_usage:.1f}%)"
  2579                                                               )
  2580                                           
  2581                                                               if verbose:
  2582                                                                   st.success(
  2583                                                                       f"✅ Дозаполнен лист #{layout['sheet_number']}: +{len(additional_placed)} деталей ({current_usage:.1f}% → {new_usage:.1f}%)"
  2584                                                                   )
  2585                                           
  2586                                                               # Update remaining polygons list
  2587                                                               remaining_polygons_list = still_remaining
  2588                                           
  2589                                                           else:
  2590                                                               logger.info(f"Лист #{layout['sheet_number']} нельзя дозаполнить")
  2591                                                       except Exception as e:
  2592                                                           logger.warning(
  2593                                                               f"Ошибка при дозаполнении листа #{layout['sheet_number']}: {e}"
  2594                                                           )
  2595                                           
  2596                                               # Add any remaining unplaced polygons to the unplaced list
  2597       491    8082431.0  16461.2      0.0      all_unplaced.extend(remaining_polygons_list)
  2598                                           
  2599       491   77441281.0 157721.5      0.0      logger.info("=== ОКОНЧАНИЕ bin_packing_with_inventory ===")
  2600       982   88450382.0  90071.7      0.0      logger.info(
  2601       491    8200935.0  16702.5      0.0          f"ИТОГОВЫЙ РЕЗУЛЬТАТ: {len(placed_layouts)} листов использовано, {len(all_unplaced)} объектов не размещено"
  2602                                               )
  2603                                           
  2604       491   78415730.0 159706.2      0.0      logger.info("Финальное распределение по заказам:")
  2605      1026   24312015.0  23695.9      0.0      for order_id, sheets_used in order_sheet_usage.items():
  2606       535   84810428.0 158524.2      0.0          logger.info(f"  • Заказ {order_id}: {sheets_used} листов")
  2607                                           
  2608       491    8208916.0  16718.8      0.0      if verbose:
  2609                                                   st.info(
  2610                                                       f"Размещение завершено: {len(placed_layouts)} листов использовано, {len(all_unplaced)} объектов не размещено"
  2611                                                   )
  2612                                           
  2613                                                   # Show summary by orders using the tracked usage
  2614                                                   if order_sheet_usage:
  2615                                                       st.success("✅ Распределение по заказам:")
  2616                                                       for order_id, sheet_count in order_sheet_usage.items():
  2617                                                           if order_id != "unknown":  # Only show real orders
  2618                                                               status = (
  2619                                                                   "✅"
  2620                                                                   if sheet_count <= (max_sheets_per_order or float("inf"))
  2621                                                                   else "❌"
  2622                                                               )
  2623                                                               st.info(f"  {status} Заказ {order_id}: {sheet_count} листов")
  2624                                           
  2625                                               # PRIORITY 2 PROCESSING: Try to fit priority 2 polygons into existing sheets only
  2626                                               # Размещаем приоритет 2 В САМУЮ ПОСЛЕДНЮЮ ОЧЕРЕДЬ после всех операций
  2627       491    8988465.0  18306.4      0.0      if priority2_carpets and placed_layouts:
  2628         2     159151.0  79575.5      0.0          logger.info(
  2629         1      17179.0  17179.0      0.0              f"=== ОБРАБОТКА ПРИОРИТЕТА 2: {len(priority2_carpets)} полигонов ==="
  2630                                                   )
  2631         1      16411.0  16411.0      0.0          if verbose:
  2632                                                       st.info(
  2633                                                           f"🔄 Размещение файлов приоритета 2: {len(priority2_carpets)} файлов в существующие листы"
  2634                                                       )
  2635                                           
  2636                                                   # Update progress for priority 2 processing
  2637         1      16410.0  16410.0      0.0          if progress_callback:
  2638         2    1162245.0 581122.5      0.0              progress_callback(
  2639         1      16970.0  16970.0      0.0                  98, f"Обработка файлов приоритета 2: {len(priority2_carpets)} файлов"
  2640                                                       )
  2641                                           
  2642         1      19065.0  19065.0      0.0          priority2_placed = 0
  2643         1      19624.0  19624.0      0.0          priority2_remaining = list(priority2_carpets)
  2644                                           
  2645                                                   # Try to fill existing sheets with priority 2 polygons
  2646        19     369418.0  19443.1      0.0          for layout_idx, layout in enumerate(placed_layouts):
  2647        19     329333.0  17333.3      0.0              if not priority2_remaining:
  2648         1      17249.0  17249.0      0.0                  break
  2649                                           
  2650        18     313553.0  17419.6      0.0              sheet_size = layout["sheet_size"]
  2651        36     627243.0  17423.4      0.0              sheet_color = layout.get(
  2652        18     314948.0  17497.1      0.0                  "sheet_color", "серый"
  2653                                                       )  # Get color directly from layout
  2654                                           
  2655        18     305244.0  16958.0      0.0              existing_placed = layout["placed_polygons"]
  2656        18     305521.0  16973.4      0.0              current_usage = layout["usage_percent"]
  2657                                           
  2658        18     311526.0  17307.0      0.0              if current_usage >= 95:  # Skip nearly full sheets
  2659                                                           continue
  2660                                           
  2661        36    5297170.0 147143.6      0.0              logger.info(
  2662        18     365160.0  20286.7      0.0                  f"Пытаемся добавить приоритет 2 на лист #{layout['sheet_number']} (заполнение: {current_usage:.1f}%, цвет листа: {sheet_color})"
  2663                                                       )
  2664                                           
  2665                                                       # Filter priority 2 polygons by color compatibility
  2666        18     355245.0  19735.8      0.0              compatible_priority2 = []
  2667       541    9524698.0  17605.7      0.0              for carpet in priority2_remaining:
  2668       523    8952757.0  17118.1      0.0                  poly_color = carpet.color
  2669                                           
  2670                                                           # Skip detailed logging for speed
  2671       523    8921547.0  17058.4      0.0                  if poly_color == sheet_color:
  2672       243    4095051.0  16852.1      0.0                      compatible_priority2.append(carpet)
  2673                                           
  2674        36    4156989.0 115471.9      0.0              logger.info(
  2675        18     322420.0  17912.2      0.0                  f"Найдено {len(compatible_priority2)} совместимых полигонов приоритета 2 из {len(priority2_remaining)}"
  2676                                                       )
  2677                                           
  2678        18     328499.0  18249.9      0.0              if not compatible_priority2:
  2679         4      74862.0  18715.5      0.0                  logger.debug(
  2680         2      35824.0  17912.0      0.0                      f"Нет совместимых по цвету приоритет 2 полигонов для листа {sheet_color}"
  2681                                                           )
  2682         2      35684.0  17842.0      0.0                  continue
  2683                                           
  2684                                                       # Try to place compatible priority 2 polygons on this existing sheet
  2685        32     1.09e+11  3.4e+09     22.2              additional_placed, still_remaining = bin_packing_with_existing(
  2686        16     278983.0  17436.4      0.0                  compatible_priority2, existing_placed, sheet_size, verbose=False
  2687                                                       )
  2688                                           
  2689        16     325072.0  20317.0      0.0              if additional_placed:
  2690                                                           # Update the layout with additional polygons
  2691         8     161383.0  20172.9      0.0                  placed_layouts[layout_idx]["placed_polygons"] = (
  2692         8     155661.0  19457.6      0.0                      existing_placed + additional_placed
  2693                                                           )
  2694        16     942963.0  58935.2      0.0                  placed_layouts[layout_idx]["usage_percent"] = calculate_usage_percent(
  2695         8     143089.0  17886.1      0.0                      placed_layouts[layout_idx]["placed_polygons"], sheet_size
  2696                                                           )
  2697         8     146859.0  18357.4      0.0                  new_usage = placed_layouts[layout_idx]["usage_percent"]
  2698         8     153773.0  19221.6      0.0                  priority2_placed += len(additional_placed)
  2699                                           
  2700        16    2671066.0 166941.6      0.0                  logger.info(
  2701         8     187923.0  23490.4      0.0                      f"✅ Добавлено {len(additional_placed)} файлов приоритета 2 на лист #{layout['sheet_number']} ({current_usage:.1f}% → {new_usage:.1f}%)"
  2702                                                           )
  2703         8     153284.0  19160.5      0.0                  if verbose:
  2704                                                               st.success(
  2705                                                                   f"✅ Добавлено {len(additional_placed)} файлов приоритета 2 на лист #{layout['sheet_number']}"
  2706                                                               )
  2707                                           
  2708                                                           # Remove placed polygons from priority2_remaining
  2709                                                           # ИСПРАВЛЕНИЕ: точное совпадение по 3 полям для правильного удаления
  2710         8     168787.0  21098.4      0.0                  placed_keys = set()
  2711        48    1015313.0  21152.4      0.0                  for placed_poly in additional_placed:
  2712        40     735140.0  18378.5      0.0                      if len(placed_poly) >= 5:
  2713                                                                   # Полигон из bin_packing_with_existing: (polygon, x, y, angle, filename, color, order_id)
  2714        40     752943.0  18823.6      0.0                          key = (
  2715        40     731086.0  18277.2      0.0                              placed_poly[4],
  2716        40     728432.0  18210.8      0.0                              placed_poly[5],
  2717        40     731573.0  18289.3      0.0                              placed_poly[6],
  2718                                                                   )  # filename, color, order_id
  2719                                                               else:
  2720                                                                   # Обычный полигон: (polygon, filename, color, order_id)
  2721                                                                   key = (placed_poly[1], placed_poly[2], placed_poly[3])
  2722        40     738770.0  18469.2      0.0                      placed_keys.add(key)
  2723                                           
  2724                                                           # Удаляем полигоны с совпадающими ключами
  2725        16     290365.0  18147.8      0.0                  priority2_remaining = [
  2726       200    6453469.0  32267.3      0.0                      p
  2727       216    4058249.0  18788.2      0.0                      for p in priority2_remaining
  2728       200    3860964.0  19304.8      0.0                      if (p.filename, p.color, p.order_id) not in placed_keys
  2729                                                           ]
  2730                                           
  2731         2     189668.0  94834.0      0.0          logger.info(
  2732         1      19833.0  19833.0      0.0              f"Приоритет 2: размещено {priority2_placed}, осталось {len(priority2_remaining)}"
  2733                                                   )
  2734         1      18925.0  18925.0      0.0          if priority2_remaining:
  2735                                                       logger.info(
  2736                                                           f"⚠️ {len(priority2_remaining)} файлов приоритета 2 не размещены (новые листы не создаются)"
  2737                                                       )
  2738                                                       if verbose:
  2739                                                           st.warning(
  2740                                                               f"⚠️ {len(priority2_remaining)} файлов приоритета 2 не удалось разместить в существующие листы"
  2741                                                           )
  2742                                           
  2743                                                   # Add remaining priority 2 polygons to unplaced list
  2744         1      19135.0  19135.0      0.0          all_unplaced.extend(priority2_remaining)
  2745                                           
  2746       490    9375608.0  19133.9      0.0      elif priority2_carpets and not placed_layouts:
  2747                                                   logger.warning(
  2748                                                       f"Нет существующих листов для размещения {len(priority2_carpets)} файлов приоритета 2"
  2749                                                   )
  2750                                                   if verbose:
  2751                                                       st.warning(
  2752                                                           f"⚠️ Нет размещенных листов для {len(priority2_carpets)} файлов приоритета 2"
  2753                                                       )
  2754                                                   # Add all priority 2 polygons to unplaced list since no sheets were created
  2755                                                   all_unplaced.extend(priority2_carpets)
  2756       490    9351649.0  19085.0      0.0      elif priority2_carpets and not order_groups:
  2757                                                   # Special case: only priority 2 polygons exist, no priority 1 files
  2758                                                   logger.info(
  2759                                                       f"Только priority 2 файлы без существующих листов: {len(priority2_carpets)} файлов не размещаются"
  2760                                                   )
  2761                                                   if verbose:
  2762                                                       st.warning(
  2763                                                           f"⚠️ Только файлы приоритета 2: {len(priority2_carpets)} файлов не размещаются (новые листы не создаются)"
  2764                                                       )
  2765                                                   all_unplaced.extend(priority2_carpets)
  2766                                           
  2767                                               # ИСПРАВЛЕНИЕ: Перенумеровываем листы для группировки по цветам
  2768                                               # Листы должны идти подряд по цветам: 1-N чёрные, N+1-M серые, M+1-K остальные
  2769       491    9683584.0  19722.2      0.0      if placed_layouts:
  2770         6     531993.0  88665.5      0.0          logger.info(
  2771         3      58451.0  19483.7      0.0              f"Перенумеровываем {len(placed_layouts)} листов для группировки по цветам"
  2772                                                   )
  2773                                           
  2774                                                   # Группируем листы по цветам
  2775         3      58172.0  19390.7      0.0          sheets_by_color = {"чёрный": [], "серый": [], "other": []}
  2776                                           
  2777        37     746386.0  20172.6      0.0          for layout in placed_layouts:
  2778        34     639607.0  18812.0      0.0              sheet_color = layout.get("sheet_color", "серый")
  2779        34     648056.0  19060.5      0.0              if sheet_color == "чёрный":
  2780        21     406714.0  19367.3      0.0                  sheets_by_color["чёрный"].append(layout)
  2781        13     243231.0  18710.1      0.0              elif sheet_color == "серый":
  2782        13     246512.0  18962.5      0.0                  sheets_by_color["серый"].append(layout)
  2783                                                       else:
  2784                                                           sheets_by_color["other"].append(layout)
  2785                                           
  2786                                                   # Перенумеровываем листы по группам
  2787         3      56354.0  18784.7      0.0          new_sheet_number = 1
  2788         3      56913.0  18971.0      0.0          renumbered_layouts = []
  2789                                           
  2790                                                   # Сначала черные листы
  2791        24     499243.0  20801.8      0.0          for layout in sheets_by_color["чёрный"]:
  2792        21     393305.0  18728.8      0.0              layout["sheet_number"] = new_sheet_number
  2793        21     392186.0  18675.5      0.0              renumbered_layouts.append(layout)
  2794        21     391350.0  18635.7      0.0              new_sheet_number += 1
  2795                                           
  2796                                                   # Потом серые листы
  2797        16     347423.0  21713.9      0.0          for layout in sheets_by_color["серый"]:
  2798        13     241763.0  18597.2      0.0              layout["sheet_number"] = new_sheet_number
  2799        13     241626.0  18586.6      0.0              renumbered_layouts.append(layout)
  2800        13     256848.0  19757.5      0.0              new_sheet_number += 1
  2801                                           
  2802                                                   # Потом остальные листы
  2803         3     109638.0  36546.0      0.0          for layout in sheets_by_color["other"]:
  2804                                                       layout["sheet_number"] = new_sheet_number
  2805                                                       renumbered_layouts.append(layout)
  2806                                                       new_sheet_number += 1
  2807                                           
  2808         3      57752.0  19250.7      0.0          placed_layouts = renumbered_layouts
  2809         6     557831.0  92971.8      0.0          logger.info(
  2810         3      60406.0  20135.3      0.0              f"Листы перенумерованы: чёрных {len(sheets_by_color['чёрный'])}, серых {len(sheets_by_color['серый'])}, других {len(sheets_by_color['other'])}"
  2811                                                   )
  2812                                           
  2813                                               # Final progress update
  2814       491    9794825.0  19948.7      0.0      if progress_callback:
  2815         1    1033257.0 1.03e+06      0.0          progress_callback(100, f"Завершено: {len(placed_layouts)} листов создано")
  2816                                           
  2817       491    5411488.0  11021.4      0.0      return placed_layouts, all_unplaced

  1.74 seconds - /home/sasha/proj/2025/eva_layout/layout_optimizer.py:1187 - bin_packing
481.71 seconds - /home/sasha/proj/2025/eva_layout/layout_optimizer.py:1072 - bin_packing_with_existing
490.42 seconds - /home/sasha/proj/2025/eva_layout/layout_optimizer.py:1617 - bin_packing_with_inventory
