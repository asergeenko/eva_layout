#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–ª–æ–µ–≤ –≤ DXF —Ñ–∞–π–ª–µ.
"""

import ezdxf

def check_layer_names():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è —Å–ª–æ–µ–≤ –≤ DXF —Ñ–∞–π–ª–µ."""
    print("=== –ü–†–û–í–ï–†–ö–ê –ù–ê–ó–í–ê–ù–ò–ô –°–õ–û–ï–í ===")
    
    dxf_path = "/home/sasha/proj/2025/eva_layout/200_140_1_black.dxf"
    
    try:
        doc = ezdxf.readfile(dxf_path)
        msp = doc.modelspace()
        
        # –°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–ª–æ–∏
        layers = set()
        splines = [e for e in msp if e.dxftype() == 'SPLINE']
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(splines)} SPLINE —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
        
        for spline in splines:
            layer = spline.dxf.layer
            color = getattr(spline.dxf, 'color', 256)
            layers.add((layer, color))
        
        print(f"\\nüìã –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–ª–æ–∏ (layer, color):")
        for layer, color in sorted(layers):
            count = len([s for s in splines if s.dxf.layer == layer and getattr(s.dxf, 'color', 256) == color])
            print(f"  '{layer}' color={color}: {count} splines")
        
        # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ SPLINE –ø–æ–¥—Ä–æ–±–Ω–æ
        print(f"\\nüîç –î–µ—Ç–∞–ª–∏ –ø–µ—Ä–≤—ã—Ö 5 SPLINE:")
        for i, spline in enumerate(splines[:5]):
            layer = spline.dxf.layer
            color = getattr(spline.dxf, 'color', 256)
            
            control_points = spline.control_points
            if control_points:
                first_point = control_points[0]
                if hasattr(first_point, 'x') and hasattr(first_point, 'y'):
                    x, y = first_point.x, first_point.y
                elif len(first_point) >= 2:
                    x, y = float(first_point[0]), float(first_point[1])
                else:
                    x, y = "unknown", "unknown"
                
                print(f"  SPLINE {i+1}: layer='{layer}', color={color}, first_point=({x}, {y})")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    check_layer_names()