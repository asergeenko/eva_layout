#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è.
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø–ª–æ—Ç–Ω–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
–∏ —Å–∫–æ—Ä–æ—Å—Ç—å –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–∞.
"""

import sys
import os

def enable_improved_packing():
    """–í–∫–ª—é—á–∞–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–∑–º–µ—â–µ–Ω–∏—è."""
    
    layout_optimizer_path = "layout_optimizer.py"
    
    if not os.path.exists(layout_optimizer_path):
        print("‚ùå –§–∞–π–ª layout_optimizer.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
    with open(layout_optimizer_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    old_setting = "USE_IMPROVED_PACKING_BY_DEFAULT = False"
    new_setting = "USE_IMPROVED_PACKING_BY_DEFAULT = True"
    
    if old_setting in content:
        new_content = content.replace(old_setting, new_setting)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        with open(layout_optimizer_path, 'w', encoding='utf-8') as f:
            f.write(new_content)
        
        print("‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –í–ö–õ–Æ–ß–ï–ù!")
        print("   –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≥—Ä–∞–º–º–∞ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º.")
        print("   –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–º–µ–¥–ª–∏—Ç—å —Ä–∞–±–æ—Ç—É, –Ω–æ —É–ª—É—á—à–∏—Ç—å –ø–ª–æ—Ç–Ω–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è.")
        return True
    
    elif new_setting in content:
        print("‚ÑπÔ∏è  –£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —É–∂–µ –≤–∫–ª—é—á–µ–Ω.")
        return True
    
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –≤ —Ñ–∞–π–ª–µ.")
        return False

def disable_improved_packing():
    """–û—Ç–∫–ª—é—á–∞–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–∑–º–µ—â–µ–Ω–∏—è."""
    
    layout_optimizer_path = "layout_optimizer.py"
    
    if not os.path.exists(layout_optimizer_path):
        print("‚ùå –§–∞–π–ª layout_optimizer.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
    with open(layout_optimizer_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    old_setting = "USE_IMPROVED_PACKING_BY_DEFAULT = True"
    new_setting = "USE_IMPROVED_PACKING_BY_DEFAULT = False"
    
    if old_setting in content:
        new_content = content.replace(old_setting, new_setting)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
        with open(layout_optimizer_path, 'w', encoding='utf-8') as f:
            f.write(new_content)
        
        print("‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –û–¢–ö–õ–Æ–ß–ï–ù!")
        print("   –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≥—Ä–∞–º–º–∞ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –±—ã—Å—Ç—Ä—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º.")
        return True
    
    elif new_setting in content:
        print("‚ÑπÔ∏è  –£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω.")
        return True
    
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –≤ —Ñ–∞–π–ª–µ.")
        return False

def check_current_setting():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∞–ª–≥–æ—Ä–∏—Ç–º–∞."""
    
    layout_optimizer_path = "layout_optimizer.py"
    
    if not os.path.exists(layout_optimizer_path):
        print("‚ùå –§–∞–π–ª layout_optimizer.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return None
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        sys.path.insert(0, os.path.dirname(os.path.abspath(layout_optimizer_path)))
        from layout_optimizer import (
            USE_IMPROVED_PACKING_BY_DEFAULT, IMPROVED_PACKING_AVAILABLE,
            USE_POLYGONAL_PACKING_BY_DEFAULT, POLYGONAL_PACKING_AVAILABLE
        )
        
        print("üìä –¢–ï–ö–£–©–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò –ê–õ–ì–û–†–ò–¢–ú–û–í –†–ê–ó–ú–ï–©–ï–ù–ò–Ø:")
        print(f"   –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º: ‚úÖ –í—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω")
        print(f"   –£–ª—É—á—à–µ–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º: {'‚úÖ –î–∞' if IMPROVED_PACKING_AVAILABLE else '‚ùå –ù–µ—Ç'}")
        print(f"   –ü–æ–ª–∏–≥–æ–Ω–∞–ª—å–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º: {'‚úÖ –î–∞' if POLYGONAL_PACKING_AVAILABLE else '‚ùå –ù–µ—Ç'}")
        print()
        print(f"   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {'‚úÖ –î–∞' if USE_IMPROVED_PACKING_BY_DEFAULT else '‚ùå –ù–µ—Ç'}")
        print(f"   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª–∏–≥–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {'‚úÖ –î–∞' if USE_POLYGONAL_PACKING_BY_DEFAULT else '‚ùå –ù–µ—Ç'}")
        
        if POLYGONAL_PACKING_AVAILABLE and USE_POLYGONAL_PACKING_BY_DEFAULT:
            print("\nüî∑ –ê–∫—Ç–∏–≤–µ–Ω: –ü–û–õ–ò–ì–û–ù–ê–õ–¨–ù–´–ô –∞–ª–≥–æ—Ä–∏—Ç–º")
            print("   ‚Ä¢ –ò—Å—Ç–∏–Ω–Ω–æ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Ö–æ–¥")  
            print("   ‚Ä¢ No-Fit Polygon —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏")
            print("   ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø–ª–æ—Ç–Ω–æ—Å—Ç—å —Ä–∞–∑–º–µ—â–µ–Ω–∏—è")
        elif IMPROVED_PACKING_AVAILABLE and USE_IMPROVED_PACKING_BY_DEFAULT:
            print("\nüöÄ –ê–∫—Ç–∏–≤–µ–Ω: –£–õ–£–ß–®–ï–ù–ù–´–ô –∞–ª–≥–æ—Ä–∏—Ç–º")
            print("   ‚Ä¢ –ë–æ–ª–µ–µ —Ç–æ—á–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ")  
            print("   ‚Ä¢ –õ—É—á—à–∞—è –ø–ª–æ—Ç–Ω–æ—Å—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∫–∏")
            print("   ‚Ä¢ –ú–µ–¥–ª–µ–Ω–Ω–µ–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("\n‚ö° –ê–∫—Ç–∏–≤–µ–Ω: –°–¢–ê–ù–î–ê–†–¢–ù–´–ô –∞–ª–≥–æ—Ä–∏—Ç–º")
            print("   ‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è —Ä–∞–±–æ—Ç–∞")
            print("   ‚Ä¢ –•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è")
        
        return {
            'improved': USE_IMPROVED_PACKING_BY_DEFAULT,
            'polygonal': USE_POLYGONAL_PACKING_BY_DEFAULT
        }
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return None

if __name__ == "__main__":
    print("=== –ù–ê–°–¢–†–û–ô–ö–ê –ê–õ–ì–û–†–ò–¢–ú–ê –†–ê–ó–ú–ï–©–ï–ù–ò–Ø –ö–û–í–†–ò–ö–û–í ===\n")
    
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python enable_improved_packing.py status   - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        print("  python enable_improved_packing.py enable   - –≤–∫–ª—é—á–∏—Ç—å —É–ª—É—á—à–µ–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º") 
        print("  python enable_improved_packing.py disable  - –æ—Ç–∫–ª—é—á–∏—Ç—å —É–ª—É—á—à–µ–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º")
        print()
        check_current_setting()
        sys.exit(0)
    
    command = sys.argv[1].lower()
    
    if command == "status":
        check_current_setting()
    elif command == "enable":
        enable_improved_packing()
    elif command == "disable": 
        disable_improved_packing()
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
        sys.exit(1)