#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ª–æ–≥–∏–∫—É parse_dxf_complete —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤—Å–µ—Ö —Å–ª–æ–µ–≤
"""

import sys
sys.path.insert(0, '.')

import os
from layout_optimizer import parse_dxf_complete

def test_all_layers_parsing():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –≤—Å–µ—Ö —Å–ª–æ–µ–≤ –¥–ª—è TANK —Ñ–∞–π–ª–æ–≤"""
    print("üîç –¢–ï–°–¢ –ü–ê–†–°–ò–ù–ì–ê –í–°–ï–• –°–õ–û–ï–í")
    print("=" * 60)
    
    tank_files = [
        "dxf_samples/TANK 300/1.dxf",
        "dxf_samples/TANK 300/4.dxf"
    ]
    
    for tank_file in tank_files:
        if not os.path.exists(tank_file):
            print(f"‚ùå –§–∞–π–ª {tank_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            continue
            
        print(f"\nüìã –ê–ù–ê–õ–ò–ó: {os.path.basename(tank_file)}")
        
        try:
            result = parse_dxf_complete(tank_file, verbose=False)
            
            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –ø–æ —Å–ª–æ—è–º
            layer_entities = {}
            for entity_data in result.get('original_entities', []):
                layer = entity_data['layer']
                layer_entities[layer] = layer_entities.get(layer, 0) + 1
            
            print(f"  –ò—Å—Ö–æ–¥–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —Å–ª–æ—è–º:")
            total_entities = 0
            for layer, count in layer_entities.items():
                marker = "üëë" if layer == result.get('bottom_layer_name') else "  "
                print(f"    {marker} {layer}: {count} –æ–±—ä–µ–∫—Ç–æ–≤")
                total_entities += count
            
            # –ü–æ–ª–∏–≥–æ–Ω—ã –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
            polygons_count = len(result.get('polygons', []))
            print(f"  –ü–æ–ª–∏–≥–æ–Ω–æ–≤ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏: {polygons_count}")
            print(f"  –ì–ª–∞–≤–Ω—ã–π —Å–ª–æ–π: {result.get('bottom_layer_name', '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω')}")
            
            # –†–∞–∑–º–µ—Ä—ã –ø–æ–ª–∏–≥–æ–Ω–æ–≤
            if result.get('polygons'):
                total_area = sum(p.area for p in result['polygons'])
                print(f"  –û–±—â–∞—è –ø–ª–æ—â–∞–¥—å –ø–æ–ª–∏–≥–æ–Ω–æ–≤: {total_area:.0f}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –ø–µ—Ä–≤—ã—Ö –ø–æ–ª–∏–≥–æ–Ω–æ–≤
                for i, poly in enumerate(result['polygons'][:5]):
                    bounds = poly.bounds
                    width = bounds[2] - bounds[0]
                    height = bounds[3] - bounds[1]
                    print(f"    –ü–æ–ª–∏–≥–æ–Ω {i+1}: {width:.1f}√ó{height:.1f}, –ø–ª–æ—â–∞–¥—å: {poly.area:.0f}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
            print(f"\n‚úÖ –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï:")
            print(f"  –ò—Å—Ö–æ–¥–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤: {total_entities}")
            print(f"  –ü–æ–ª–∏–≥–æ–Ω–æ–≤ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏: {polygons_count}")
            
            if polygons_count >= total_entities * 0.5:  # –∫–∞–∫ –º–∏–Ω–∏–º—É–º –ø–æ–ª–æ–≤–∏–Ω–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ —Å—Ç–∞—Ç—å –ø–æ–ª–∏–≥–æ–Ω–∞–º–∏
                print(f"  ‚úÖ –•–û–†–û–®–ï–ï –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï: {polygons_count}/{total_entities} –æ–±—ä–µ–∫—Ç–æ–≤ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
            else:
                print(f"  ‚ö†Ô∏è –ù–ò–ó–ö–û–ï –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï: {polygons_count}/{total_entities} –æ–±—ä–µ–∫—Ç–æ–≤ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
                
        except Exception as e:
            print(f"    ‚ùå –û—à–∏–±–∫–∞: {e}")
            import traceback
            traceback.print_exc()

if __name__ == "__main__":
    test_all_layers_parsing()